HelpScribble project file.
13
PvOv`bsg.pbz-16O773
0
1
InstantObjects Guide 2.0



TRUE
0x0409   English (U.S.)
D:\ETHEA\InstantObjects\trunk\Help
1
BrowseButtons()
0
FALSE

FALSE
TRUE
16777215
0
16711680
8388736
255
FALSE
FALSE
FALSE
1
FALSE
FALSE
Contents
%s Contents
Index
%s Index
Previous
Next
FALSE

1241
10
ID_0
InstantObjects Guide 2.0




Testing



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\sa25\cf1\lang1040\b\f0\fs24 InstantObjects Guide\f1  2.0\cf2\{keepn\}\cf1\f0 
\par \b0\fs18 Welcome to InstantObjects, the integrated framework for developing object-oriented business solutions in Delphi.
\par 
\par InstantObjects is a RAD technology that enables creation of applications based on persistent business objects. It simplifies the process of realizing ideas into products; shortens time-to-marked, and helps keeping business focus.
\par 
\par Even though it is still a bolted on technology, InstantObjects integrates with the Delphi IDE and Object Pascal in a simple, flexible and intuitive manner. There are no sophisticated environments that have to be comprehended before application development can begin.
\par 
\par \cf2\{bmc instantobjects_logo.gif\}\cf1 
\par }
20
75DE_G6
Using InstantObjects
Using InstantObjects



Testing



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Using InstantObjects \cf1\b0\fs16 
\par \pard\sb25\sa25\cf2\strike Group Topics\cf3\strike0\{linkID=25>nav\}\{keepn\}\cf1 
\par \fs18 This user guide contains \f1 pratical\f0  guidelines for building InstantObjects-based applications. The intention is to give an overview o\f1 f\f0  the classes, components and tools that make up the InstantObjects framework. Although the guide is very detailed, it has not been the intention to cover all aspects of the framework. If more information is needed, we refer to the Symbol Reference.
\par The guide is divided into three parts, which constitute almost any InstantObjects based development process.
\par 
\par }
25
327SA.Y





Testing



FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Using InstantObjects \cf1\b0\fs16 
\par \strike Using InstantObjects\strike0\fs18\{linkID=20>main\}\cf2\{keepn\}\cf1\fs16 
\par \pard\keep\li95\sb25\sa25\strike\f1\fs18 Installing InstantObjects\strike0\f0\{linkID=30>main\}\strike 
\par Creating the Business Model\strike0\{linkID=50>main\}
\par \strike Creating the User Interface\strike0\{linkID=150>main\}
\par \strike Programming with Persistent Objects\strike0\{linkID=210>main\}
\par \strike\f1 Learning the Primer demo\cf2\strike0\{linkID=320>main\}\cf1\strike\f0 
\par License Agreement\strike0\{linkID=40>main\}
\par 
\par }
30
Scribble30
Installing InstantObjects




Testing



FALSE
7
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fswiss\fcharset0 Arial;}{\f1\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Installing \f1 InstantObjects\cf1\b0\fs16 
\par \pard\sb25\tx1435\strike Group Topics\strike0\{linkID=25>nav\}\tab\strike Using InstantObjects\strike0\{linkID=20>main\}\f0  \f1\{keepn\} 
\par \pard\f0\fs18 For installation information, please refer to the file Readme.txt provided with the InstantObjects archive, in the Docs folder. Installation consists mainly of compiling and installing the appropriate packages in the Delphi IDE. The Readme file helps you determining what packages you need and the correct installation order.
\par 
\par }
40
327SA3X
License Agreement
License Agreement



Testing



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue255;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 License Agreement \cf1\b0\fs16 
\par \cf2\strike Using InstantObjects\cf3\strike0\{linkID=20>main\}\cf1\{keepn\}
\par \pard\sb25\sa25\cf3\b\fs18\{bm\f1 l\f0  Powered by InstantObjects 150x38.gif\}
\par \cf1 
\par \b0\f1 InstantObjects' source files are released under the Mozilla Public License Version 1.1. \f0 You may obtain a copy of the License at\f1  http://www.mozilla.org/MPL/MPL-1.1.html.\f0 
\par 
\par \cf4\strike\f2\fs20 www.instantobjects.org\cf3\strike0\{link=*! ExecFile("http://www.instantobjects.org")\}\cf1\f0\fs18 
\par \b 
\par }
50
327SA3P
Creating the Business Model
Creating the Business Model


creatingbusinessmodel:000010
Testing



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Creating the Business Model\cf1\b0\fs16 
\par \pard\sb25\tx1435\strike Group Topics\strike0\{linkID=60>nav\}\tab\strike Using InstantObjects\strike0\{linkID=20>main\}\cf0\b\fs24  \cf1\b0\fs16\{keepn\} 
\par \pard\sb25\sa25\tx1435\fs18 Object Oriented applications are based on models. This section covers the initial steps in the creation of an InstantObjects based application, which is the definition of the business model. The InstantObjects Model Explorer is the central tool in this process.
\par 
\par }
60
327SA3Q





Testing



FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Creating the Business Model \cf1\b0\fs16 
\par \strike Creating the Business Model\strike0\{link=327SA3P>main\}\{keepn\} 
\par \pard\keep\li95\sb25\sa25\strike\fs18 The Model Explorer\strike0\{linkID=70>main\}
\par \strike Defining Classes\strike0\{linkID=80>main\}
\par \strike Defining Attributes\strike0\{linkID=90>main\}
\par \strike\f1 External Storage of attributes\strike0\f0\{linkID=100>main\}
\par \strike Adding Business Rules\strike0\{linkID=110>main\}
\par \strike Building/Evolving the Business Model\strike0\{linkID=140>main\}
\par 
\par }
70
327SA3S
The Model Explorer
The Model Explorer


creatingbusinessmodel:000020
Testing



FALSE
16
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fnil Arial;}{\f2\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 The Model Explorer \cf1\b0\fs16 
\par \strike Creating the Business Model\strike0\{link=327SA3P>main\}\{keepn\} 
\par \pard\sb25\sa25\fs18 The first step in building an application with InstantObjects is to define the classes and relations that make up the business model. The business model is created in the Model Explorer, which can be opened via the View-menu in the Delphi IDE.
\par \cf0\b\f1\fs22 The Model Explorer with \f2 "\f1 Inheritance\f2 "\f1  view of classes\cf2\b0\f0\fs18 
\par \{bmc ModelExplorerInheritance.gif\}\cf1 
\par \cf0\b\f1\fs22 
\par The Model Explorer with \f2 "Relations"\f1  view of classes\cf2\b0\f0\fs18 
\par \{bmc ModelExplorerRelations.gif\}\cf1 
\par 
\par \cf0\b\f2\fs22 Defining\f1  Model \f2 Units\f1 
\par \cf1\b0\f0\fs18 The classes of the business model can be placed in one or more units in the project. These units are referred to as model units. To specify a model unit, create an empty unit via the File|New option in the IDE and save it with an appropriate name. To add the unit to the business model, click the Select Units button on the toolbar of the Model Explorer. This will open a dialog showing all the units of the current project. The left side of the dialog shows the model units and the right side shows the other units included in the project. Use the buttons between the two lists to move one or more units from one side to the other. When you have selected your model unit(s), you are ready to add some classes to the business model.
\par \cf2\{bmc ModelUnitSelector.gif\}\cf1 
\par 
\par }
80
327SA3T
Defining Classes
Defining Classes


creatingbusinessmodel:000030
Testing



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Defining Classes \cf1\b0\fs16 
\par \strike Creating the Business Model\strike0\{link=327SA3P>main\}\{keepn\} 
\par \pard\sb25\sa25\fs18 Classes can be added and edited with the Class Editor. Add a new class to the model by right-clicking in the empty area of the Model Explorer. Select New Class from the menu. This will bring up the Class Editor with an empty class definition.
\par \cf2\{bmc ClassEditor.gif\}\cf1 
\par On the first page of the Class Editor you can edit the general properties of the class. This is where you specify the name and base class, the model unit to hold the class and the persistence status of the class.
\par The default base class of any business class is \strike TInstantObject\strike0\{linkID=7240>main\}, the class from which persistence capabilities are inherited. When classes are present in your model, you can choose any of these as the immediate base class instead. The unit in which the new class shall be placed can be selected from the list of available model units.
\par The class can be defined as either persistent or embedded. Instances of persistent classes can be stored in and retrieved from the database. Instances of embedded classes can exist in the database only as part of another embedded or persistent object. If you want instances of a class to be retrievable or available by query, define the class persistent.
\par \f1 Persistent classes are also required if you use the external storage option for collection attributes. A class used only for objects that are part of other objects should be defined as embedded if those objects use embedded (or classic) storage, and stored (persistent) if those objects use external storage.\f0 
\par For persistent classes, a storage name can be specified. The storage name defines the table in which attributes of instances of the class are stored. By default, the storage name equals the class name without the preceding T. Change the storage name if you want the attributes stored in another table.
\par 
\par }
90
327SA3U
Defining Attributes
Defining Attributes


creatingbusinessmodel:000040
Testing



FALSE
38
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fnil Arial;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;\red0\green128\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Defining Attributes \cf1\b0\fs16 
\par \strike Creating the Business Model\strike0\{link=327SA3P>main\}\{keepn\} 
\par \pard\sb25\sa25\fs18 On the second page of the Class Editor, you can define attributes of the class. The top view of the page lists the attributes that are introduced by the class. The bottom view lists the attributes that are inherited from the base class.
\par \cf2\{bmc ClassEditorAttributes.gif\}\cf1 
\par \pard\cf0\ul\b\f1\fs20 Attribute Definition\cf1\ulnone\b0\f0\fs16 
\par \pard\sb25\sa25\fs18 Right-click the list of introduced attributes and select New from the menu to add some attributes to the class. Attributes are created and edited with the Attribute Editor. The first page of the Attribute Editor contains the name, type and storage name of the attribute.
\par \cf2\{bmc AttributeEditorDefinition.gif\}\cf1 
\par The name of the attribute can be any valid Object Pascal identifier. The storage name specifies the storage table column in which attribute values are stored. By default, the storage name is the same as the attribute name.
\par The type of the attribute can be selected from the list of all the types supported by InstantObjects. Some of the available types are known as simple types, others are known as relational types. The simple types generally have an Object Pascal equivalent simple type. The relational types are used to define relations from instances of the class to other objects. The relational types are; Reference, Part, References and Parts.
\par 
\par \b Reference\b0 
\par Reference is the simplest object relation supported by InstantObjects. A reference defines a unidirectional relation from one object to another. The object referred to lives outside the referring object and knows nothing about the relation itself.
\par See \strike TInstantReference\strike0\{linkID=9370>main\} for more information.
\par 
\par \b Part\f2 
\par \b0\f0 Objects in Part relations are tied together more closely. A Part relation is bi-directional, meaning the object at each end of the relation knows about the object at the other end. The object referred to in a Part relation is considered to be a part of the owning object and as such can only be reached via the owning object. In addition, an object referred to in a part relation is disposed along with its owner.
\par See \strike TInstantPart\strike0\{linkID=9100>main\} for more information.
\par 
\par \b References\b0 
\par Like its singular counterpart, Reference, the References relation is unidirectional. But instead of just referring to a single object, a References relation can refer to any number of objects and thereby defining a one-to-many relation to objects outside of the referring object.
\par See \strike TInstantReferences\strike0\{linkID=9630>main\} for more information.
\par 
\par \b Parts\f2 
\par \b0\f0 Parts is the one-to-many counterpart of the equivalent one-to-one relation type, Part. A Parts relation can refer to any number of objects that are all considered to be part of the referring object.
\par See \strike TInstantParts\strike0\{linkID=9240>main\} for more information.
\par Parts and References are known as container attributes. When defining an attribute of one of these types, a corresponding array property and optional methods to access the container attribute is added to the class. For any of the relational types, the class of the related object(s) must be specified as the Object Class of the attribute.
\par 
\par \f2 For \i "External Storage support"\i0  of Part, Parts and References attribute, refer to \cf3\strike External Storage of attributes\cf2\strike0\{linkID=100\}\cf1 .
\par \f0 
\par \cf0\ul\b\f1\fs20 Attribute Visibility and Accessibility\b0 
\par \cf1\ulnone\f0\fs18 On the next page of the Attribute Editor you specify how the attribute can be accessed. 
\par \cf2\{bmc AttributeEditorAccess.gif\}\cf1 
\par For every attribute a corresponding property is added to the class by which the value of the attribute can be accessed. The visibility scope of this property can be set on this page. For container attributes, methods to manipulate the content of the attribute can be selected here as well. Those methods will be created with the same visibility scope as the property. In addition to the array property created to access objects contained in container attributes, a count property reflecting the number of objects in the container will be added too.
\par For some of the simple attribute types, settings regarding the presentation of the attribute can be specified on the last page of the Attribute Editor. An edit mask to be used when editing the value of the attribute can be specified in Mask. The characters that are accepted during input when editing the attribute value can be specified in Valid Characters.
\par 
\par }
100
Scribble100
External Storage of attributes
External Storage of Attributes


creatingbusinessmodel:000060
Testing



FALSE
37
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fswiss\fcharset0 Arial;}{\f1\fswiss Arial;}{\f2\fnil\fcharset0 Courier New;}{\f3\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 External Storage of attributes\cf1\b0\f1\fs16 
\par \pard\sb25\sa25\strike Creating the Business Model\strike0\{link=327SA3P>main\}\{keepn\} \f0\fs18 
\par \f1 Historically, IO stores part, parts and references attributes of a class as binary blob fields in the source table. This has caused a number of shortcomings and issues, namely:
\par a) inability to fully query the database from a SQL-enabled (non-IO) interface;
\par b) inability to define foreign keys to enforce referential integrity at the database level;
\par c) difficulty in repairing a "corrupted" \f0 (*)\f1  blob;
\par d) poor retrieve performance due to missing implementation of load-on-demand feature for part, parts and references attributes\f0 .\f1 
\par \fs16 (*) note that to "corrupt" such a blob it suffices to delete a referenced object; the referencing objects can then no longer be loaded; if the referencing attribute is a "reference" attribute\f0 , then\f1  the fix is easy; if it's a "references" attribute it requires editing the binary blob.
\par 
\par \fs18 The addition of the XML option for blobs somehow relieved item c), at the cost of bigger blobs \f0 which made for \f1 even poorer performance.
\par External storage in IO means the ability to say that a particular part, parts or reference\f0 s\f1  attribute should be mapped outside of the source class' table, that is in an additional ad-hoc intermediate table. In the case of part attributes, the intermediate table is not even needed because the relationship among the owner and the part is 1:1.
\par 
\par \ul\b How to use external storage
\par \ulnone\b0 Here is a snippet from an example class definition with external attributes:
\par \f2   TTest2 = class(TInstantObject)
\par   \{IOMETADATA stored;
\par     TestPart: Part(TTest) external;
\par     TestParts: Parts(TTest) external 'Test2_TestParts';
\par     TestRef: Reference(TTest);
\par     TestRefs: References(TTest) external 'Test2_TestRefs'; \}
\par \f1 The TestPart attribute is an external part attribute, which means that it leads to a mapping very similar to TestRef: instead of having a blob field called TestPart, the Test2 table has a couple TestPartId/TestPartClass, and the actual object is stored in its own Test table.
\par \f0 You can opt for External storage in the Attribute Editor, by setting Storage Kind to the value \i "External"\i0 .\f1 
\par \cf2\{bmc AttributeEditorDefinitionExternal.gif\}\cf1 
\par 
\par PLEASE NOTE that all classes involved in external storage must have the "stored" specification\f0  (in other words, they should be persistent classes)\f1 . "embedded" classes are only useful for "embedded" (the historical arrangement) part and parts attributes.
\par 
\par The TestParts attribute leads to the creation of an intermediate table called Test2_TestParts which has relationships with both Test2 and Test:
\par Test2 --1:N--> Test2_TestParts --1:1--> Test.
\par This intermediate table has fields to hold information about the relationships and the sequence of elements in the source class' collection attribute.
\par 
\par The mapping of the TestRefs attribute is very similar; the only difference is that the parts attribute's target object is deleted when the source object is deleted; this of course does not happen with references attributes.
\par 
\par At design time, you can select the "external" specification in the Attribute Editor. The "Storage Kind" combo-box allows to choose between Embedded (the classic model) and External (the new model). For Part attributes, that (in addition to defining the target class "stored" and not "embedded") is enough. For Parts and References you also need to type the External Storage Name, that is the name the intermediate table will have. Personally I use the "<source table name>_<attribute name>" convention, but everyone is of course free to choose a different naming scheme.
\par \pard\cf0\f3\fs20 
\par }
110
327SA3V
Adding Business Rules
Adding Business Rules


creatingbusinessmodel:000050
Writing



FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Adding Business Rules \cf1\b0\fs16 
\par \strike Example 1\strike0\{linkID=120>example\}\tab\strike Example 2\strike0\{linkID=130>example\}\f1\tab\strike\f0 Creating the Business Model\strike0\{link=327SA3P>main\}\{keepn\} 
\par \pard\sb25\sa25\fs18 Validation rules and other business related behavior is added to your business classes by adding the required code plus additional methods and properties to the class. Validation rules and side effects of changing the value of an attribute are often added to the setter method of the corresponding property. Complete validation of business objects before they are stored to the database can be added by overriding the BeforeStore method of the class. New objects can be initialized by overriding the Initialize method. For a complete list of the virtual methods of \strike TInstantObject\strike0\{linkID=7240>main\}, please refer to the InstantObjects Reference Guide.
\par 
\par }
120
Scribble120
Adding Business Rules, Example 1
Adding Business Rules, Example 1



Testing



FALSE
33
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fswiss Arial;}{\f3\fnil\fcharset0 Arial;}{\f4\fnil\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Example 1\b0\fs20 
\par \cf1\strike\f1\fs16 Adding Business Rules\strike0\f2\{link=327SA3V>main\}\{keepn\} \cf0\f0\fs20 
\par \f3 In InstantObject you usually apply single-attribute business rules in the attribute's property setter method:
\par 
\par \b\f4 procedure\b0  TAddress.SetPostalCode(\b const \b0 Value: \b string\b0 );
\par \b begin\b0 
\par   \i // Validation: raise exceptions to prevent value assignment.
\par \i0   \b if \b0 (Length(Value) <> 6) \b and \b0 (Value <> '') \b then\b0 
\par     \b raise \b0 Exception.Create(\i 'Postal Code must be filled with 6 chars'\i0 );
\par   \i // Assignment: this code will usually be written by InstantObjects automatically.  
\par \i0   _PostalCode.Value := Value;
\par \i   // Post-assignment: do things as a consequence of an attribute's value change
\par   // (see also the virtual method AttributeChanged).
\par \i0   \b if \b0 (Value <> '') \b and \b0 (City = '') \b then\b0 
\par     GetDefaultCityByPostalCode(Value);
\par \b end\b0 ;
\par \f0 
\par \f3 If you need to apply business rules that involve more than one attribute, instead, you often use the BeforeStore virtual method(see \cf2\strike Example 2\cf3\strike0\{linkID=130\}\cf0 ).
\par 
\par When you code side effects, be aware that the property setters might be called more often than expected, for example when reading an object from an XML file or when you use the data-aware presentation layer. Here is an example:
\par 
\par \b\f4 procedure \b0 TShipment.SetMinShipDate(\b const \b0 Value: TDateTime);
\par \b begin\b0 
\par   \i // Assignment: this code will usually be written by InstantObjects automatically.  
\par \i0   _MinShipDate.Value := Value;
\par   MaxShipDate := 0;    
\par \b end\b0 ;
\par \f3 
\par The intent of this code is to reset MaxShipDate whenever MinShipDate changes, so that a user, in a hypothetical data-entry scenario, will have to re-enter a value for MaxShipDate. But things might not work always as expected; for example, SetMinShipDate might be called after SetMaxShipDate when streaming in an object from a XML file, of when using the "undo" feature of the data-aware presentation layer. The lesson here is: use the property setters and the BeforeStore method only to appy real business rules (like "MaxShipDate must be equal to or greater than MinShipDate"), and code data-entry rules (like "whenever a value for MinShipDate is entered, MaxShipDate should be reset") at the data-entry level (that is, not in the model classes).
\par 
\par }
130
Scribble130
Adding Business Rules, Example 2
Adding Business Rules, Example 2



Testing



FALSE
23
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fswiss Arial;}{\f3\fnil\fcharset0 Arial;}{\f4\fnil\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Example 2\b0\fs20 
\par \cf1\strike\f1\fs16 Adding Business Rules\strike0\f2\{link=327SA3V>main\}\{keepn\}
\par \cf0\f3\fs20 Business rules that involve more than one attribute are usually applied in BeforeStore, which gets called whenever the Store method is called to write an object (back) to the storage. Example:
\par 
\par \b\f4 procedure \b0 TShipment.BeforeStore;
\par \b begin\b0 
\par   \b if \b0 MinShipDate > MaxShipDate \b then\b0 
\par     \b raise \b0 Exception.Create(\i 'Date range error'\i0 );
\par   \b inherited\b0 ;
\par \b end\b0 ;
\par \f0 
\par \f3 You initialize an object by overriding Initialize (if you need to apply initialization code both when a new object is created and when it is retrieved from the storage), or AfterCreate (if you need to apply initialization code for newly created objects only). There is also an AfterRetrieve method that you can override to apply initialization code only when an existing object read from the storage and materialized in memory. Here is an example of AfterCreate:
\par \f0 
\par \b\f4 procedure \b0 TContact.AfterCreate;
\par \b begin\b0 
\par   \b inherited\b0 ;
\par   Id := InstantGenerateId;
\par   Category := TCategory.Retrieve(\i 'CAT000'\i0 );
\par \b end\b0 ;
\par \f3 
\par }
140
327SA3W
Building/Evolving the Business Model
Building/Evolving the Business Model


creatingbusinessmodel:000070
Testing



FALSE
21
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 Building/Evolving the Business Model \b0\fs16 
\par \strike Creating the Business Model\strike0\{link=327SA3P>main\}\{keepn\} 
\par \pard\sb25\sa25\fs18 The final step in the modeling phase is to make the model physical in terms of storage for the objects. The required tables and indices have to be created from the business model. InstantObjects allows you to use various types of databases as storage for your persistent objects\f1 , using different brokers.\f0 
\par The Connection Manager, which is available on the toolbar of the Model Explorer, helps you \f1 define, \f0 create \f1 and evolve \f0 your database. 
\par \cf2\f1\{bmc ConnectionManager.gif\}\cf1\ul\b 
\par Defining a Broker/Connection\ulnone\b0\f0 
\par The first step in preparing the database is to \f1 define\f0  a connect\f1 or\f0  \f1 using a specific broker to estabilish a connection \f0 to the database.\f1 
\par Select New in the context menu and the preferred Broker. A specific ConnectionDef Editor appears.\f0 
\par \cf2\{bmc ConnectionDefEditor.gif\}\cf1 
\par \f1 Define the connection properties and store the connection definition.\f0 
\par \ul\b\f1 Building a Model into a database\ulnone\b0\f0 
\par \f1 Select the Broker/Connection you want to use to Build your database and press the "Build" button. A "Database Builder" window appears. You can see the building steps and run the building process. \b Be careful: all data will be lost!\b0 
\par \cf2\{bml DatabaseBuilder.gif\}\cf1 
\par \ul\b Evolving an existing database\ulnone\b0\f0 
\par \f1 If you build the database, put some data in it and later you change the model, you need to "evolve" the database. Unlike the Build procedure, which will basically destroy and recreate all database objects, the Evolution process will try to save the data. The effectiveness of the Evolution procedure depends on the features of the particular kind of database you are using. For example, if your SQL database server allows you to alter the size of a column with a SQL/DDL statement, then InstantObjects will be able to do it, otherwise it won't. There are plans to improve the evolution process so that it overcomes the limitations of the database. In our example, IO's database evolver could add a new temporary column, copy the old data into it, then drop the old column, recreate it and pump the data back, finally dropping the temporary column.
\par To evolve an existing database, select the Broker/Connection you want to use and press the "Evolve" button. A "Database Evolver" window similar to the "Database Builder" window appears. You can see the evolution steps needed to upgrade the database structure, selectively disable some of them (useful in special cases) and apply them to the database. \b In this case no data is lost.
\par 
\par \b0\f0 
\par }
150
75DE_G4
Creating the User Interface
Creating the User Interface


creatinguserinterface:000010
Testing



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Creating the User Interface\cf1\b0\fs16 
\par \pard\sb25\tx1435\strike Group Topics\strike0\{linkID=160>nav\}\tab\strike Using InstantObjects\strike0\{linkID=20>main\}\cf0\b\fs24  \cf1\b0\fs16\{keepn\} 
\par \pard\sb25\sa25\tx1435\fs18 The next phase in the development process is to create a user interface through which the business objects may interact with the user. This section explains the components that are involved in the creation of the user interface.
\par 
\par }
160
75DE_G5





Testing



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Creating the User Interface \cf1\b0\fs16 
\par \strike Creating the User Interface\strike0\{link=75DE_G4>main\}\{keepn\} 
\par \pard\keep\li95\sb25\sa25\strike\fs18 Persistence by RAD\strike0\{linkID=170>main\}
\par \strike The Connector\strike0\{linkID=180>main\}
\par \strike The Exposer\strike0\{linkID=190>main\}
\par \strike The Selector\strike0\{linkID=200>main\}
\par 
\par 
\par }
170
327SA.P
Persistence by RAD
Persistence by RAD


creatinguserinterface:000020
Testing



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Persistence by RAD \cf1\b0\fs16 
\par \strike Creating the User Interface\strike0\{link=75DE_G4>main\}\{keepn\} 
\par \pard\sb25\sa25\fs18 When InstantObjects has been installed in your Delphi environment, a set of components is available on the InstantObjects tab of the Delphi component palette.
\par \cf2\{bmc InstantObjectsPalette.gif\}\cf1 
\par Applications can be built with InstantObjects using the same RAD approach used when building traditional database applications in Delphi. InstantObjects allows you to use standard VCL data-aware controls with your persistent business objects. The InstantObjects components are used to connect to the database and to make business objects available in the user interface of the application\f1 .\f0 
\par 
\par }
180
327SA.Q
The Connector
The Connector


creatinguserinterface:000030
Testing



FALSE
20
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 The Connector \cf1\b0\fs16 
\par \strike Creating the User Interface\strike0\{link=75DE_G4>main\}\{keepn\} 
\par \pard\sb25\sa25\fs18 In order for your application to use the database as object storage, you must use a connector component. The connector acts as a gateway between your application and the database\f1  (by means of an internal component called the broker)\f0 , managing all the objects that are stored to and retrieved from the database. A connector component for each type of data access layer that is supported by InstantObjects is available on the component palette. A connector is attached to a database by assigning a connection component to its Connection \f1 (or equivalent) \f0 property. Each connector component supports its own connection type\f1 . For example:\f0 
\par 
\par \pard\sb25\sa25\tx1980\tx4800\b Access type\tab Connector type\tab\f1 Type of \f0 Connection\b0 
\par ADO\tab\cf2\strike TInstantADOConnector\cf1\strike0\{linkID=1910>main\}\tab TADOConnection
\par BDE\tab\cf2\strike TInstantBDEConnector\cf1\strike0\{linkID=2570>main\}\tab TDatabase
\par IBX\tab\cf2\strike TInstantIBXConnector\cf1\strike0\{linkID=6810>main\}\tab TIBDatabase
\par \f1 D\f0 BX\tab\cf0 TInstant\f1 D\f0 BXConnector\cf1\tab TSQLConnection
\par \f1 XML\tab\cf0\f0 TInstantX\f1 ML\f0 Connector\cf1\tab TXMLFilesAccessor
\par \pard 
\par \f1 InstantObjects supports a variety of databases and data-access technologies (for example NexusDB, ZeosDBO, Unified InterBase...) by means of packages called brokers. You can build and install the broker(s) you need from the Brokers sub-folder of InstantObjects's Source folder.
\par \f0 
\par Drop an appropriate connector component and a matching connection component on a form or a data module in your project. Configure the connection component to access the database and assign it to the Connection \f1 (or equivalent) \f0 property of the connector component. The connector will use the connection to gain access to the database. By setting the IsDefault property to True, the connector will be used as the default connector in the application.
\par 
\par \f1 You can also use TInstantConnectionManager, which stores connection data in external files and can create connectors and connections automatically based on this data. This is particularly useful when you don't want to hardcode a particular broker or set of brokers into your program. See the Primer demo application for an example of this technique.
\par \f0 
\par }
190
327SA.R
The Exposer
The Exposer


creatinguserinterface:000040
Testing



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 The Exposer \b0\fs16 
\par \strike Creating the User Interface\strike0\{link=75DE_G4>main\}\{keepn\} 
\par \pard\sb25\sa25\strike\fs18 TInstantExposer\strike0\{linkID=6300>main\} is a dataset component that maps objects to the user interface of your application.
\par Attributes defined in the business model are accessed through properties. Properties that are published can be accessed by data-aware controls via this component. In addition, the content of container attributes can be accessed too. The exposer component maps the published properties of objects to fields in a dataset. The objects being exposed are represented as rows in the dataset.
\par To expose an object, it must be assigned to the Subject property of a \strike TInstantExposer\strike0\{linkID=6300>main\}. To expose multiple objects contained within another object, assign the main object to the Subject property and enter content mode by changing the Mode property from amObject to amContent. If the exposed class has no default container, specify the desired container in the property ContainerName. Specify the class of the exposed object(s) in the property ObjectClassName.
\par By default, an exposer will make all simple properties of each exposed object as well as any related object available through fields in the dataset. Every field will have a \f1 F\f0 ield\f1 N\f0 ame matching the property it represents. For related objects, the fieldname will be the complete path to the property using regular dot notation. The property FieldOptions and the event OnIncludeField allow you to limit or extend the number fields to include.
\par Container attributes of exposed objects are automatically recognized by the exposer and represented as nested datasets within the exposer.
\par Exposers can be linked together in master/detail relation\f1 ships\f0 . To link one exposer to another, assign the master exposer to the DataSet property of a TDataSource and assign the TDataSource to the MasterSource property of the detail exposer. The Subject of the detail exposer will be set to the current object of the master exposer, whenever this changes. If you want the detail exposer to expose an object that is related to the current object of the master exposer instead, simply specify the desired property path in MasterProperty.
\par \strike TInstantExposer\strike0\{linkID=6300>main\} is not limited to exposing \strike TInstantObject\strike0\{linkID=7240>main\} descendants. Any object with published propertied can be exposed. The content of standard VCL containers like TList, TObjectList and TCollection can be exposed in content mode.
\par 
\par }
200
327SA.S
The Selector
The Selector


creatinguserinterface:000050
Testing



FALSE
40
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 The Selector \cf1\b0\fs16 
\par \strike Creating the User Interface\strike0\{link=75DE_G4>main\}\{keepn\} 
\par \pard\sb25\sa25\fs18 The \strike TInstantSelector\strike0\{linkID=10050>main\} component allows you to select objects from the database and optionally expose them in the user interface.
\par To select objects from the database, a command must be specified with the Command property. The syntax of this command\f1  (called an IQL command, from Instant Query Language) \f0  is somewhat similar to an SQL SELECT-statement\f1 , \f0 but instead of tables and columns, you specify classes and attributes:
\par \pard\keep\f2 
\par SELECT [DISTINCT] *|<Attribute>
\par FROM [ANY] <Class>
\par [WHERE <Expression>]
\par [ORDER BY <Attribute list>]
\par \pard\sb25\sa25\f0 
\par The simplest command that can be specified looks like this:
\par \pard\keep\f2 
\par SELECT * FROM TContact
\par \pard\sb25\sa25\f0 
\par This command select\f1 s\f0  all concrete instances of the class TContact. To select instances of TContact and any descendant class, add the ANY keyword:
\par \pard\keep\f2 
\par SELECT * FROM ANY Tcontact
\par \pard\sb25\sa25\f0 
\par If you want to select objects that are related to instances of a class, specify the relation attribute instead of the \f1 *\f0 , like this:
\par \pard\keep\f2 
\par SELECT Address FROM ANY Tcontact
\par \pard\sb25\sa25\f0 
\par If the same object is related to from several objects via the specified attribute and you do not want it to appear more than once in the result, use the DISTINCT keyword with the attribute:
\par \pard\keep\f2 
\par SELECT DISTINCT Address FROM ANY Tcontact
\par \pard\sb25\sa25\f0 
\par To select from objects that meet a certain criteria, you must add a WHERE clause to the command. This clause must contain an expression that evaluates to True or False. The expression can use attributes, constants and functions in combination with the most common operators. The following example will select all customers with a negative balance.
\par \pard\keep\f2 
\par SELECT * FROM TCustomer WHERE Balance < 0
\par \pard\sb25\sa25\f0 
\par To order the selected objects by one or more attributes, specify the attributes with ORDER BY:
\par \pard\keep\f2 
\par SELECT * FROM TCustomer ORDER BY Balance, Name
\par \pard\sb25\sa25\f0 
\par When the selector is opened, it performs a query against the database. The resulting objects are available via the Objects property. The number of objects selected can be read via the property ObjectCount.
\par If you want to expose the selected objects in the user interface, simply assign the selector to a TDataSource that is attached to data-aware controls.
\par 
\par }
210
327SA.T
Programming with Persistent Objects
Programming with Persistent Objects


programming:000010
Done



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Programming with Persistent Objects\cf1\b0\fs16 
\par \pard\sb25\tx1435\strike Group Topics\strike0\{linkID=220>nav\}\tab\strike Using InstantObjects\strike0\{linkID=20>main\}\f1  \cf0\b\f0\fs24  \cf1\b0\fs16\{keepn\} 
\par \pard\sb25\sa25\tx1435\fs18 The driving force in InstantObjects based applications are the persistent business classes, which contain the business logic. These classes all descend from the fundamental \strike TInstantObject\strike0\{linkID=7240>main\} class. This section covers the aspects of working directly with the business classes of the application.
\par 
\par }
220
327SA.U





Imported



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Programming with Persistent Objects \cf1\b0\fs16 
\par \strike Programming with Persistent Objects\strike0\{link=327SA.T>main\}\{keepn\} 
\par \pard\keep\li95\sb25\sa25\strike\fs18 Creating New Objects\strike0\{linkID=230>main\}
\par \strike Retrieving Existing Objects\strike0\{linkID=250>main\}
\par \strike Associating Objects\strike0\{linkID=280>main\}
\par \strike\f1 Using t\f0 he \f1 InstantQuery\strike0\f0\{linkID=300>main\}
\par 
\par }
230
327SA.W
Creating New Objects
Creating New Objects


programming:000020
Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 Creating New Objects \b0\fs16\{keepn\} 
\par \pard\sb25\tx1435\strike Example 1\strike0\{linkID=240>example\}\tab\strike Programming with Persistent Objects\strike0\{linkID=210>main\}
\par \pard\sb25\sa25\tx1435\fs18 Business objects are created just like any other object. The Create constructor of the class creates a new instance of the class. The constructor can be called with an optional Connector parameter. This connector specifies the database in which to make the object persistent. If no connector is specified, the default connector will be used. To make an object persistent, call its Store method. Only instances of classes declared as persistent in the business model can be stored. If an object that is being stored does not have an Id, a globally unique id will be assigned to it.
\par 
\par }
240
327SA4Q
Creating New Objects, Example 1
Creating New Objects, Example 1



Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike Creating New Objects\strike0\{link=327SA.W>main\}\{keepn\} 
\par \pard\keep\f1\fs18 
\par var
\par   Person: TPerson
\par begin
\par   Person := TPerson.Create(MyConnector);
\par   try
\par     Person.Id := '12345678'
\par     Person.Name := 'John Doe';
\par     Person.Store;
\par   finally
\par     Person.Free;
\par   end;
\par end;
\par 
\par }
250
327SA.X
Retrieving Existing Objects
Retrieving Existing Objects


programming:000030
Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Retrieving Existing Objects \cf1\b0\fs16\{keepn\} 
\par \pard\sb25\tx1435\tx2875\strike Example 1\strike0\{linkID=260>example\}\tab\strike Example 2\strike0\{linkID=270>example\}\tab\strike Programming with Persistent Objects\strike0\{linkID=210>main\}
\par \pard\sb25\sa25\tx1435\tx2875\fs18 Objects that have been stored to the database can be retrieved into memory via the Retrieve constructor. This constructor requires the Id of the object to retrieve. An optional connector through which the object shall be retrieved can be specified. If no connector is specified, the default connector is used. If the object already exists in memory, the existing object is returned. If the object is not found, the constructor returns nil.
\par 
\par }
260
327SA4U
Retrieving Existing Objects, Example 1
Retrieving Existing Objects, Example 1



Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike Retrieving Existing Objects\strike0\{link=327SA.X>main\}\{keepn\} 
\par \pard\keep\f1\fs18 
\par var
\par   Person: TPerson;
\par begin
\par   Person := TPerson.Retrieve('12345678', MyConnector);
\par   try
\par     ShowMessage(Person.Name);
\par   finally
\par     Person.Free;
\par   end;
\par end;
\par \pard\sb25\sa25\f0 
\par 
\par If the Id of the object is not known or multiple objects meeting a certain criteria shall be retrieved, a selector can be used instead:
\par }
270
327SA4V
Retrieving Existing Objects, Example 2
Retrieving Existing Objects, Example 2



Imported



FALSE
26
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 2 \cf1\b0\fs16 
\par \strike Retrieving Existing Objects\strike0\{link=327SA.X>main\}\{keepn\} 
\par \pard\keep\f1\fs18 
\par var
\par   I: Integer;
\par   Person: TPerson;
\par begin
\par   with TInstantSelector.Create(nil) do
\par   try
\par     Connector := MyConnector;
\par     Command.Text := 'SELECT * FROM TPerson WHERE Company.Name = "Happy Donuts"';
\par     Open;
\par     for I := 0 to Pred(ObjectCount) do
\par     begin
\par       Person := Objects[I] as TPerson;
\par       Person.Salary := Person.Salary * 1.05;
\par       Person.Store;
\par     end;
\par   finally
\par     Free;
\par   end;
\par end;
\par 
\par }
280
327SA3Y
Associating Objects
Associating Objects


programming:000040
Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Associating Objects \cf1\b0\fs16\{keepn\} 
\par \pard\sb25\tx1435\strike Example 1\strike0\{linkID=290>example\}\tab\strike Programming with Persistent Objects\strike0\{linkID=210>main\}
\par \pard\sb25\sa25\tx1435\fs18 Persistent object relations defined by relational attributes in the business model can be accessed just as easy as any other attribute. Single object relations defined by Part and Reference attributes are accessed through the corresponding object property of the class. Multiple object references defined by Parts and References are accessed through the corresponding array property and the container methods defined for the attribute.
\par The following code defines a class containing the various relation types. The procedure CreateSamplePerson creates a TPerson object with a sample name and address, associates it with a company and adds some phones and colleagues to it. The procedures ShowPhones and ShowColleagues shows a message with the caption of each of the corresponding objects associated with the person. The code assumes that a default connector has been created.
\par 
\par }
290
327SA4Y
Associating Objects, Example 1
Associating Objects, Example 1



Testing



FALSE
121
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fmodern\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike Associating Objects\strike0\{link=327SA3Y>main\}\{keepn\} 
\par \pard\keep\f1\fs18 
\par type
\par   TPerson = class(\strike TInstantObject\strike0\{linkID=7240>main\})
\par   \{\- stored;
\par     Address: Part(TAddress);
\par     Company: Reference(TCompany);
\par     Friends: References(TPerson);
\par     Name: String(30);
\par     Phones: Parts(TPhone); \}
\par     _Address: \strike TInstantPart\strike0\{linkID=9100>main\};
\par     _Company: \strike TInstantReference\strike0\{linkID=9370>main\};
\par     _Friends: \strike TInstantReferences\strike0\{linkID=9630>main\};
\par     _Name: \strike TInstantString\strike0\{linkID=10850>main\};
\par     _Phones: \strike TInstantParts\strike0\{linkID=9240>main\};
\par   private
\par     function GetAddress: TAddress;
\par     function GetCompany: TCompany;
\par     function GetFriendCount: Integer;
\par     function GetFriends(Index: Integer): TPerson;
\par     function GetName: string;
\par     function GetPhoneCount: Integer;
\par     function GetPhones(Index: Integer): TPhone;
\par     procedure SetAddress(Value: TAddress);
\par     procedure SetCompany(Value: TCompany);
\par     procedure SetFriends(Index: Integer; Value: TPerson);
\par     procedure SetName(const Value: string);
\par     procedure SetPhones(Index: Integer; Value: TPhone);
\par   public
\par     function AddFriend(Friend: TPerson): Integer;
\par     function AddPhone(Phone: TPhone): Integer;
\par     function RemoveFriend(Friend: TPerson): Integer;
\par     function RemovePhone(Phone: TPhone): Integer;
\par     property FriendCount: Integer read GetFriendCount;
\par     property Friends[Index: Integer]: TPerson read GetFriends write SetFriends;
\par     property PhoneCount: Integer read GetPhoneCount;
\par     property Phones[Index: Integer]: TPhone read GetPhones write SetPhones;
\par   published
\par     property Address: TAddress read GetAddress write SetAddress;
\par     property Company: TCompany read GetCompany write SetCompany;
\par     property Name: string read GetName write SetName;
\par   end;
\par 
\par function CreateSamplePerson(Company: TCompany): TPerson;
\par var
\par   I: Integer;
\par   Phone: TPhone;
\par begin
\par   Result := TPerson.Create;
\par   try
\par     Result.Name := 'John Doe';
\par     Result.Address.Street := 'Summer Street 1';
\par     Result.Company := Company;
\par 
\par     \{\- Add phones \}
\par     Phone := TPhone.Create;
\par     Phone.Name := 'Home';
\par     Phone.Number := '12345678';
\par     Result.AddPhone(Phone);
\par     Phone := TPhone.Create;
\par     Phone.Name := 'Office';
\par     Phone.Number := '32187654';
\par     Result.AddPhone(Phone);
\par 
\par     \{\- Add colleagues\lang1033\f2  as Friends\lang1040\f1  \}
\par     with TInstantSelector.Create(nil) do
\par     try
\par       Command.Text := 'SELECT * FROM TPerson WHERE Company = ' + Company.Id;
\par       Open;
\par       for I := 0 to Pred(ObjectCount) do
\par         Result.AddFriend(Objects[I] as TPerson);
\par     finally
\par       Free;
\par     end;
\par 
\par     Result.Store;
\par   except
\par     Result.Free;
\par     raise;
\par   end;
\par end;
\par 
\par procedure ShowPhones(Person: TPerson);
\par var
\par   I: Integer;
\par begin
\par   for I := 0 to Pred(Person.PhoneCount) do
\par     ShowMessage(Person.Phones[I].Caption);
\par end;
\par 
\par procedure ShowFriends(Person: TPerson);
\par var
\par   I: Integer;
\par begin
\par   for I := 0 to Pred(Person.FriendCount) do
\par     ShowMessage(Person.Friends[I].Caption);
\par end;
\par 
\par procedure DemonstrateRelations;
\par var
\par   Company: TCompany;
\par   Person: TPerson;
\par begin
\par   Company := TCompany.Retrieve('Happy Donuts');
\par   try
\par     Person := CreateSamplePerson(Company);
\par     try
\par       ShowPhones(Person);
\par       ShowFriends(Person);
\par     finally
\par       Person.Free;
\par     end;
\par   finally
\par     Company.Free;
\par   end;
\par end;
\par 
\par }
300
Scribble300
Using the InstantQuery




Testing



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\b\f0\fs24 Using the InstantQuery\b0\fs16 
\par \strike Example 1\strike0\{linkID=310>example\}\tab\strike Programming with Persistent Objects\strike0\{linkID=210>main\}\cf2\{keepn\}\cf1 
\par \cf0\f1\fs18 TInstantQuery is not available in Delphi's Component or Tool Palette, but it is useful to fetch a list of objects from the storage through an IQL query. TInstantQuery basically represents the core of \cf1  \strike\f0 TInstantSelector\strike0\{linkID=10050>main\}\f1 .
\par The advantage in using TInstantQuery directly lies in the lower overhead, as there is no TDataSet buffer managerment involved. So, if you want to fetch objects and don't have a data-aware presentation layer, TInstantQuery is the preferred way to go.
\par TInstantQuery is an abstract class. What you actually use are concrete descendant classes, which you instantiate through the connector's CreateQuery method.\f2 
\par }
310
Scribble310
Using the InstantQuery, Example 1




Testing



FALSE
23
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil\fcharset0 Courier New;}{\f3\fnil Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Example 1
\par \cf1\b0\strike\f1\fs16 Using the InstantQuery\cf2\strike0\{linkID=300\}\cf3\f0\{keepn\} 
\par \b\f2\fs18 function \b0 CompanyOfCityCount(\b const \b0 CityId: \b string\b0 ): Integer;
\par \b var\b0 
\par   InstantQuery: TInstantQuery;
\par \b begin\b0 
\par   InstantQuery := InstantDefaultConnector.CreateQuery;
\par   \b try\b0 
\par     InstantQuery.Command := \i 'SELECT * FROM ANY TCompany WHERE City = :City'\i0 ;
\par \i     // Since this is a parameterized query, fetch the param definitions.\i0 
\par     InstantQuery.FetchParams(InstantQuery.Command, InstantQuery.Params);
\par \i     // Set the param values
\par \i0     InstantQuery.Params.ParamByName('City').AsString := CityId;
\par     InstantQuery.Open;
\par     Result := InstantQuery.ObjectCount;
\par   \b finally\b0 
\par     InstantQuery.Free;
\par   \b end\b0 ;
\par \b end\b0 ;
\par \cf0\f3\fs20 
\par }
320
Scribble320
Learning the Primer demo
Learning The Primer demo



Writing



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil\fcharset0 Arial;}{\f1\fswiss Arial;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\fs22 Learning the Primer demo
\par \cf1\b0\strike\f1\fs16 Group Topics\strike0\{linkID=\f2 3\f1 2\f2 5\f1 >nav\}\tab\strike Using InstantObjects\strike0\{linkID=20>main\}\cf0\b\fs24  \cf1\b0\fs16\{keepn\} \cf0\f0\fs20 
\par 
\par InstantObjects Primer is an example application that was built using the InstantObjects Object Persistence Framework. It demonstrates how InstantObjects enables you to build truly object oriented database applications in Delphi using the same RAD approach you use, when building traditional database applications. 
\par \ul\b 
\par }
325
Scribble325
{}




Writing



FALSE
24
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fswiss\fcharset0 Arial;}{\f1\fswiss Arial;}{\f2\fnil\fcharset0 Arial;}{\f3\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\b\f0\fs24 Primer demo summary\cf1\b0\f1\fs16 
\par \cf2\strike\f0 Learning the Primer demo\cf3\strike0\{linkID=320>main\}\cf1\f1\{keepn\} 
\par \pard\cf0\b\f2\fs20 Summary\b0 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\tx200\cf2\strike\fs18 Introduction\cf3\strike0\{linkID=330>main\}\cf0 
\par \cf2\strike{\pntext\f3\'B7\tab}The Business Model\cf3\strike0\{linkID=340>main\}\cf0 
\par \strike{\pntext\f3\'B7\tab}The User Interface\cf3\strike0\{linkID=350>main\}\cf0 
\par \pard 
\par \b Persistence
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\tx200\b0\strike Persisting Objects\cf3\strike0\{linkID=360>main\}\cf0 
\par \strike{\pntext\f3\'B7\tab}Mapping Scheme\cf3\strike0\{linkID=370>main\}\cf0 
\par \strike{\pntext\f3\'B7\tab}Streaming\cf3\strike0\{linkID=380>main\}\cf0 
\par \pard 
\par \b Presentation\b0 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\tx200\strike Exposing Objects\cf3\strike0\{linkID=390>main\}\cf0 
\par \strike{\pntext\f3\'B7\tab}Selecting Objects\cf3\strike0\{linkID=400>main\}\cf0 
\par \strike{\pntext\f3\'B7\tab}Filtering\cf3\strike0\{linkID=410>main\}\cf0 
\par \strike{\pntext\f3\'B7\tab}Sorting\cf3\strike0\{linkID=420>main\}\cf0 
\par \pard 
\par \b Tools\b0 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\tx200\strike Object Explorer\cf3\strike0\{linkID=430>main\}\cf0\fs20 
\par \strike{\pntext\f3\'B7\tab}Connection Manager\cf3\strike0\{linkID=440>main\}\cf1\f1\fs18 
\par }
330
Scribble330
Primer demo: Introduction
Primer demo: Introduction



Writing



FALSE
16
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Primer\f1  demo\f0 : Introduction
\par \cf1\b0\strike\f1\fs16 Learning the Primer demo\cf2\strike0\{linkID=320>main\}\{keepn\}\cf0\fs20 
\par \f0 
\par \b\f1 Contactbook\b0 
\par InstantObjects Primer features a contactbook in which contacts can be registered and maintained. The main screen of the contactbook is available via the Contacts icon on the navigation bar to the left. The following topics in this section describe the business model and user interface of the contactbook.
\par  
\par \b Query Tester\b0 
\par With the query tester available via the Query icon on the navigation bar, you can try out the query engine of InstantObjects. The query tester allows you to write and execute your own queries or choose from a list of example queries.
\par 
\par \b Performance Tester\b0 
\par InstantObjects can use various types of databases as the storage for your persistent objects. In fact, multiple database connections of different types can be used simultaneously by the same application. With the performance tester available via the Performance icon on the navigation bar, you can compare the performance of the database types of interest.
\par \f0 
\par 
\par }
340
Scribble340
Primer demo: The Business Model
Primer demo: The Business Model



Writing



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Primer\f1  demo\f0 : \f1 The Business Model\f0 
\par \cf1\b0\strike\f1\fs16 Learning the Primer demo\cf2\strike0\{linkID=320>main\}\{keepn\}\cf0\b\fs20 
\par \b0 The contactbook featured in this application is based on a simple business model of contact related information. The following UML class diagram shows how this information is organized.
\par \cf2\{bmc model.gif\}\cf0 
\par The business model was implemented entirely in the Delphi IDE using the integrated InstantObjects \cf1\strike Model Explorer\cf2\strike0\{linkID=70\}\cf0 . 
\par }
350
Scribble350
Primer demo: The User Interface
Primer demo: The User Interface



Writing



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Primer demo: The User Interface
\par \cf1\b0\strike\f1\fs16 Learning the Primer demo\cf2\strike0\{linkID=320>main\}\{keepn\}\cf0\fs20 
\par \f0 The user interface of the contactbook relies on visual form inheritance. The following diagram shows the form class hierarchi. 
\par 
\par TBasicEditForm introduces basic editing capabilities for editing single objects. Descendant forms introduce capabilities required for editing objects of their corresponding business class. 
\par 
\par TBasicBrowseForm is used for browsing and editing multiple objects at once. Descendants hereof are customized for browsing objects of specific classes.
\par \cf2\{bmc ui.gif\}\cf0 
\par }
360
Scribble360
Primer demo: Persisting Objects
Primer demo: Persisting Objects



Writing



FALSE
14
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Primer demo: Persisting Objects
\par \cf1\b0\strike\f1\fs16 Learning the Primer demo\cf2\strike0\{linkID=320>main\}\{keepn\}\cf0\fs20 
\par \f0 One of the main issues when building truly object oriented business applications is the ability to persist business objects. InstantObjects addresses this issue by supporting the most common relational databases as object storage. Relations between objects defined in the business model are handled seamlessly by InstantObjects when storing objects to or retrieving objects from the database.
\par 
\par In most cases, object persistence is handled automatically by the presentation components through which the objects are exposed in the user interface. See the Presentation section for more details about object presentation.
\par 
\par When objects are not accessed via the user interface, persistence is achieved by application code instead. 
\par 
\par Business classes inherit their persistent capabilities from \cf1\strike TInstantObject\cf2\strike0\{linkID=7240>main\}\cf0 . Like other classes in Delphi, instances of classes that descent from TInstantObject are created with the Create constructor of the class. Objects can be stored in the database by invoking the Store method. Existing objects can be retrieved from the database with the Retrieve constructor. When objects are no longer needed, they can be removed from the database by invoking the Dispose method.
\par 
\par Examples of persisting objects by code can be found in the unit DemoData.pas. This unit contains the code for random generation of contacts. Study the code to learn how easy it is to create persistent objects with InstantObjects.
\par }
370
Scribble370
Primer demo: Mapping Scheme
Primer demo: Mapping Scheme



Writing



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Primer demo: Mapping Scheme
\par \cf1\b0\strike\f1\fs16 Learning the Primer demo\cf2\strike0\{linkID=320>main\}\{keepn\}\cf0\fs20 
\par \f0 One aspect to consider when creating the business model of your application is the  mapping scheme. The mapping scheme defines how the business objects are mapped to tables in the relational database.
\par 
\par By default, InstantObjects defines a mapping scheme that uses one table per class in the business model. This mapping scheme can be changed by changing the storage name of classes and attributes. InstantObjects allows you to combine the storage of several classes into one table by specifying the same storage name for the classes.
\par 
\par Custom mapping schemes can be used to optimize performance of particular classes or to support legacy databases.
\par }
380
Scribble380
Primer demo: Streaming
Primer demo: Streaming



Writing



FALSE
7
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Primer demo: Streaming
\par \cf1\b0\strike\f1\fs16 Learning the Primer demo\cf2\strike0\{linkID=320>main\}\{keepn\}\cf0\fs20 
\par \f0 All business objects created with InstantObjects can be written to and read from any standard VCL stream. The structure of the stream can be either binary or XML.
\par An example of streaming objects to an XML file is supplied by the Export to XML option on the toolbar of the Contacts view. This option can also be selected by right-clicking on a contact in the grid. When executed, the export function writes the currently selected contact to an XML file and launches your default XML viewer with the file. This would normally be your Internet browser.
\par }
390
Scribble390
Primer demo: Exposing Objects
Primer demo: Exposing Objects



Writing



FALSE
15
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Primer demo: Exposing Objects
\par \cf1\b0\strike\f1\fs16 Learning the Primer demo\cf2\strike0\{linkID=320>main\}\{keepn\}\cf0\fs20 
\par \f0 Making objects available in the user interface of an application through data-aware controls is known as  exposing objects. InstantObjects allows you to expose any object with published properties.
\par 
\par TInstantExposer is the component to use when an object or part of an object that is already present in memory needs to be exposed. TInstantExposer is a TDataSet descendant, which means it can be attached to data-aware controls via a TDataSource. When an object is assigned to the Subject property of a TInstantExposer component, the object or the objects contained in the object are represented as rows in the dataset. The published properties of the exposed object(s) are represented as columns in the dataset.
\par 
\par The contactbook demonstrates how exposers can be used to show and edit business objects in the user interface. TBasicEditForm is the base for all forms used by the application to edit objects. This form contains an exposer which is connected through a TDataSource to data-aware controls introduced in descending forms designed for editing objects of specific classes. When an object needs to be edited, it is passed to the exposer in a suitable edit form.
\par 
\par When exposing business objects, relations to other objects defined in the business model are recognized and handled automatically. One-to-many relations are represented as nested datasets within the exposer. In addition, exposers can be linked in a master-detail fashion allowing any related object to be exposed via the referring object. The exposers PhonesExposer on the form TContactEditForm and EmailsExposer on the form TPersonEditForm are examples of detail exposers that are linked to a master exposer.
\par \cf2\{bmc PersonEditForm.gif\}\cf0 
\par 
\par If you study TBasicEditForm and the various descendants hereof you will notice that they contain no code for handling the editing of the object \f1 - this is done automatically by the exposer.\f0 
\par }
400
Scribble400
Primer demo: Selecting Objects
Primer demo: Selecting Objects



Writing



FALSE
23
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Primer demo: Selecting Objects
\par \cf1\b0\strike\f1\fs16 Learning the Primer demo\cf2\strike0\{linkID=320>main\}\{keepn\}\cf0\fs20 
\par \f0 In order to work with business objects they have to be retrieved into memory. Specific objects can be retrieved via the  Retrieve constructor of their class if their object Id is known. If this is not the case or if multiple objects need to be accessed at once, either for presentation or manipulation, they can be  selected from the database.
\par 
\par Objects are selected from the database via the TInstantSelector component. This component is a special exposer that allows you to specify a command that defines the objects to be retrieved and optionally exposed. The syntax of the command is somewhat similar to SQL, but instead of tables and columns, you specify classes and attributes. When opened, TInstantSelector queries the database for the corresponding objects and exposes those as rows in the dataset. In addition, the selected objects are available via the Objects array property of the selector. See the section Exposing Objects for details about exposing.
\par 
\par In its simplest form, the selector command looks like this: 
\par 
\par SELECT * FROM TPerson
\par 
\par The above command will select all objects of the TPerson class. By adding a WHERE clause and an ORDER BY clause, the selection is limited to objects meeting a certain criteria and sorted as well:
\par \cf2\{bmc PrimerQuery.gif\}\cf0\f1 
\par 
\par Attributes are specified using regular dot-notation. This allows you to specify attributes of the selected object and objects related to this object. Please consult the InstantObjects Reference Guide for an in-depth explanation of the TInstantSelector Command property.
\par 
\par TInstantSelector is being used in the contactbook in several areas. First of all, the main contact grid used for browsing contacts is connected via a TDataSource to a selector. The command of this selector is changed when clicking one of the index-tabs above the grid and when performing a search via the Find feature.
\par 
\par In TContactEditForm, The country and category fields of a contact are edited via a standard TDBLookupComboBox in which the dropdown list is connected to a selector that is exposing the objects that can be associated with the field.
\par 
\par All forms used for browsing and looking up objects descent from TBasicBrowseForm. These forms all use a selector to select and expose the desired objects.\f0 
\par }
410
Scribble410
Primer demo: Filtering
Primer demo: Filtering



Writing



FALSE
12
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Primer demo: Filtering
\par \cf1\b0\strike\f1\fs16 Learning the Primer demo\cf2\strike0\{linkID=320>main\}\{keepn\}\cf0\fs20 
\par \f0 When exposing objects through an exposer or a selector, a filter can be used to hide unwanted objects. With selectors you can select objects from the database by specifying criterias to be met for the persistent attributes of the objects. Filters, on the other hand, allow you to determine which objects to include at business logic level. This means that objects can be shown or hidden depending on business rules defined by their class. Filters come in two flavours:  dynamic and static.
\par 
\par Dynamic filters are applied to each object when navigating through the dataset. Since only the objects that are touched during navigation are examined by the filter, this is the fastest filtering method if exposing a large number of objects. Dynamic filters are implemented via the FilterRecord event.
\par 
\par Static filters can be used if you want to pre-filter the exposed objects before navigation. When applying a static filter, all objects will be examined by the filter at once. For selectors, this means that all selected objects will be retrieved from the database. Since all objects are pre-filtered, no filtering takes place during navigation. Use static filters when objects are already present in memory, when exposing a limited number of objects or when the number of objects passing the filter needs to be known during navigation. Static filters are implemented via the Limit event.
\par 
\par InstantObjects Primer demonstrates both static and dynamic filtering via the Filter option available on the toolbar of the Contacts view.
\par }
420
Scribble420
Primer demo: Sorting
Primer demo: Sorting



Writing



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Primer demo: Sorting
\par \cf1\b0\strike\f1\fs16 Learning the Primer demo\cf2\strike0\{linkID=320>main\}\{keepn\}\cf0\fs20 
\par \f0 Objects retrieved via a selector can be sorted by the underlying database by specifying one or more persistent attributes of the object or related objects with the ORDER BY clause. In addition, objects exposed through an exposer or a selector can be sorted in memory by adding a custom sort method to the OnCompare event.
\par 
\par InstantObjects Primer demonstrates both sort methods via the Sort option available on the toolbar of the Contacts view. A custom sort event is also used by the exposer EmployeeExposer in TCompanyEditForm to order the employees by their name.
\par }
430
Scribble430
Primer demo: Object Explorer
Primer demo: Object Explorer



Writing



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Primer demo: Object Explorer
\par \cf1\b0\strike\f1\fs16 Learning the Primer demo\cf2\strike0\{linkID=320>main\}\{keepn\}\cf0\fs20 
\par \cf1\strike\f0 TInstantExplorer\cf2\strike0\{linkID=6080>main\}\cf0  is a visual component that display an object and its related objects in a tree. In its basic form, the component can be used to inspect and edit any object with published properties. The explorer can be customized for more application specific use by adding various event handlers.
\par \cf2\{bmc PrimerExplorer.gif\}\cf0 
\par InstantObjects Primer uses an instance of TInstantExplorer to explore the details of the currently selected contact in the contact grid. This explorer can be turned on and off via a button in the toolbar.
\par 
\par }
440
Scribble440
Primer demo: Connection Manager
Primer demo: Connection Manager



Writing



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs26 Primer demo: Connection Manager
\par \cf1\b0\strike\f1\fs16 Learning the Primer demo\cf2\strike0\{linkID=320>main\}\{keepn\}\cf0\fs20 
\par \f0 If you want the end-user of your application to be able to manage connections to databases, the  \cf1\strike TInstantConnectionManager\cf2\strike0\{linkID=3530>main\}\cf0  component \f1 and the TInstantConnectionManagerForm \f0 will provide your application with the necessary tools. The component wraps a dialog in which the user can define and manage connections to various databases.
\par 
\par InstantObjects Primer uses an instance of TInstantConnectionManager to allow you to test the application with the database of your choice. Click the Connection Manager button on the main toolbar or press Shift+Ctrl+C to open the Connection Manager.\cf1\strike 
\par }
1000
ID_1
EInstantAccessError
EInstantAccessError



Imported
main

EInstantAccessError;EInstantAccessError_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantAccessError \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=1030\}\tab\ul See Also\ulnone\{linkID=1010\}\tab\strike Example 1\strike0\{linkID=1020>example\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 The exception class for access errors.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 EInstantAccessError = \b class\b0 (\strike EInstantError\strike0\{linkID=1350>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 EInstantAccessError is raised when an illegal conversion is attempted. Most commonly EInstantAccessError is encountered when using the properties of a \strike TInstantAttribute\strike0\{linkID=2180>main\} descendant to access the data the attribute represents as a non-compatible type.
\par 
\par }
1010
ID_3





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike EInstantConversionError\strike0\{linkID=1230>main\}
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par }
1020
ID_4
EInstantAccessError, Example 1
EInstantAccessError, Example 1



Imported
example


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike EInstantAccessError\strike0\{link=ID_1>main\}\{keepn\}
\par \pard\keep\f1\fs18 function DateTimeToBoolean(DateTime: \strike TInstantDateTime\strike0\{linkID=5520>main\}): Boolean;
\par begin
\par   Result := DateTime.AsBoolean;
\par end;
\par 
\par }
1030
ID_2





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par \tab |
\par \strike EInstantAccessError\strike0\{linkID=1000>main\}
\par 
\par }
1040
ID_10





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantAccessError Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike EInstantAccessError\strike0\{linkID=1000>main\}
\par 
\par }
1050
ID_12
 




Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantAccessError Properties \cf1\b0\fs16 
\par \strike EInstantAccessError\strike0\{linkID=1000>main\}\tab\ul Legend\ulnone\{link=ID_13\}\cf2\{keepn\}\cf1 
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1060
ID_13





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1070
ID_14





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\f0\fs24\{keepn\}\b EInstantAccessError Events \cf1\b0\fs16 
\par \strike EInstantAccessError\strike0\{linkID=1000>main\}
\par 
\par }
1080
ID_18





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantAccessError Methods \cf1\b0\fs16 
\par \strike EInstantAccessError\strike0\{linkID=1000>main\}\tab\ul Legend\ulnone\{link=ID_19\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1090
ID_19





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1100
ID_20





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\f0\fs24\{keepn\}rd\b EInstantAccessError Members \cf1\b0\fs16 
\par \strike EInstantAccessError\strike0\{linkID=1000>main\}\tab\ul Legend\ulnone\{linkID=1110\}
\par 
\par }
1110
ID_21





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1120
ID_22
EInstantConflict
EInstantConflict



Imported
main

EInstantConflict;EInstantConflict_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantConflict \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=1140\}\tab\strike Example 1\strike0\{linkID=1130>example\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 The exception class for conflict errors.
\par \pard\sb25\sa25\tx1435\tx2875\f1 EInstantConflict = \b class\b0 (\strike EInstantError\strike0\{linkID=1350>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 EInstantConflict is raised as a consequence of conflicting concurrent updates of an object. EInstantConflict occurs normally only in multi-user environments.
\par 
\par }
1130
ID_24
EInstantConflict, Example 1
EInstantConflict, Example 1



Imported
example


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike EInstantConflict\strike0\{link=ID_22>main\}\{keepn\}
\par \fs18 
\par \pard\tx3240\ul\b User 1\tab User 2\f1                                              \f0 
\par \ulnone\b0 Retrieve Foo\tab Retrieve Foo
\par Modify Foo\tab 
\par Store Foo\tab Modify Foo
\par \f1\tab\f0 Store Foo <---- User 2 gets an EInstantConflict
\par }
1140
ID_23





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par \tab |
\par \strike EInstantConflict\strike0\{linkID=1120>main\}
\par 
\par }
1150
ID_25





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantConflict Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike EInstantConflict\strike0\{linkID=1120>main\}
\par 
\par }
1160
ID_26





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantConflict Properties \cf1\b0\fs16 
\par \strike EInstantConflict\strike0\{linkID=1120>main\}\tab\ul Legend\ulnone\{link=ID_27\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1170
ID_27





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1180
ID_28





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\f0\fs24\{keepn\}rd\b EInstantConflict Events \cf1\b0\fs16 
\par \strike EInstantConflict\strike0\{linkID=1120>main\}
\par 
\par }
1190
ID_29





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantConflict Methods \cf1\b0\fs16 
\par \strike EInstantConflict\strike0\{linkID=1120>main\}\tab\ul Legend\ulnone\{link=ID_30\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1200
ID_30





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1210
ID_31





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\f0\fs24\{keepn\}rd\b EInstantConflict Members \cf1\b0\fs16 
\par \strike EInstantConflict\strike0\{linkID=1120>main\}\tab\ul Legend\ulnone\{linkID=1220\}
\par 
\par }
1220
ID_32





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1230
ID_8
EInstantConversionError
EInstantConversionError



Imported
main

EInstantConversionError;EInstantConversionError_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantConversionError \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=1260\}\tab\ul See Also\ulnone\{linkID=1240\}\tab\strike Example 1\strike0\{linkID=1250>example\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 The exception class for conversion errors.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 EInstantConversionError = \b class\b0 (\strike EInstantError\strike0\{linkID=1350>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 EInstantConversionError is raised when a conversion is unsuccesful. Most commonly \strike EInstantAccessError\strike0\{linkID=1000>main\} is encountered when using the properties of a \strike TInstantAttribute\strike0\{linkID=2180>main\} descendant to access the data the attribute represents and the conversion of the data is unsuccesful.
\par 
\par }
1240
ID_34





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike EInstantAccessError\strike0\{linkID=1000>main\}
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par }
1250
ID_35
EInstantConversionError, Example 1
EInstantConversionError, Example 1



Imported
example


FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike EInstantConversionError\strike0\{link=ID_8>main\}\{keepn\}
\par \pard\keep\f1\fs18 procedure StringToDateTime(const S: string; DateTime: \strike TInstantDateTime\strike0\{linkID=5520>main\});
\par begin
\par   DateTime.AsString := S;
\par end;
\par 
\par StringToDateTime('InstantObjects', SomeDateTime)
\par 
\par }
1260
ID_33





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par \tab |
\par \strike EInstantConversionError\strike0\{linkID=1230>main\}
\par 
\par }
1270
ID_37





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantConversionError Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike EInstantConversionError\strike0\{linkID=1230>main\}
\par 
\par }
1280
ID_38





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantConversionError Properties \cf1\b0\fs16 
\par \strike EInstantConversionError\strike0\{linkID=1230>main\}\tab\ul Legend\ulnone\{link=ID_39\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1290
ID_39





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1300
ID_40





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 EInstantConversionError Events \b0\{keepn\}\cf1\fs16 
\par \strike EInstantConversionError\strike0\{linkID=1230>main\}
\par 
\par }
1310
ID_41





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantConversionError Methods \cf1\b0\fs16 
\par \strike EInstantConversionError\strike0\{linkID=1230>main\}\tab\ul Legend\ulnone\{link=ID_42\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1320
ID_42





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1330
ID_43





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantConversionError Members \b0\{keepn\}\cf1\fs16 
\par \strike EInstantConversionError\strike0\{linkID=1230>main\}\tab\ul Legend\ulnone\{linkID=1340\}
\par 
\par }
1340
ID_44





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1350
ID_6
EInstantError
EInstantError



Imported
main

EInstantError;EInstantError_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantError \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=1360\}\tab\strike Members\strike0\{linkID=1430>nav\}\tab\strike Properties\strike0\{linkID=1380>nav\}\tab\strike Methods\strike0\{linkID=1410>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 The common ancestor of exception classes.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 EInstantError = \b class\b0 (Exception)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 EInstantError implements the basic functionality of exception classes. This includes among others the ability to iterate backwards through the chain of causing exceptions.
\par 
\par }
1360
ID_45





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par 
\par }
1370
ID_49





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantError Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike EInstantError\strike0\{linkID=1350>main\}
\par 
\par }
1380
ID_47





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantError Properties \cf1\b0\fs16 
\par \strike EInstantError\strike0\{linkID=1350>main\}\tab\ul Legend\ulnone\{link=ID_50\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1390
ID_50





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1400
ID_51





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 EInstantError Events \b0\{keepn\}\cf1\fs16 
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par 
\par }
1410
ID_48





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantError Methods \cf1\b0\fs16 
\par \strike EInstantError\strike0\{linkID=1350>main\}\tab\ul Legend\ulnone\{link=ID_52\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1420
ID_52





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1430
ID_46





Imported



FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantError Members \cf1\b0\fs16 
\par \strike EInstantError\strike0\{linkID=1350>main\}\tab\ul Legend\ulnone\{link=ID_53\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1440
ID_53





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1450
ID_11
EInstantError.OriginalException
EInstantError,OriginalException;OriginalException;OriginalException,EInstantError



Imported
main

EInstantError_OriginalException;OriginalException;OriginalException_Property
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantError.OriginalException \cf1\b0\fs16 
\par \strike EInstantError\strike0\{link=ID_6>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Contains the original exception causing the \strike EInstantError\strike0\{linkID=1350>main\} exception.
\par \pard\sb25\sa25\b\f1 property\b0  OriginalException: TObject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 If assigned, OriginalException contains a reference to the causing exception. This enables iteration backwards through a chain of \strike EInstantError\strike0\{linkID=1350>main\} instances to the origin of the error. OriginalException is declared as a TObject, which implies that it is not necessarily an \strike EInstantError\strike0\{linkID=1350>main\} descendant, but may be any exception type.
\par 
\par }
1460
ID_15
EInstantError.CreateRes
CreateRes;CreateRes,EInstantError;EInstantError,CreateRes



Imported
main

CreateRes;CreateRes_Method;EInstantError_CreateRes
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantError.CreateRes \cf1\b0\fs16 
\par \strike EInstantError\strike0\{link=ID_6>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Creates an exception instance with a message loaded from the applications resources.
\par \pard\sb25\sa25\b\f1 constructor\b0  CreateRes(ResStringRec: PResStringRec; E: TObject);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use CreateRes to create an exception instance with a message loaded from the applications resources. Using resourcestrings the address of the resourcestring is passed as the ResStringRec argument.
\par 
\par }
1470
ID_16
EInstantError.CreateResFmt
CreateResFmt;CreateResFmt,EInstantError;EInstantError,CreateResFmt



Imported
main

CreateResFmt;CreateResFmt_Method;EInstantError_CreateResFmt
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantError.CreateResFmt \cf1\b0\fs16 
\par \strike EInstantError\strike0\{link=ID_6>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Creates an exception instance with a formatted message loaded from the applications resources.
\par \pard\sb25\sa25\b\f1 constructor\b0  CreateResFmt(ResStringRec: PResStringRec; \b const\b0  Args: \b array\b0  \b of\b0  \b const\b0 ; E: TObject);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use \strike CreateRes\strike0\{linkID=1460>main\} to create an exception instance with a formatted message loaded from the applications resources. Using resourcestrings, the address of the resourcestring is passed as the ResStringRec argument. The Args argument is a constant array containing values to be inserted into the formatted resourcestring.
\par 
\par }
1480
ID_17
EInstantError.Destroy
Destroy;Destroy,EInstantError;EInstantError,Destroy



Imported
main

Destroy;Destroy_Method;EInstantError_Destroy
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantError.Destroy \cf1\b0\fs16 
\par \strike EInstantError\strike0\{link=ID_6>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Destroys the exception instance.
\par \pard\sb25\sa25\b\f1 destructor\b0  Destroy; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Destroys the exception instance and if assigned also the original exception causing the \strike EInstantError\strike0\{linkID=1350>main\} exception.
\par 
\par }
1490
ID_54
EInstantKeyViolation
EInstantKeyViolation



Imported
main

EInstantKeyViolation;EInstantKeyViolation_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantKeyViolation \cf1\b0\fs16\{keepn\}
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=1510\}\tab\ul See Also\ulnone\{linkID=1500\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 The exception class for key violations.
\par \pard\sb25\sa25\tx1435\tx2875\f1 EInstantKeyViolation = \b class\b0 (\strike EInstantConflict\strike0\{linkID=1120>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 EInstantKeyviolation is raised when a key violation is encountered. Nothing is implied regarding the cause of an EInstantKeyViolation, but most commonly it is a consequence of trying to store an object of a specific class with the same Id as an existing object.
\par 
\par }
1500
ID_56





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Store\strike0\{linkID=8880>main\}
\par }
1510
ID_55





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par \tab |
\par \strike EInstantConflict\strike0\{linkID=1120>main\}
\par \tab |
\par \strike EInstantKeyViolation\strike0\{linkID=1490>main\}
\par 
\par }
1520
ID_58





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantKeyViolation Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike EInstantKeyViolation\strike0\{linkID=1490>main\}
\par 
\par }
1530
ID_59





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantKeyViolation Properties \cf1\b0\fs16 
\par \strike EInstantKeyViolation\strike0\{linkID=1490>main\}\tab\ul Legend\ulnone\{link=ID_60\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1540
ID_60





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1550
ID_61





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 EInstantKeyViolation Events\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike EInstantKeyViolation\strike0\{linkID=1490>main\}
\par 
\par }
1560
ID_62





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantKeyViolation Methods \cf1\b0\fs16 
\par \strike EInstantKeyViolation\strike0\{linkID=1490>main\}\tab\ul Legend\ulnone\{link=ID_63\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1570
ID_63





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1580
ID_64





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantKeyViolation Members \b0\{keepn\}\cf1\fs16 
\par \strike EInstantKeyViolation\strike0\{linkID=1490>main\}\tab\ul Legend\ulnone\{linkID=1590\}
\par 
\par }
1590
ID_65





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1600
ID_66
EInstantRangeError
EInstantRangeError



Imported
main

EInstantRangeError;EInstantRangeError_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantRangeError \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul Hierarchy\ulnone\{linkID=1610\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\fs18 The exception class for too large or too small integer values.
\par \pard\sb25\sa25\tx1435\f1 EInstantRangeError = \b class\b0 (\strike EInstantError\strike0\{linkID=1350>main\})
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 EInstantRangeError is raised when an integer value exceeds the range it is assigned to. Most commonly EInstantErrors are encountered when iterating beyond the bounds of an array.
\par 
\par }
1610
ID_67





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par \tab |
\par \strike EInstantRangeError\strike0\{linkID=1600>main\}
\par 
\par }
1620
ID_68





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantRangeError Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike EInstantRangeError\strike0\{linkID=1600>main\}
\par 
\par }
1630
ID_69





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantRangeError Properties \cf1\b0\fs16 
\par \strike EInstantRangeError\strike0\{linkID=1600>main\}\tab\ul Legend\ulnone\{link=ID_70\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1640
ID_70





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1650
ID_71





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 EInstantRangeError Events \b0\{keepn\}\cf1\fs16 
\par \strike EInstantRangeError\strike0\{linkID=1600>main\}
\par 
\par }
1660
ID_72





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantRangeError Methods \cf1\b0\fs16 
\par \strike EInstantRangeError\strike0\{linkID=1600>main\}\tab\ul Legend\ulnone\{link=ID_73\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1670
ID_73





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1680
ID_74





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantRangeError Members\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike EInstantRangeError\strike0\{linkID=1600>main\}\tab\ul Legend\ulnone\{linkID=1690\}
\par 
\par }
1690
ID_75





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1700
ID_76
EInstantStreamError
EInstantStreamError



Imported
main

EInstantStreamError;EInstantStreamError_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantStreamError \cf1\b0\fs16\{keepn\}
\par \pard\keepn\sb25\tx1435\ul Hierarchy\ulnone\{linkID=1710\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\fs18 The exception class for streaming errors.
\par \pard\sb25\sa25\tx1435\f1 EInstantStreamError = \b class\b0 (\strike EInstantError\strike0\{linkID=1350>main\})
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 EInstantStreamError is raised when a streaming error is encountered. An EInstantStream error indicates that the stream doesn't match the semantics of the streaming mechanism.
\par 
\par }
1710
ID_77





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par \tab |
\par \strike EInstantStreamError\strike0\{linkID=1700>main\}
\par 
\par }
1720
ID_78





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantStreamError Fields \cf1\b0\fs16\{keepn\}
\par \pard\keepn\sb25\tx355\strike EInstantStreamError\strike0\{linkID=1700>main\}
\par 
\par }
1730
ID_79





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantStreamError Properties \cf1\b0\fs16 
\par \strike EInstantStreamError\strike0\{linkID=1700>main\}\tab\ul Legend\ulnone\{link=ID_80\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1740
ID_80





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1750
ID_81





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 EInstantStreamError Events \b0\{keepn\}\cf1\fs16 
\par \strike EInstantStreamError\strike0\{linkID=1700>main\}
\par 
\par }
1760
ID_82





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantStreamError Methods \cf1\b0\fs16 
\par \strike EInstantStreamError\strike0\{linkID=1700>main\}\tab\ul Legend\ulnone\{link=ID_83\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1770
ID_83





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1780
ID_84





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantStreamError Members \b0\{keepn\}\cf1\fs16 
\par \strike EInstantStreamError\strike0\{linkID=1700>main\}\tab\ul Legend\ulnone\{linkID=1790\}
\par 
\par }
1790
ID_85





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1800
ID_86
EInstantValidationError
EInstantValidationError



Imported
main

EInstantValidationError;EInstantValidationError_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantValidationError \cf1\b0\fs16\{keepn\}
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=1820\}\tab\ul See Also\ulnone\{linkID=1810\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 The exception class for validation errors.
\par \pard\sb25\sa25\tx1435\tx2875\f1 EInstantValidationError = \b class\b0 (\strike EInstantError\strike0\{linkID=1350>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 EInstantValidationError is raised when an invalid value is encountered. Most commonly it is a consequence of setting the data of a \strike TInstantAttribute\strike0\{linkID=2180>main\} descendant to a non-valid value.
\par 
\par }
1810
ID_88





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par }
1820
ID_87





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par \tab |
\par \strike EInstantValidationError\strike0\{linkID=1800>main\}
\par 
\par }
1830
ID_89





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantValidationError Fields \cf1\b0\fs16\{keepn\}
\par \pard\keepn\sb25\tx355\strike EInstantValidationError\strike0\{linkID=1800>main\}
\par 
\par }
1840
ID_90





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantValidationError Properties \cf1\b0\fs16 
\par \strike EInstantValidationError\strike0\{linkID=1800>main\}\tab\ul Legend\ulnone\{link=ID_91\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1850
ID_91





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1860
ID_92





Imported



FALSE
4
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\f0\fs24\{keepn\}\cf0 
\par }
1870
ID_93





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantValidationError Methods \cf1\b0\fs16 
\par \strike EInstantValidationError\strike0\{linkID=1800>main\}\tab\ul Legend\ulnone\{link=ID_94\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1880
ID_94





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1890
ID_95





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantValidationError Members\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike EInstantValidationError\strike0\{linkID=1800>main\}\tab\ul Legend\ulnone\{linkID=1900\}
\par 
\par }
1900
ID_96





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1910
ID_97
TInstantADOConnector
TInstantADOConnector



Imported
main

TInstantADOConnector;TInstantADOConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADOConnector \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=1920\}\tab\strike Members\strike0\{linkID=1990>nav\}\tab\strike Properties\strike0\{linkID=1940>nav\}\tab\strike Methods\strike0\{linkID=1980>nav\}\tab\strike Unit: InstantADO\strike0\{linkID=12530>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\strike\f1 TInstantConnectorClass\strike0\{linkID=12060>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \strike TInstantConnector\strike0\{linkID=3780>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
1920
ID_98





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3780>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9810>main\}
\par \tab |
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3410>main\}
\par \tab |
\par \strike TInstantADOConnector\strike0\{linkID=1910>main\}
\par 
\par }
1930
ID_107





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADOConnector Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantADOConnector\strike0\{linkID=1910>main\}
\par 
\par }
1940
ID_100





Imported



FALSE
30
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADOConnector Properties \cf1\b0\fs16 
\par \strike TInstantADOConnector\strike0\{linkID=1910>main\}\tab\ul Legend\ulnone\{link=ID_128\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantADOConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike CanTransaction\strike0\{linkID=2010>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=2020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ProviderType\strike0\{linkID=2030>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Connection\strike0\{linkID=3510>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=9910>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3880>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3900>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3940>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3970>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3990>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4090>main\}
\par 
\par }
1950
ID_128





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
1960
ID_132





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADOConnector Events \cf1\b0\fs16 
\par \strike TInstantADOConnector\strike0\{linkID=1910>main\}\tab\ul Legend\ulnone\{link=ID_133\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=9920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=9940>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4300>main\}
\par 
\par }
1970
ID_133





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
1980
ID_101





Imported



FALSE
23
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantADOConnector Methods \cf1\b0\fs16 
\par \strike TInstantADOConnector\strike0\{link=ID_97>main\}\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantADOConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CompactDatabase\strike0\{linkID=2040>main\}
\par \pard\sb55\sa55\b TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=3520>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4170>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4280>main\}
\par 
\par }
1990
ID_99





Imported



FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADOConnector Members \cf1\b0\fs16 
\par \strike TInstantADOConnector\strike0\{linkID=1910>main\}\tab\ul Legend\ulnone\{link=ID_148\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike CanTransaction\strike0\{linkID=2010>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=2020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ProviderType\strike0\{linkID=2030>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CompactDatabase\strike0\{linkID=2040>main\}
\par 
\par }
2000
ID_148





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2010
ID_108
TInstantADOConnector.CanTransaction
CanTransaction;CanTransaction,TInstantADOConnector;TInstantADOConnector,CanTransaction



Imported
main

CanTransaction;CanTransaction_Property;TInstantADOConnector_CanTransaction
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADOConnector.CanTransaction \cf1\b0\fs16 
\par \strike TInstantADOConnector\strike0\{link=ID_97>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines if the associated database engine supports transactions.
\par \pard\sb25\sa25\b\f1 property\b0  CanTransaction: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use CanTransaction to determine if the database engine to which the connector is associated through its connection property supports transactions.
\par 
\par }
2020
ID_109
TInstantADOConnector.Connection
Connection;Connection,TInstantADOConnector;TInstantADOConnector,Connection



Imported
main

Connection;Connection_Property;TInstantADOConnector_Connection
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADOConnector.Connection \cf1\b0\fs16 
\par \strike TInstantADOConnector\strike0\{link=ID_97>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies the connection used by the connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Connection: TADOConnection;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Connection property to specify the connection used by the connector component.
\par 
\par }
2030
ID_110
TInstantADOConnector.ProviderType
ProviderType;ProviderType,TInstantADOConnector;TInstantADOConnector,ProviderType



Imported
main

ProviderType;ProviderType_Property;TInstantADOConnector_ProviderType
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADOConnector.ProviderType \cf1\b0\fs16 
\par \strike TInstantADOConnector\strike0\{link=ID_97>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies the provider type
\par \pard\sb25\sa25\b\f1 property\b0  ProviderType: \strike TInstantADOProviderType\strike0\{linkID=11960>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 ProviderType specifies the type of the OLE DB Provider. Specifies the type of ADO connection, which the connector uses to establish its connection to the underlying database
\par Summary The type of the provider
\par 
\par }
2040
ID_134
TInstantADOConnector.CompactDatabase
CompactDatabase;CompactDatabase,TInstantADOConnector;TInstantADOConnector,CompactDatabase



Imported
main

CompactDatabase;CompactDatabase_Method;TInstantADOConnector_CompactDatabase
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADOConnector.CompactDatabase \cf1\b0\fs16 
\par \strike TInstantADOConnector\strike0\{link=ID_97>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Compacts a database.
\par \pard\sb25\sa25\b\f1 procedure\b0  CompactDatabase;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 As you change data in a database, the database file can become fragmented and use more disk space than is necessary. Periodically, you can use the CompactDatabase method to defragment the database file. The compacted database is usually smaller and often runs faster. The function is only effective for the MicroSoft Jet OLEDB Provider.
\par 
\par }
2050
ID_150
TInstantADSConnector
TInstantADSConnector



Imported
main

TInstantADSConnector;TInstantADSConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADSConnector \cf1\b0\fs16\{keepn\}
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=2060\}\tab\strike Members\strike0\{linkID=2130>nav\}\tab\strike Properties\strike0\{linkID=2080>nav\}\tab\strike Methods\strike0\{linkID=2120>nav\}\tab\strike Unit: InstantADS\strike0\{linkID=12560>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\strike\f1 TInstantConnectorClass\strike0\{linkID=12060>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \strike TInstantConnector\strike0\{linkID=3780>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
2060
ID_151





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3780>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9810>main\}
\par \tab |
\par \strike TInstantADSConnector\strike0\{linkID=2050>main\}
\par 
\par }
2070
ID_156





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADSConnector Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantADSConnector\strike0\{linkID=2050>main\}
\par 
\par }
2080
ID_153





Imported



FALSE
26
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADSConnector Properties \cf1\b0\fs16 
\par \strike TInstantADSConnector\strike0\{linkID=2050>main\}\tab\ul Legend\ulnone\{link=ID_158\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantADSConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=2150>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=9910>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3880>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3900>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3940>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3970>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3990>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4090>main\}
\par 
\par }
2090
ID_158





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2100
ID_159





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADSConnector Events \cf1\b0\fs16 
\par \strike TInstantADSConnector\strike0\{linkID=2050>main\}\tab\ul Legend\ulnone\{link=ID_160\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=9920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=9940>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4300>main\}
\par 
\par }
2110
ID_160





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
2120
ID_154





Imported



FALSE
22
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantADSConnector Methods \cf1\b0\fs16 
\par \strike TInstantADSConnector\strike0\{link=ID_150>main\}\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantADSConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AllowTransactions\strike0\{linkID=2160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=2170>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4170>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4280>main\}
\par 
\par }
2130
ID_152





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADSConnector Members \cf1\b0\fs16 
\par \strike TInstantADSConnector\strike0\{linkID=2050>main\}\tab\ul Legend\ulnone\{link=ID_163\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=2150>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AllowTransactions\strike0\{linkID=2160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=2170>main\}
\par 
\par }
2140
ID_163





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2150
ID_157
TInstantADSConnector.Connection
Connection;Connection,TInstantADSConnector;TInstantADSConnector,Connection



Imported
main

Connection;Connection_Property;TInstantADSConnector_Connection
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADSConnector.Connection \cf1\b0\fs16 
\par \strike TInstantADSConnector\strike0\{link=ID_150>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies the connection used by the connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Connection: TADSConnection;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Connection property to specify the connection used by the connector component.
\par 
\par }
2160
ID_161
TInstantADSConnector.AllowTransactions
AllowTransactions;AllowTransactions,TInstantADSConnector;TInstantADSConnector,AllowTransactions



Imported
main

AllowTransactions;AllowTransactions_Method;TInstantADSConnector_AllowTransactions
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADSConnector.AllowTransactions \cf1\b0\fs16 
\par \strike TInstantADSConnector\strike0\{link=ID_150>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines if transactions are allowed.
\par \pard\sb25\sa25\b\f1 function\b0  AllowTransactions: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use AllowTransactions to determine if the currently logged in user on the Advantage Database Server is allowed to use transactions.
\par 
\par }
2170
ID_162
TInstantADSConnector.HasConnection
HasConnection;HasConnection,TInstantADSConnector;TInstantADSConnector,HasConnection



Imported
main

HasConnection;HasConnection_Method;TInstantADSConnector_HasConnection
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADSConnector.HasConnection \cf1\b0\fs16 
\par \strike TInstantADSConnector\strike0\{link=ID_150>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines if a connection is associated with the connector.
\par \pard\sb25\sa25\b\f1 function\b0  HasConnection: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasConnection to determine if the \strike Connection\strike0\{linkID=2150>main\} property of the connector is assigned. If a connection component has been associated with the connector, HasConnection returns True. Otherwise HasConnection returns False.
\par 
\par }
2180
ID_7
TInstantAttribute
TInstantAttribute



Imported
main

TInstantAttribute;TInstantAttribute_Object
FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute \cf1\b0\fs16\{keepn\}
\par \pard\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=2190\}\tab\strike Members\strike0\{linkID=2260>nav\}\tab\strike Properties\strike0\{linkID=2210>nav\}\tab\strike Methods\strike0\{linkID=2240>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 The common ancestor of all the attribute classes.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantAttribute = \b class\b0 (\strike TInstantStreamable\strike0\{linkID=10680>main\})
\par \strike PInstantAttribute\strike0\{linkID=11940>main\} = ^TInstantAttribute;
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantAttribute is the ancestor of all attribute classes. It introduces common properties and methods that mainly fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Convert the value of the attribute to another data type.
\par \{bmct bm3.BMP\}\tab Validate the value of the attribute.
\par \{bmct bm3.BMP\}\tab Define how the value of the attribute is displayed or edited.
\par \pard\sb25\sa25\tx495 Although no presumptions are made about the use of TInstantAttribute descendants, their main purpose is to serve as logical placeholders for attributes of classes descending from \strike TInstantObject\strike0\{linkID=7240>main\}. Attributes may have metadata. The metadata contains the definition of the attribute such as the attributes name, data type, and size. Furthermore the metadata may specify features of the attribute such as masks and default value. If the attribute is owned by an instance of a \strike TInstantObject\strike0\{linkID=7240>main\} descendant, it has been created on the basis of attribute metadata specified as part of the class of the owning instance. TInstantAttribute descendants allocate memory to hold the value of the attribute they represent.
\par 
\par TInstantAttribute is abstract; so do not create instances of this class. Instead refer to the following concrete descendant classes: 
\par 
\par \trowd\trleft-1\trqc\cellx809\cellx1439\pard\intbl  \b Simple attribute classes\cell Complex attribute classes\cell\row
\b0\strike\trowd\trleft-1\trqc\cellx809\cellx1439\intbl TInstantInteger\strike0\{linkID=6920>main\}\cell\strike TInstantPart\strike0\{linkID=9100>main\}\cell\row
\strike\trowd\trleft-1\trqc\cellx809\cellx1439\intbl TInstantFloat\strike0\{linkID=6690>main\}\cell\strike TInstantReference\strike0\{linkID=9370>main\}\cell\row
\strike\trowd\trleft-1\trqc\cellx809\cellx1439\intbl TInstantBoolean\strike0\{linkID=2870>main\}\cell\strike TInstantParts\strike0\{linkID=9240>main\}\cell\row
\strike\trowd\trleft-1\trqc\cellx809\cellx1439\intbl TInstantString\strike0\{linkID=10850>main\}\cell\strike TInstantReferences\strike0\{linkID=9630>main\}\cell\row
\strike\trowd\trleft-1\trqc\cellx809\cellx1439\intbl TInstantDateTime\strike0\{linkID=5520>main\}\cell\cell\row
\strike\trowd\trleft-1\trqc\cellx809\cellx1439\intbl TInstantBlob\strike0\{linkID=2690>main\}\cell\cell\row
\strike\trowd\trleft-1\trqc\cellx809\cellx1439\intbl TInstantMemo\strike0\{linkID=7040>main\}\cell\cell\row
\pard 
\par 
\par }
2190
ID_164





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par 
\par }
2200
ID_181





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantAttribute Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantAttribute\strike0\{linkID=2180>main\}
\par 
\par }
2210
ID_166





Imported



FALSE
25
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantAttribute Properties \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}\tab\ul Legend\ulnone\{link=ID_200\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
2220
ID_200





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
2230
ID_201





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantAttribute Events \b0\{keepn\}\cf1\fs16 
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par 
\par }
2240
ID_167





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantAttribute Methods \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}\tab\ul Legend\ulnone\{link=ID_213\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
2250
ID_213





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
2260
ID_165





Imported



FALSE
32
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantAttribute Members \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}\tab\ul Legend\ulnone\{link=ID_214\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par 
\par }
2270
ID_214





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
2280
ID_182
TInstantAttribute.AsBoolean
AsBoolean;AsBoolean,TInstantAttribute;TInstantAttribute,AsBoolean



Imported
main

AsBoolean;AsBoolean_Property;TInstantAttribute_AsBoolean
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsBoolean \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a Boolean.
\par \pard\sb25\sa25\b\f1 property\b0  AsBoolean: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsBoolean provides the ability to specify the value of the attribute as a Boolean. \strike TInstantAttribute\strike0\{linkID=2180>main\} descendants override the GetAsBoolean and SetAsBoolean methods to perform the actual conversion. If a Boolean is incompatible with the data type of the attribute, AsBoolean raises an exception.
\par 
\par }
2290
ID_183
TInstantAttribute.AsCurrency
AsCurrency;AsCurrency,TInstantAttribute;TInstantAttribute,AsCurrency



Imported
main

AsCurrency;AsCurrency_Property;TInstantAttribute_AsCurrency
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsCurrency \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a Currency.
\par \pard\sb25\sa25\b\f1 property\b0  AsCurrency: Currency;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsCurrency provides the ability to specify the value of the attribute as a Currency. \strike TInstantAttribute\strike0\{linkID=2180>main\} descendants override the GetAsCurrency and SetAsCurrency methods to perform the actual conversion. If a Currency is incompatible with the data type of the attribute, AsCurrency raises an exception.
\par 
\par }
2300
ID_184
TInstantAttribute.AsDateTime
AsDateTime;AsDateTime,TInstantAttribute;TInstantAttribute,AsDateTime



Imported
main

AsDateTime;AsDateTime_Property;TInstantAttribute_AsDateTime
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsDateTime \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a TDateTime.
\par \pard\sb25\sa25\b\f1 property\b0  AsDateTime: TDateTime;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsDateTime provides the ability to specify the value of the attribute as a TDateTime. \strike TInstantAttribute\strike0\{linkID=2180>main\} descendants override the GetAsDateTime and SetAsDateTime methods to perform the actual conversion. If a TDateTime is incompatible with the data type of the attribute, AsDateTime raises an exception.
\par 
\par }
2310
ID_185
TInstantAttribute.AsFloat
AsFloat;AsFloat,TInstantAttribute;TInstantAttribute,AsFloat



Imported
main

AsFloat;AsFloat_Property;TInstantAttribute_AsFloat
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsFloat \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a Double.
\par \pard\sb25\sa25\b\f1 property\b0  AsFloat: Double;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsFloat provides the ability to specify the value of the attribute as a Double. \strike TInstantAttribute\strike0\{linkID=2180>main\} descendants override the GetAsFloat and SetAsFloat methods to perform the actual conversion. If a Double is incompatible with the data type of the attribute, AsFloat raises an exception.
\par 
\par }
2320
ID_186
TInstantAttribute.AsInteger
AsInteger;AsInteger,TInstantAttribute;TInstantAttribute,AsInteger



Imported
main

AsInteger;AsInteger_Property;TInstantAttribute_AsInteger
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsInteger \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as an Integer.
\par \pard\sb25\sa25\b\f1 property\b0  AsInteger: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsInteger provides the ability to specify the value of the attribute as an Integer. \strike TInstantAttribute\strike0\{linkID=2180>main\} descendants override the GetAsInteger and SetAsInteger methods to perform the actual conversion. If an Integer is incompatible with the data type of the attribute, AsInteger raises an exception.
\par 
\par }
2330
ID_187
TInstantAttribute.AsObject
AsObject;AsObject,TInstantAttribute;TInstantAttribute,AsObject



Imported
main

AsObject;AsObject_Property;TInstantAttribute_AsObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsObject \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a \strike TInstantObject\strike0\{linkID=7240>main\}.
\par \pard\sb25\sa25\b\f1 property\b0  AsObject: \strike TInstantObject\strike0\{linkID=7240>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsObject provides the ability to specify the value of the attribute as a \strike TInstantObject\strike0\{linkID=7240>main\}. \strike TInstantAttribute\strike0\{linkID=2180>main\} descendants override the GetAsObject and SetAsObject methods to perform the actual conversion. If a \strike TInstantObject\strike0\{linkID=7240>main\} is incompatible with the data type of the attribute, AsObject raises an exception.
\par 
\par }
2340
ID_188
TInstantAttribute.AsString
AsString;AsString,TInstantAttribute;TInstantAttribute,AsString



Imported
main

AsString;AsString_Property;TInstantAttribute_AsString
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsString \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a string.
\par \pard\sb25\sa25\b\f1 property\b0  AsString: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsString provides the ability to specify the value of the attribute as a string. \strike TInstantAttribute\strike0\{linkID=2180>main\} descendants override the GetAsString and SetAsString methods to perform the actual conversion. If a string is incompatible with the data type of the attribute, AsString raises an exception.
\par 
\par }
2350
ID_189
TInstantAttribute.AsVariant
AsVariant;AsVariant,TInstantAttribute;TInstantAttribute,AsVariant



Imported
main

AsVariant;AsVariant_Property;TInstantAttribute_AsVariant
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsVariant \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a Variant.
\par \pard\sb25\sa25\b\f1 property\b0  AsVariant: Variant;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsVariant provides the ability to specify the value of the attribute as a Variant. \strike TInstantAttribute\strike0\{linkID=2180>main\} descendants override the GetAsVariant and SetAsVariant methods to perform the actual conversion. If a Variant is incompatible with the data type of the attribute, AsVariant raises an exception.
\par 
\par }
2360
ID_190
TInstantAttribute.DisplayText
DisplayText;DisplayText,TInstantAttribute;TInstantAttribute,DisplayText



Imported
main

DisplayText;DisplayText_Property;TInstantAttribute_DisplayText
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.DisplayText \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as it will be displayed in a data-aware control.
\par \pard\sb25\sa25\b\f1 property\b0  DisplayText: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 DisplayText is a read-only string representation of the value of the attribute as it will be displayed in a data-aware control.
\par 
\par }
2370
ID_191
TInstantAttribute.IsChanged
IsChanged;IsChanged,TInstantAttribute;TInstantAttribute,IsChanged



Imported
main

IsChanged;IsChanged_Property;TInstantAttribute_IsChanged
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.IsChanged \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantAttribute\strike0\{linkID=2180>main\}\tab\ul See Also\ulnone\{linkID=2380\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies is the attribute is changed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsChanged: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 IsChanged specifies if the value of the attribute is changed. If the attribute is owned and the owner has not disabled changes, setting the value of IsChanged to True will generate a change notification to the owner.
\par 
\par }
2380
ID_215





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute.Changed\strike0\{linkID=2510>main\}
\par }
2390
ID_192
TInstantAttribute.IsDefault
IsDefault;IsDefault,TInstantAttribute;TInstantAttribute,IsDefault



Imported
main

IsDefault;IsDefault_Property;TInstantAttribute_IsDefault
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.IsDefault \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if the value of the attribute is default.
\par \pard\sb25\sa25\b\f1 property\b0  IsDefault: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 IsDefault determines if the actual value of the attribute corresponds to the default value of the attribute. The attribute is considered to be default if its value corresponds to its initialization value. If the attribute has metadata the comparison is made between the default value specified by the metadata object and the actual value of the attribute. Otherwise the comparison is made between the attributes interpretation of a Null value and the actual value of the attribute. The comparison is not performed by \strike TInstantAttribute\strike0\{linkID=2180>main\}, but by descendant classes, overriding the GetIsDefault method.
\par 
\par }
2400
ID_193
TInstantAttribute.IsIndexed
IsIndexed;IsIndexed,TInstantAttribute;TInstantAttribute,IsIndexed



Imported
main

IsIndexed;IsIndexed_Property;TInstantAttribute_IsIndexed
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.IsIndexed \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantAttribute\strike0\{linkID=2180>main\}\tab\ul See Also\ulnone\{linkID=2410\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies if the attribute is indexed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsIndexed: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The IsIndexed property specifies if the attribute is indexed. The declaration of an indexed attribute is done via the attributes metadata. If the attrribute is indexed, an index is generated for the underlying field in the database when the database is created.
\par 
\par }
2410
ID_216





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute.IsRequired\strike0\{linkID=2440>main\}
\par \strike TInstantAttribute.IsMandatory\strike0\{linkID=2420>main\}
\par }
2420
ID_194
TInstantAttribute.IsMandatory
IsMandatory;IsMandatory,TInstantAttribute;TInstantAttribute,IsMandatory



Imported
main

IsMandatory;IsMandatory_Property;TInstantAttribute_IsMandatory
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.IsMandatory \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantAttribute\strike0\{linkID=2180>main\}\tab\ul See Also\ulnone\{linkID=2430\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies if the attribute is mandatory.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsMandatory: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The IsMandatory property specifies if storing or streaming of the attribute is mandatory. The value of IsMandatory will be True if either the attribute is indexed or required. If the attribute is not mandatory, storing and streaming will be omitted if the value of the attribute is the default value.
\par 
\par }
2430
ID_217





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute.IsIndexed\strike0\{linkID=2400>main\}
\par \strike TInstantAttribute.IsRequired\strike0\{linkID=2440>main\}
\par }
2440
ID_195
TInstantAttribute.IsRequired
IsRequired;IsRequired,TInstantAttribute;TInstantAttribute,IsRequired



Imported
main

IsRequired;IsRequired_Property;TInstantAttribute_IsRequired
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.IsRequired \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantAttribute\strike0\{linkID=2180>main\}\tab\ul See Also\ulnone\{linkID=2450\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies if the attribute is required.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsRequired: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The IsRequired property specifies if storing or streaming of the attribute is required under all circumstances. The declaration of an required attribute is done via the attributes metadata.
\par 
\par }
2450
ID_218





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute.IsIndexed\strike0\{linkID=2400>main\}
\par \strike TInstantAttribute.IsMandatory\strike0\{linkID=2420>main\}
\par }
2460
ID_196
TInstantAttribute.Metadata
Metadata;Metadata,TInstantAttribute;TInstantAttribute,Metadata



Imported
main

Metadata;Metadata_Property;TInstantAttribute_Metadata
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Metadata \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the metadata object associated with the attribute
\par \pard\sb25\sa25\b\f1 property\b0  Metadata: TInstantAttributeMetadata;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Metadata specifies the metatadata object associated with the attribute. If the attribute has no metadata, Metadata returns nil. Caution should be given when setting the metadata object of an attribute since no validation is performed.
\par 
\par }
2470
ID_197
TInstantAttribute.Name
Name;Name,TInstantAttribute;TInstantAttribute,Name



Imported
main

Name;Name_Property;TInstantAttribute_Name
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Name \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the name of the attribute.
\par \pard\sb25\sa25\b\f1 property\b0  \b Name\b0 : \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Name property to determine the name of the attribute.
\par 
\par }
2480
ID_198
TInstantAttribute.Owner
Owner;Owner,TInstantAttribute;TInstantAttribute,Owner



Imported
main

Owner;Owner_Property;TInstantAttribute_Owner
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Owner \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 States the owner of the attribute.
\par \pard\sb25\sa25\b\f1 property\b0  Owner: \strike TInstantObject\strike0\{linkID=7240>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Owner states the owner of the attribute. If the attribute is not owned, Owner returns nil.
\par 
\par }
2490
ID_199
TInstantAttribute.Value
TInstantAttribute,Value;Value;Value,TInstantAttribute



Imported
main

TInstantAttribute_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Value \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of an attribute as a Variant.
\par \pard\sb25\sa25\b\f1 property\b0  Value: Variant;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the attribute as a Variant.
\par 
\par }
2500
ID_202
TInstantAttribute.AttributeType
AttributeType;AttributeType,TInstantAttribute;TInstantAttribute,AttributeType



Imported
main

AttributeType;AttributeType_Method;TInstantAttribute_AttributeType
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AttributeType \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 States the data type of the attribute
\par \pard\sb25\sa25\b\f1 class\b0  \b function\b0  AttributeType: \strike TInstantAttributeType\strike0\{linkID=11980>main\}; \b virtual\b0 ; \b abstract\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use AttributeType to determine the data type of the attribute.
\par 
\par }
2510
ID_203
TInstantAttribute.Changed
Changed;Changed,TInstantAttribute;TInstantAttribute,Changed



Imported
main

Changed;Changed_Method;TInstantAttribute_Changed
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Changed \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantAttribute\strike0\{linkID=2180>main\}\tab\ul See Also\ulnone\{linkID=2520\}
\par \pard\sb25\sa85\tx1435\fs18 Marks the attribute as changed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Changed;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Changed marks the attribute as changed by setting its \strike IsChanged\strike0\{linkID=2370>main\} property to True.
\par 
\par }
2520
ID_220





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute.IsChanged\strike0\{linkID=2370>main\}
\par }
2530
ID_204
TInstantAttribute.Create
Create;Create,TInstantAttribute;TInstantAttribute,Create



Imported
main

Create;Create_Method;TInstantAttribute_Create
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Create \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Constructor that creates and initializes an attribute object.
\par \pard\sb25\sa25\b\f1 constructor\b0  Create(AOwner: \strike TInstantObject\strike0\{linkID=7240>main\}; AMetadata: TInstantAttributeMetadata); \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The Create constructor creates and initializes an attribute object. If the attribute must refer to an owning object, this object can be specified as the AOwner argument. If the attribute should have metadata, a metadata object can be specified as the AMetadata argument. \strike TInstantAttribute\strike0\{linkID=2180>main\} is abstract; so do not create instances of this class. Instead refer to concrete descendant classes.
\par \pard\fi-195\li195\sb25\sa25\b Note: \b0  The attribute is only destroyed by the owner if the class of the owner has metadata defined for the attribute. Otherwise the attribute should be destroyed manually.
\par 
\par }
2540
ID_205
TInstantAttribute.Initialize
Initialize;Initialize,TInstantAttribute;TInstantAttribute,Initialize



Imported
main

Initialize;Initialize_Method;TInstantAttribute_Initialize
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Initialize \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Initializes the value of the attribute.
\par \pard\sb25\sa25\b\f1 procedure\b0  Initialize; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Initialize to initialize the value of the attribute. If the attribute has metadata, the value of the attribute is set to the default value specified by the metadata object. Otherwise the value is reset to the attributes interpretation of a Null value. Descendants of \strike TInstantAttribute\strike0\{linkID=2180>main\} that override the \strike Reset\strike0\{linkID=2550>main\} method perform the actual initialization.
\par 
\par }
2550
ID_206
TInstantAttribute.Reset
Reset;Reset,TInstantAttribute;TInstantAttribute,Reset



Imported
main

Reset;Reset_Method;TInstantAttribute_Reset
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Reset \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Resets the actual value of the attribute to the initialization value.
\par \pard\sb25\sa25\b\f1 procedure\b0  Reset; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Reset to reset the value of the attribute to its initialization value. Reset calls \strike Initialize\strike0\{linkID=2540>main\} to do the initialization.
\par 
\par }
2560
ID_207
TInstantAttribute.Unchanged
TInstantAttribute,Unchanged;Unchanged;Unchanged,TInstantAttribute



Imported
main

TInstantAttribute_Unchanged;Unchanged;Unchanged_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Unchanged \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{link=ID_7>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Marks the attribute as unchanged.
\par \pard\sb25\sa25\b\f1 procedure\b0  Unchanged; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Unchanged marks the attribute as unchanged by setting its \strike IsChanged\strike0\{linkID=2370>main\} property to False. It should normally not be necessary to call Unchanged directly since it is called automatically if an attribute is no longer changed.
\par 
\par }
2570
ID_221
TInstantBDEConnector
TInstantBDEConnector



Imported
main

TInstantBDEConnector;TInstantBDEConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBDEConnector \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=2580\}\tab\strike Members\strike0\{linkID=2650>nav\}\tab\strike Properties\strike0\{linkID=2600>nav\}\tab\strike Unit: InstantBDE\strike0\{linkID=12580>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\strike\f1 TInstantConnectorClass\strike0\{linkID=12060>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \strike TInstantConnector\strike0\{linkID=3780>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
2580
ID_222





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3780>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9810>main\}
\par \tab |
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3410>main\}
\par \tab |
\par \strike TInstantBDEConnector\strike0\{linkID=2570>main\}
\par 
\par }
2590
ID_226





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBDEConnector Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantBDEConnector\strike0\{linkID=2570>main\}
\par 
\par }
2600
ID_224





Imported



FALSE
29
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBDEConnector Properties \cf1\b0\fs16 
\par \strike TInstantBDEConnector\strike0\{linkID=2570>main\}\tab\ul Legend\ulnone\{link=ID_229\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantBDEConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=2670>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DriverType\strike0\{linkID=2680>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Connection\strike0\{linkID=3510>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=9910>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3880>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3900>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3940>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3970>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3990>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4090>main\}
\par 
\par }
2610
ID_229





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2620
ID_230





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBDEConnector Events \cf1\b0\fs16 
\par \strike TInstantBDEConnector\strike0\{linkID=2570>main\}\tab\ul Legend\ulnone\{link=ID_231\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=9920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=9940>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4300>main\}
\par 
\par }
2630
ID_231





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
2640
ID_232





Imported



FALSE
21
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantBDEConnector Methods \cf1\b0\fs16 
\par \strike TInstantBDEConnector\strike0\{link=ID_221>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=3520>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4170>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4280>main\}
\par 
\par }
2650
ID_223





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBDEConnector Members \cf1\b0\fs16 
\par \strike TInstantBDEConnector\strike0\{linkID=2570>main\}\tab\ul Legend\ulnone\{link=ID_233\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=2670>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DriverType\strike0\{linkID=2680>main\}
\par 
\par }
2660
ID_233





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2670
ID_227
TInstantBDEConnector.Connection
Connection;Connection,TInstantBDEConnector;TInstantBDEConnector,Connection



Imported
main

Connection;Connection_Property;TInstantBDEConnector_Connection
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBDEConnector.Connection \cf1\b0\fs16 
\par \strike TInstantBDEConnector\strike0\{link=ID_221>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the connection used by the connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Connection: TDatabase;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Connection property to specify the connection used by the connector component.
\par 
\par }
2680
ID_228
TInstantBDEConnector.DriverType
DriverType;DriverType,TInstantBDEConnector;TInstantBDEConnector,DriverType



Imported
main

DriverType;DriverType_Property;TInstantBDEConnector_DriverType
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBDEConnector.DriverType \cf1\b0\fs16 
\par \strike TInstantBDEConnector\strike0\{link=ID_221>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the BDE driver type
\par \pard\sb25\sa25\b\f1 property\b0  DriverType: \strike TInstantBDEDriverType\strike0\{linkID=11990>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 DriverType specifies the type of the BDE driver.
\par 
\par }
2690
ID_179
TInstantBlob
TInstantBlob



Imported
main

TInstantBlob;TInstantBlob_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\tx5755\ul Hierarchy\ulnone\{linkID=2710\}\tab\strike Members\strike0\{linkID=2780>nav\}\tab\strike Properties\strike0\{linkID=2730>nav\}\tab\strike Methods\strike0\{linkID=2760>nav\}\tab\ul See Also\ulnone\{linkID=2700\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 TInstantBlob represents a binary large object (BLOB).
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\f1 TInstantBlob = \b class\b0 (\strike TInstantSimple\strike0\{linkID=10280>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantBlob holds a binary large object (BLOB) as its value. A BLOB is raw binary data of arbitrary length that can represent different large data types such as an image or sound.
\par 
\par }
2700
ID_239





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantMemo\strike0\{linkID=7040>main\}
\par }
2710
ID_235





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10280>main\}
\par \tab |
\par \strike TInstantBlob\strike0\{linkID=2690>main\}
\par 
\par }
2720
ID_241





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBlob Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantBlob\strike0\{linkID=2690>main\}
\par 
\par }
2730
ID_237





Imported



FALSE
28
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBlob Properties \cf1\b0\fs16 
\par \strike TInstantBlob\strike0\{linkID=2690>main\}\tab\ul Legend\ulnone\{link=ID_244\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantBlob
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Size\strike0\{linkID=2800>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=2810>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
2740
ID_244





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2750
ID_245





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantBlob Events\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike TInstantBlob\strike0\{linkID=2690>main\}
\par 
\par }
2760
ID_238





Imported



FALSE
25
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBlob Methods \cf1\b0\fs16 
\par \strike TInstantBlob\strike0\{linkID=2690>main\}\tab\ul Legend\ulnone\{link=ID_251\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantBlob
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=2820>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadDataFromStream\strike0\{linkID=2830>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadBuffer\strike0\{linkID=2840>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveDataToStream\strike0\{linkID=2850>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteBuffer\strike0\{linkID=2860>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
2770
ID_251





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
2780
ID_236





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBlob Members \cf1\b0\fs16 
\par \strike TInstantBlob\strike0\{linkID=2690>main\}\tab\ul Legend\ulnone\{link=ID_252\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Size\strike0\{linkID=2800>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=2810>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=2820>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadDataFromStream\strike0\{linkID=2830>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadBuffer\strike0\{linkID=2840>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveDataToStream\strike0\{linkID=2850>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteBuffer\strike0\{linkID=2860>main\}
\par 
\par }
2790
ID_252





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2800
ID_242
TInstantBlob.Size
Size;Size,TInstantBlob;TInstantBlob,Size



Imported
main

Size;Size_Property;TInstantBlob_Size
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.Size \cf1\b0\fs16 
\par \strike TInstantBlob\strike0\{link=ID_179>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the size of the Blob Attribute.
\par \pard\sb25\sa25\b\f1 property\b0  Size: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Size to determine the size in bytes of the Blob attribute.
\par 
\par }
2810
ID_243
TInstantBlob.Value
TInstantBlob,Value;Value;Value,TInstantBlob



Imported
main

TInstantBlob_Value;Value;Value_Property
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.Value \cf1\b0\fs16 
\par \strike TInstantBlob\strike0\{link=ID_179>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the BLOB attribute as a string.
\par \pard\sb25\sa25\b\f1 property\b0  Value: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the attribute directly as a string.
\par \pard\fi-195\li195\sb25\sa25\b Note: \b0  The string data type may contain binary data as well as text. Therefore nontextual as well as textual data can be set using a string.
\par 
\par }
2820
ID_246
TInstantBlob.Clear
Clear;Clear,TInstantBlob;TInstantBlob,Clear



Imported
main

Clear;Clear_Method;TInstantBlob_Clear
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.Clear \cf1\b0\fs16 
\par \strike TInstantBlob\strike0\{link=ID_179>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Discards all data associated with the blob attribute
\par \pard\sb25\sa25\b\f1 procedure\b0  Clear;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 CallUse Clear to empty the memory buffer for the blob attribute.
\par 
\par }
2830
ID_247
TInstantBlob.LoadDataFromStream
LoadDataFromStream;LoadDataFromStream,TInstantBlob;TInstantBlob,LoadDataFromStream



Imported
main

LoadDataFromStream;LoadDataFromStream_Method;TInstantBlob_LoadDataFromStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.LoadDataFromStream \cf1\b0\fs16 
\par \strike TInstantBlob\strike0\{link=ID_179>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Loads data from a TStream object into the attribute.
\par \pard\sb25\sa25\b\f1 procedure\b0  LoadDataFromStream(AStream: TStream);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use LoadDataFromStream to copy the content of a stream into the attribute. The Stream argument specifies the stream from which the value of the attribute is copied.
\par 
\par }
2840
ID_248
TInstantBlob.ReadBuffer
ReadBuffer;ReadBuffer,TInstantBlob;TInstantBlob,ReadBuffer



Imported
main

ReadBuffer;ReadBuffer_Method;TInstantBlob_ReadBuffer
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.ReadBuffer \cf1\b0\fs16 
\par \strike TInstantBlob\strike0\{link=ID_179>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Reads from the blob attribute into a buffer
\par \pard\sb25\sa25\b\f1 function\b0  ReadBuffer(\b var\b0  Buffer; Position: Integer; Count: Integer): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call ReadBuffer to read from the Blob attribute into the buffer specified by the Buffer argument. The method reads a number of bytes specified by the Count argument starting at the position specified by the Position argument.
\par 
\par }
2850
ID_249
TInstantBlob.SaveDataToStream
SaveDataToStream;SaveDataToStream,TInstantBlob;TInstantBlob,SaveDataToStream



Imported
main

SaveDataToStream;SaveDataToStream_Method;TInstantBlob_SaveDataToStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.SaveDataToStream \cf1\b0\fs16 
\par \strike TInstantBlob\strike0\{link=ID_179>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Saves the value of the attribute to a TStream object.
\par \pard\sb25\sa25\b\f1 procedure\b0  SaveDataToStream(AStream: TStream);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use SaveDataToStream to copy the value of the attribute to a stream. The Stream argument specifies the stream to which the value of the attribute is copied.
\par 
\par }
2860
ID_250
TInstantBlob.WriteBuffer
TInstantBlob,WriteBuffer;WriteBuffer;WriteBuffer,TInstantBlob



Imported
main

TInstantBlob_WriteBuffer;WriteBuffer;WriteBuffer_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.WriteBuffer \cf1\b0\fs16 
\par \strike TInstantBlob\strike0\{link=ID_179>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Reads from the blob attribute into a buffer
\par \pard\sb25\sa25\b\f1 function\b0  WriteBuffer(\b const\b0  Buffer; Position: Integer; Count: Integer): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call WriteBuffer to write from the buffer specified by the Buffer argument into the Blob attribute. The method writes a number of bytes specified by the Count argument starting at the position specified by the Position argument. The allocated memory is automatically grown when writing beyond the current size of the blob attribute.
\par 
\par }
2870
ID_175
TInstantBoolean
TInstantBoolean



Imported
main

TInstantBoolean;TInstantBoolean_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBoolean \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=2880\}\tab\strike Members\strike0\{linkID=2950>nav\}\tab\strike Properties\strike0\{linkID=2900>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantBoolean represents a Boolean value.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantBoolean = \b class\b0 (\strike TInstantSimple\strike0\{linkID=10280>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantBoolean holds a Boolean as its value. A Boolean can represent the values of True or False.
\par 
\par }
2880
ID_253





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10280>main\}
\par \tab |
\par \strike TInstantBoolean\strike0\{linkID=2870>main\}
\par 
\par }
2890
ID_256





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBoolean Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantBoolean\strike0\{linkID=2870>main\}
\par 
\par }
2900
ID_255





Imported



FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBoolean Properties \cf1\b0\fs16 
\par \strike TInstantBoolean\strike0\{linkID=2870>main\}\tab\ul Legend\ulnone\{link=ID_258\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantBoolean
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=2970>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
2910
ID_258





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2920
ID_259





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantBoolean Events \b0\{keepn\}\cf1\fs16 
\par \strike TInstantBoolean\strike0\{linkID=2870>main\}
\par 
\par }
2930
ID_260





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBoolean Methods \cf1\b0\fs16 
\par \strike TInstantBoolean\strike0\{linkID=2870>main\}\tab\ul Legend\ulnone\{link=ID_261\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
2940
ID_261





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
2950
ID_254





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBoolean Members \cf1\b0\fs16 
\par \strike TInstantBoolean\strike0\{linkID=2870>main\}\tab\ul Legend\ulnone\{link=ID_262\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=2970>main\}
\par 
\par }
2960
ID_262





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2970
ID_257
TInstantBoolean.Value
TInstantBoolean,Value;Value;Value,TInstantBoolean



Imported
main

TInstantBoolean_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBoolean.Value \cf1\b0\fs16 
\par \strike TInstantBoolean\strike0\{link=ID_175>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the Boolean attribute
\par \pard\sb25\sa25\b\f1 property\b0  Value: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the Boolean attribute.
\par 
\par }
2980
ID_263
TInstantCollection
TInstantCollection



Imported
main

TInstantCollection;TInstantCollection_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollection \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=2990\}\tab\strike Members\strike0\{linkID=3040>nav\}\tab\strike Methods\strike0\{linkID=3030>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantCollection is a container for \strike TInstantCollectionItem\strike0\{linkID=3100>main\} objects.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantCollection = \b class\b0 (TCollection)
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantCollection holds a group of \strike TInstantCollectionItem\strike0\{linkID=3100>main\} objects.
\par 
\par }
2990
ID_264





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TCollection
\par \pard\li95\tx355\tab |
\par \strike TInstantCollection\strike0\{linkID=2980>main\}
\par 
\par }
3000
ID_268





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCollection Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantCollection\strike0\{linkID=2980>main\}
\par 
\par }
3010
ID_269





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantCollection Properties \b0\{keepn\}\cf1\fs16 
\par \strike TInstantCollection\strike0\{linkID=2980>main\}
\par 
\par }
3020
ID_270





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantCollection Events \b0\{keepn\}\cf1\fs16 
\par \strike TInstantCollection\strike0\{linkID=2980>main\}
\par 
\par }
3030
ID_266





Imported



FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantCollection Methods \cf1\b0\fs16 
\par \strike TInstantCollection\strike0\{link=ID_263>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantCollection
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Find\strike0\{linkID=3050>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetItemNames\strike0\{linkID=3060>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function IndexOf(const AName: string): Integer; overload;\strike0\{linkID=3070>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function IndexOf(Item: TInstantCollectionItem): Integer; overload;\strike0\{linkID=3080>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=3090>main\}
\par 
\par }
3040
ID_265





Imported



FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantCollection Members \cf1\b0\fs16 
\par \strike TInstantCollection\strike0\{link=ID_263>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Find\strike0\{linkID=3050>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetItemNames\strike0\{linkID=3060>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function IndexOf(const AName: string): Integer; overload;\strike0\{linkID=3070>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function IndexOf(Item: TInstantCollectionItem): Integer; overload;\strike0\{linkID=3080>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=3090>main\}
\par 
\par }
3050
ID_271
TInstantCollection.Find
Find;Find,TInstantCollection;TInstantCollection,Find



Imported
main

Find;Find_Method;TInstantCollection_Find
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollection.Find \cf1\b0\fs16 
\par \strike TInstantCollection\strike0\{link=ID_263>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Locates an item by its name.
\par \pard\sb25\sa25\b\f1 function\b0  Find(\b const\b0  AName: \b string\b0 ): \strike TInstantCollectionItem\strike0\{linkID=3100>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Find to locate an item which name matches the AName argument. If an item matching the name is not found in the collection, Find returns nil.
\par 
\par }
3060
ID_272
TInstantCollection.GetItemNames
GetItemNames;GetItemNames,TInstantCollection;TInstantCollection,GetItemNames



Imported
main

GetItemNames;GetItemNames_Method;TInstantCollection_GetItemNames
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollection.GetItemNames \cf1\b0\fs16 
\par \strike TInstantCollection\strike0\{link=ID_263>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Fills a TStrings object with the names of all items.
\par \pard\sb25\sa25\b\f1 procedure\b0  GetItemNames(List: TStrings);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call GetItemNames to get the names of all items in the collection. Before filling in the names, the TStrings object is cleared.
\par 
\par }
3070
ID_273
TInstantCollection.IndexOf
IndexOf;IndexOf,TInstantCollection;TInstantCollection,IndexOf



Imported
main

IndexOf;IndexOf_Method;TInstantCollection_IndexOf
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollection.IndexOf \cf1\b0\fs16 
\par \strike TInstantCollection\strike0\{link=ID_263>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns the index of an item with the specified name.
\par \pard\sb25\sa25\b\f1 function\b0  IndexOf(\b const\b0  AName: \b string\b0 ): Integer; \b overload\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call IndexOf to get the index of an item which name matches the specified AName argument.
\par 
\par }
3080
ID_274
TInstantCollection.IndexOf
IndexOf;IndexOf,TInstantCollection;TInstantCollection,IndexOf



Imported
main

IndexOf;IndexOf_Method;TInstantCollection_IndexOf
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollection.IndexOf \cf1\b0\fs16 
\par \strike TInstantCollection\strike0\{link=ID_263>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns the index of an item
\par \pard\sb25\sa25\b\f1 function\b0  \strike IndexOf\strike0\{linkID=3070>main\}(Item: \strike TInstantCollectionItem\strike0\{linkID=3100>main\}): Integer; \b overload\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call \strike IndexOf\strike0\{linkID=3070>main\} to get the index of an item in the collection.
\par 
\par }
3090
ID_275
TInstantCollection.Remove
Remove;Remove,TInstantCollection;TInstantCollection,Remove



Imported
main

Remove;Remove_Method;TInstantCollection_Remove
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollection.Remove \cf1\b0\fs16 
\par \strike TInstantCollection\strike0\{link=ID_263>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Remove an item from the collection.
\par \pard\sb25\sa25\b\f1 function\b0  Remove(Item: \strike TInstantCollectionItem\strike0\{linkID=3100>main\}): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Remove to remove an item from the collection. Remove returns the index of the item before it was removed. If the item is not found in the collection, Remove returns -1.
\par 
\par }
3100
ID_267
TInstantCollectionItem
TInstantCollectionItem



Imported
main

TInstantCollectionItem;TInstantCollectionItem_Object
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollectionItem \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=3110\}\tab\strike Members\strike0\{linkID=3170>nav\}\tab\strike Properties\strike0\{linkID=3130>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantCollectionItem is the ancestor for collection item classes.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantCollectionItem = \b class\b0 (TCollectionItem)
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 A \strike TInstantCollection\strike0\{linkID=2980>main\} holds a group of TInstantCollectionItem objects. TInstantCollectionItem objects are created and destroyed using the methods of \strike TInstantCollection\strike0\{linkID=2980>main\}.
\par TInstantCollectionItem objects are named through their \strike Name\strike0\{linkID=3190>main\} property.
\par 
\par }
3110
ID_276





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TCollectionItem
\par \pard\li95\tx355\tab |
\par \strike TInstantCollectionItem\strike0\{linkID=3100>main\}
\par 
\par }
3120
ID_280





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCollectionItem Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantCollectionItem\strike0\{linkID=3100>main\}
\par 
\par }
3130
ID_278





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCollectionItem Properties \cf1\b0\fs16 
\par \strike TInstantCollectionItem\strike0\{linkID=3100>main\}\tab\ul Legend\ulnone\{link=ID_281\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCollectionItem
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Name\strike0\{linkID=3190>main\}
\par 
\par }
3140
ID_281





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
3150
ID_282





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantCollectionItem Events\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike TInstantCollectionItem\strike0\{linkID=3100>main\}
\par 
\par }
3160
ID_283





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantCollectionItem Methods\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike TInstantCollectionItem\strike0\{linkID=3100>main\}
\par 
\par }
3170
ID_277





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCollectionItem Members \cf1\b0\fs16 
\par \strike TInstantCollectionItem\strike0\{linkID=3100>main\}\tab\ul Legend\ulnone\{link=ID_284\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Name\strike0\{linkID=3190>main\}
\par 
\par }
3180
ID_284





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
3190
ID_279
TInstantCollectionItem.Name
Name;Name,TInstantCollectionItem;TInstantCollectionItem,Name



Imported
main

Name;Name_Property;TInstantCollectionItem_Name
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollectionItem.Name \cf1\b0\fs16 
\par \strike TInstantCollectionItem\strike0\{link=ID_267>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies then name of the item.
\par \pard\sb25\sa25\b\f1 property\b0  \b Name\b0 : \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Name to specify the name of the \strike TInstantCollectionItem\strike0\{linkID=3100>main\} object. \strike TInstantCollectionItem\strike0\{linkID=3100>main\} has a field that holds the name.
\par 
\par }
3200
ID_285
TInstantComplex
TInstantComplex



Imported
main

TInstantComplex;TInstantComplex_Object
FALSE
18
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\tx5755\ul Hierarchy\ulnone\{linkID=3220\}\tab\strike Members\strike0\{linkID=3290>nav\}\tab\strike Properties\strike0\{linkID=3240>nav\}\tab\strike Methods\strike0\{linkID=3270>nav\}\tab\ul See Also\ulnone\{linkID=3210\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 The ancestor of all the attribute classes that represent objects.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\f1 TInstantComplex = \b class\b0 (\strike TInstantAttribute\strike0\{linkID=2180>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantComplex is the ancestor of all the attribute classes that represents objects. TInstantComplex introduces common properties and methods to:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Validate objects.
\par \{bmct bm3.BMP\}\tab Specificy a connector for a database connection
\par \trowd\trleft-1\trqc\cellx1439\pard\intbl TInstantComplex is abstract; so do not create instances of this class. Instead refer to the following concrete descendant classes: \b Complex attribute classes\cell\row
\trowd\trleft-1\trqc\cellx1439\pard\intbl\b0\strike TInstantPart\strike0\{linkID=9100>main\}\cell\row
\strike\trowd\trleft-1\trqc\cellx1439\intbl TInstantReference\strike0\{linkID=9370>main\}\cell\row
\strike\trowd\trleft-1\trqc\cellx1439\intbl TInstantParts\strike0\{linkID=9240>main\}\cell\row
\strike\trowd\trleft-1\trqc\cellx1439\intbl TInstantReferences\strike0\{linkID=9630>main\}\cell\row
\pard 
\par 
\par }
3210
ID_290





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantSimple\strike0\{linkID=10280>main\}
\par }
3220
ID_286





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3200>main\}
\par 
\par }
3230
ID_291





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantComplex Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantComplex\strike0\{linkID=3200>main\}
\par 
\par }
3240
ID_288





Imported



FALSE
30
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantComplex Properties \cf1\b0\fs16 
\par \strike TInstantComplex\strike0\{linkID=3200>main\}\tab\ul Legend\ulnone\{link=ID_296\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3330>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3350>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
3250
ID_296





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
3260
ID_297





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantComplex Events\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike TInstantComplex\strike0\{linkID=3200>main\}
\par 
\par }
3270
ID_289





Imported



FALSE
23
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantComplex Methods \cf1\b0\fs16 
\par \strike TInstantComplex\strike0\{linkID=3200>main\}\tab\ul Legend\ulnone\{link=ID_301\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3370>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3380>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3390>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
3280
ID_301





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
3290
ID_287





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantComplex Members \cf1\b0\fs16 
\par \strike TInstantComplex\strike0\{linkID=3200>main\}\tab\ul Legend\ulnone\{link=ID_302\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3330>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3350>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3370>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3380>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3390>main\}
\par 
\par }
3300
ID_302





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
3310
ID_292
TInstantComplex.AllowOwned
AllowOwned;AllowOwned,TInstantComplex;TInstantComplex,AllowOwned



Imported
main

AllowOwned;AllowOwned_Property;TInstantComplex_AllowOwned
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.AllowOwned \cf1\b0\fs16 
\par \strike TInstantComplex\strike0\{link=ID_285>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies whether the attribute should allow owned objects.
\par \pard\sb25\sa25\b\f1 property\b0  AllowOwned: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use AllowOwned to specify if the attribute should allow owned objects. When adding an object that is owned, dependence is created to an object that is internally managed by another instance. The default value of AllowOwned is False.
\par 
\par }
3320
ID_293
TInstantComplex.Connector
Connector;Connector,TInstantComplex;TInstantComplex,Connector



Imported
main

Connector;Connector_Property;TInstantComplex_Connector
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.Connector \cf1\b0\fs16 
\par \strike TInstantComplex\strike0\{link=ID_285>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the connector used by the attribute.
\par \pard\sb25\sa25\b\f1 property\b0  Connector: \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The Connector property determines the connector that the attribute uses to retrieve, store and dispose objects. If the attribute is owned, the connector of the owning object is used. If no connector is specified, the default connector is used. If also no default connector exists, accessing the Connector property will raise an exception.
\par 
\par }
3330
ID_294
TInstantComplex.RequiredClass
RequiredClass;RequiredClass,TInstantComplex;TInstantComplex,RequiredClass



Imported
main

RequiredClass;RequiredClass_Property;TInstantComplex_RequiredClass
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.RequiredClass \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantComplex\strike0\{linkID=3200>main\}\tab\ul See Also\ulnone\{linkID=3340\}
\par \pard\sb25\sa85\tx1435\fs18 Determines the minimum required class of objects that the attribute holds.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  RequiredClass: TInstantObjectClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use RequiredClass to determine the minimum required class of objects that the attribute holds. If the attribute has metadata, the object class specified by the metadata object is used. Otherwise the required class is \strike TInstantObject\strike0\{linkID=7240>main\}.
\par 
\par }
3340
ID_303





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantComplex.RequiredClassName\strike0\{linkID=3350>main\}
\par }
3350
ID_295
TInstantComplex.RequiredClassName
RequiredClassName;RequiredClassName,TInstantComplex;TInstantComplex,RequiredClassName



Imported
main

RequiredClassName;RequiredClassName_Property;TInstantComplex_RequiredClassName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.RequiredClassName \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantComplex\strike0\{linkID=3200>main\}\tab\ul See Also\ulnone\{linkID=3360\}
\par \pard\sb25\sa85\tx1435\fs18 Determines the name of the minimum required class of objects that the attribute holds.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  RequiredClassName: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use RequiredClassName to determine the name of the minimum required class of objects that the attribute holds. If the attribute has metadata, the object class specified by the metadata object is used. Otherwise the required class is \strike TInstantObject\strike0\{linkID=7240>main\}.
\par 
\par }
3360
ID_304





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantComplex.RequiredClass\strike0\{linkID=3330>main\}
\par }
3370
ID_298
TInstantComplex.AttachObject
AttachObject;AttachObject,TInstantComplex;TInstantComplex,AttachObject



Imported
main

AttachObject;AttachObject_Method;TInstantComplex_AttachObject
FALSE
18
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.AttachObject \cf1\b0\fs16 
\par \strike TInstantComplex\strike0\{link=ID_285>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Attaches an object to the attribute.
\par \pard\sb25\sa25\b\f1 function\b0  AttachObject(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}): Boolean; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Attaches the object specified by the AObject argument to the attribute.
\par For the descendant classes of \strike TInstantComplex\strike0\{linkID=3200>main\}  this implies: 
\par 
\par \pard\sb25\sa25\tx3120\ul\b Class\tab Action\f2                                                                   \ulnone\b0\f0 
\par \strike TInstantElement\strike0\{linkID=5900>main\}\tab AObject is assigned as the attributes Value
\par \strike TInstantContainer\strike0\{linkID=4310>main\}\tab AObject is added to the objects array
\par \pard 
\par \pard\sb25\sa25 If the object is succesfully attached, the function returns True. Otherwise the function returns False.
\par 
\par \pard 
\par }
3380
ID_299
TInstantComplex.DetachObject
DetachObject;DetachObject,TInstantComplex;TInstantComplex,DetachObject



Imported
main

DetachObject;DetachObject_Method;TInstantComplex_DetachObject
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.DetachObject \cf1\b0\fs16 
\par \strike TInstantComplex\strike0\{link=ID_285>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Detaches an object from the attribute.
\par \pard\sb25\sa25\b\f1 function\b0  DetachObject(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}): Boolean; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Detaches the object specified by the AObject argument from the attribute.
\par For the descendant classes of \strike TInstantComplex\strike0\{linkID=3200>main\}  this implies: 
\par 
\par \pard\sb25\sa25\tx3680\ul\b Class\tab Action\f2                                                                                      \ulnone\b0\f0 
\par \strike TInstantElement\strike0\{linkID=5900>main\}\tab if the attribute Value equals AObject, the Value is set to nil.
\par \strike TInstantContainer\strike0\{linkID=4310>main\}\tab AObject is removed from the attributes array of objects.
\par \pard 
\par If the object is succesfully detached, the function returns True. Otherwise the function returns False.
\par 
\par }
3390
ID_300
TInstantComplex.ValidateObject
TInstantComplex,ValidateObject;ValidateObject;ValidateObject,TInstantComplex



Imported
main

TInstantComplex_ValidateObject;ValidateObject;ValidateObject_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.ValidateObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantComplex\strike0\{linkID=3200>main\}\tab\ul See Also\ulnone\{linkID=3400\}
\par \pard\sb25\sa85\tx1435\fs18 Validates an object that is added to the attribute.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  ValidateObject(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ValidateObject validates an object before it is added to the attribute. If the validation fails, an exception is raised. \strike TInstantComplex\strike0\{linkID=3200>main\} performs a validation of the class type of the object passed as the AObject argument. Descendant classes may override ValidateObject to introduce other validation rules.
\par 
\par }
3400
ID_307





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantComplex.RequiredClass\strike0\{linkID=3330>main\}
\par }
3410
ID_106
TInstantConnectionBasedConnector
TInstantConnectionBasedConnector



Imported
main

TInstantConnectionBasedConnector;TInstantConnectionBasedConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionBasedConnector \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=3420\}\tab\strike Members\strike0\{linkID=3490>nav\}\tab\strike Properties\strike0\{linkID=3440>nav\}\tab\strike Methods\strike0\{linkID=3480>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\strike\f1 TInstantConnectorClass\strike0\{linkID=12060>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \strike TInstantConnector\strike0\{linkID=3780>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
3420
ID_308





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3780>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9810>main\}
\par \tab |
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3410>main\}
\par 
\par }
3430
ID_312





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionBasedConnector Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantConnectionBasedConnector\strike0\{linkID=3410>main\}
\par 
\par }
3440
ID_310





Imported



FALSE
26
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionBasedConnector Properties \cf1\b0\fs16 
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3410>main\}\tab\ul Legend\ulnone\{link=ID_313\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Connection\strike0\{linkID=3510>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=9910>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3880>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3900>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3940>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3970>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3990>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4090>main\}
\par 
\par }
3450
ID_313





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
3460
ID_314





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionBasedConnector Events \cf1\b0\fs16 
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3410>main\}\tab\ul Legend\ulnone\{link=ID_315\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=9920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=9940>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4300>main\}
\par 
\par }
3470
ID_315





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
3480
ID_311





Imported



FALSE
21
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantConnectionBasedConnector Methods \cf1\b0\fs16 
\par \strike TInstantConnectionBasedConnector\strike0\{link=ID_106>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=3520>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4170>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4280>main\}
\par 
\par }
3490
ID_309





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionBasedConnector Members \cf1\b0\fs16 
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3410>main\}\tab\ul Legend\ulnone\{link=ID_316\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Connection\strike0\{linkID=3510>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=3520>main\}
\par 
\par }
3500
ID_316





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
3510
ID_111
TInstantConnectionBasedConnector.Connection
Connection;Connection,TInstantConnectionBasedConnector;TInstantConnectionBasedConnector,Connection



Imported
main

Connection;Connection_Property;TInstantConnectionBasedConnector_Connection
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionBasedConnector.Connection \cf1\b0\fs16 
\par \strike TInstantConnectionBasedConnector\strike0\{link=ID_106>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the connection used by the connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Connection: TCustomConnection;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Connection property to specify the connection used by the connector component.
\par 
\par }
3520
ID_135
TInstantConnectionBasedConnector.HasConnection
HasConnection;HasConnection,TInstantConnectionBasedConnector;TInstantConnectionBasedConnector,HasConnection



Imported
main

HasConnection;HasConnection_Method;TInstantConnectionBasedConnector_HasConnection
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionBasedConnector.HasConnection \cf1\b0\fs16 
\par \strike TInstantConnectionBasedConnector\strike0\{link=ID_106>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if a connection is associated with the connector.
\par \pard\sb25\sa25\b\f1 function\b0  HasConnection: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasConnection to determine if the \strike Connection\strike0\{linkID=3510>main\} property of the connector is assigned. If a connection component has been associated with the connector, HasConnection returns True. Otherwise HasConnection returns False.
\par 
\par }
3530
ID_317
TInstantConnectionManager
TInstantConnectionManager



Imported
main

TInstantConnectionManager;TInstantConnectionManager_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=3540\}\tab\strike Members\strike0\{linkID=3610>nav\}\tab\strike Properties\strike0\{linkID=3560>nav\}\tab\strike Methods\strike0\{linkID=3590>nav\}\tab\strike Unit: InstantConnectionManager\strike0\{linkID=12650>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Allows the user to manage connections to various databases.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantConnectionManager = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 The Connection Manager shows a dialog in which connections to databases can be defined and managed by the user.
\par 
\par }
3540
ID_318





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnectionManager\strike0\{linkID=3530>main\}
\par 
\par }
3550
ID_323





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionManager Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantConnectionManager\strike0\{linkID=3530>main\}
\par 
\par }
3560
ID_320





Imported



FALSE
20
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionManager Properties \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{linkID=3530>main\}\tab\ul Legend\ulnone\{link=ID_337\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantConnectionManager
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Caption\strike0\{linkID=3630>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CurrentConnectionDef\strike0\{linkID=3640>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike FileName\strike0\{linkID=3650>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Form\strike0\{linkID=3660>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Model\strike0\{linkID=3670>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnBuild\strike0\{linkID=3680>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnConnect\strike0\{linkID=3690>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnDisconnect\strike0\{linkID=3700>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnEdit\strike0\{linkID=3710>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIsConnected\strike0\{linkID=3720>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnPrepare\strike0\{linkID=3730>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnSupportConnector\strike0\{linkID=3740>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike VisibleActions\strike0\{linkID=3750>main\}
\par 
\par }
3570
ID_337





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
3580
ID_338





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantConnectionManager Events \b0\{keepn\}\cf1\fs16 
\par \strike TInstantConnectionManager\strike0\{linkID=3530>main\}
\par 
\par }
3590
ID_321





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionManager Methods \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{linkID=3530>main\}\tab\ul Legend\ulnone\{link=ID_341\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantConnectionManager
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Execute\strike0\{linkID=3760>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike HasForm\strike0\{linkID=3770>main\}
\par 
\par }
3600
ID_341





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par 
\par }
3610
ID_319





Imported



FALSE
23
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionManager Members \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{linkID=3530>main\}\tab\ul Legend\ulnone\{link=ID_342\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Caption\strike0\{linkID=3630>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CurrentConnectionDef\strike0\{linkID=3640>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike FileName\strike0\{linkID=3650>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Form\strike0\{linkID=3660>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Model\strike0\{linkID=3670>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnBuild\strike0\{linkID=3680>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnConnect\strike0\{linkID=3690>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnDisconnect\strike0\{linkID=3700>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnEdit\strike0\{linkID=3710>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIsConnected\strike0\{linkID=3720>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnPrepare\strike0\{linkID=3730>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnSupportConnector\strike0\{linkID=3740>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike VisibleActions\strike0\{linkID=3750>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Execute\strike0\{linkID=3760>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike HasForm\strike0\{linkID=3770>main\}
\par 
\par }
3620
ID_342





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
3630
ID_324
TInstantConnectionManager.Caption
Caption;Caption,TInstantConnectionManager;TInstantConnectionManager,Caption



Imported
main

Caption;Caption_Property;TInstantConnectionManager_Caption
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.Caption \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the Caption of the ConnectionManager form.
\par \pard\sb25\sa25\b\f1 property\b0  Caption: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Caption property to specify the Caption of the form that the connection manager shows when it is executed.
\par 
\par }
3640
ID_325
TInstantConnectionManager.CurrentConnectionDef
CurrentConnectionDef;CurrentConnectionDef,TInstantConnectionManager;TInstantConnectionManager,CurrentConnectionDef



Imported
main

CurrentConnectionDef;CurrentConnectionDef_Property;TInstantConnectionManager_CurrentConnectionDef
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.CurrentConnectionDef \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the currently selected connection within the manager.
\par \pard\sb25\sa25\b\f1 property\b0  CurrentConnectionDef: TInstantConnectionDef;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 CurrentConnectionDef refers to the definition of the currently selected connection within the connection manager.
\par 
\par }
3650
ID_326
TInstantConnectionManager.FileName
FileName;FileName,TInstantConnectionManager;TInstantConnectionManager,FileName



Imported
main

FileName;FileName_Property;TInstantConnectionManager_FileName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.FileName \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The name of the file in which to save connection definitions.
\par \pard\sb25\sa25\b\f1 property\b0  FileName: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 FileName specifies the name of the file that connection definitions are loaded from and saved to.
\par 
\par }
3660
ID_327
TInstantConnectionManager.Form
Form;Form,TInstantConnectionManager;TInstantConnectionManager,Form



Imported
main

Form;Form_Property;TInstantConnectionManager_Form
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.Form \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Contains the actual form used by the connection manager.
\par \pard\sb25\sa25\b\f1 property\b0  Form: TInstantConnectionManagerForm;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the form property to access the form used by the connection manager to present connections to the user.
\par 
\par }
3670
ID_328
TInstantConnectionManager.Model
Model;Model,TInstantConnectionManager;TInstantConnectionManager,Model



Imported
main

Model;Model_Property;TInstantConnectionManager_Model
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.Model \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the model for building a database.
\par \pard\sb25\sa25\b\f1 property\b0  Model: TInstantModel;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Model property to specify the model that should be used when building a database through the connection manager form.
\par 
\par }
3680
ID_329
TInstantConnectionManager.OnBuild
OnBuild;OnBuild,TInstantConnectionManager;TInstantConnectionManager,OnBuild



Imported
main

OnBuild;OnBuild_Property;TInstantConnectionManager_OnBuild
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnBuild \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the user requests to build a database from the connection manager.
\par \pard\sb25\sa25\b\f1 property\b0  OnBuild: TInstantConnectionDefEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 By default, the build action of the connection manager will build the database according to the current model. Write an OnBuild event handler to perform special operations when building the database.
\par 
\par }
3690
ID_330
TInstantConnectionManager.OnConnect
OnConnect;OnConnect,TInstantConnectionManager;TInstantConnectionManager,OnConnect



Imported
main

OnConnect;OnConnect_Property;TInstantConnectionManager_OnConnect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnConnect \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the user requests to connect to a database from the connection manager.
\par \pard\sb25\sa25\b\f1 property\b0  OnConnect: TInstantConnectionDefEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnConnect event handler to establish a connection to the database identified by the selected connection definition. The application is responsible for the established connection.
\par 
\par }
3700
ID_331
TInstantConnectionManager.OnDisconnect
OnDisconnect;OnDisconnect,TInstantConnectionManager;TInstantConnectionManager,OnDisconnect



Imported
main

OnDisconnect;OnDisconnect_Property;TInstantConnectionManager_OnDisconnect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnDisconnect \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the user requests to disconnect an active connection from the connection manager.
\par \pard\sb25\sa25\b\f1 property\b0  OnDisconnect: TInstantConnectionDefEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnDisconnect event handler to close a connection to the database identified by the selected connection definition. The application is assumed to have established the connection via an \strike OnConnect\strike0\{linkID=3690>main\} event handler.
\par 
\par }
3710
ID_332
TInstantConnectionManager.OnEdit
OnEdit;OnEdit,TInstantConnectionManager;TInstantConnectionManager,OnEdit



Imported
main

OnEdit;OnEdit_Property;TInstantConnectionManager_OnEdit
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnEdit \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the user requests to edit a connection definition.
\par \pard\sb25\sa25\b\f1 property\b0  OnEdit: TInstantConnectionDefEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 By default, the connection manager will open an edit form that corresponds to the type of connection definition. Write an OnEdit event handler to edit a connection definition some other way.
\par 
\par }
3720
ID_333
TInstantConnectionManager.OnIsConnected
OnIsConnected;OnIsConnected,TInstantConnectionManager;TInstantConnectionManager,OnIsConnected



Imported
main

OnIsConnected;OnIsConnected_Property;TInstantConnectionManager_OnIsConnected
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnIsConnected \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the connection manager needs to know if a certain connection is open or not.
\par \pard\sb25\sa25\b\f1 property\b0  OnIsConnected: TInstantConnectionDefEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnIsConnected event handler to respond to the event. The application is assumed to have established the connection via the \strike OnConnect\strike0\{linkID=3690>main\} event. Set Result according to the open state of the connection.
\par 
\par }
3730
ID_334
TInstantConnectionManager.OnPrepare
OnPrepare;OnPrepare,TInstantConnectionManager;TInstantConnectionManager,OnPrepare



Imported
main

OnPrepare;OnPrepare_Property;TInstantConnectionManager_OnPrepare
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnPrepare \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs after a database has been built from the connection manager.
\par \pard\sb25\sa25\b\f1 property\b0  OnPrepare: TInstantConnectorEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnPrepare event handler to perform special initialization of the database after it has been built.
\par 
\par }
3740
ID_335
TInstantConnectionManager.OnSupportConnector
OnSupportConnector;OnSupportConnector,TInstantConnectionManager;TInstantConnectionManager,OnSupportConnector



Imported
main

OnSupportConnector;OnSupportConnector_Property;TInstantConnectionManager_OnSupportConnector
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnSupportConnector \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the connection manager needs to know if a certain connector class shall be supported.
\par \pard\sb25\sa25\b\f1 property\b0  OnSupportConnector: TInstantConnectorClassEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 By default all registered connector types are supported. Write an OnSupportConnector event handler to disable support for selected connector types.
\par 
\par }
3750
ID_336
TInstantConnectionManager.VisibleActions
TInstantConnectionManager,VisibleActions;VisibleActions;VisibleActions,TInstantConnectionManager



Imported
main

TInstantConnectionManager_VisibleActions;VisibleActions;VisibleActions_Property
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.VisibleActions \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines which actions are available in the connection manager.
\par \pard\sb25\sa25\b\f1 property\b0  VisibleActions: \strike TInstantConnectionManagerActionTypes\strike0\{linkID=12050>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use VisibleActions to select which actions that appear in the connection manager. Leave any of the action types out of the VisibleActions set to hide those actions and thereby prevent the user from performing certain operations.
\par 
\par }
3760
ID_339
TInstantConnectionManager.Execute
Execute;Execute,TInstantConnectionManager;TInstantConnectionManager,Execute



Imported
main

Execute;Execute_Method;TInstantConnectionManager_Execute
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.Execute \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Opens the connection manager.
\par \pard\sb25\sa25\b\f1 function\b0  Execute: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Opens the connection manager form allowing the user to manage connections to databases.
\par 
\par }
3770
ID_340
TInstantConnectionManager.HasForm
HasForm;HasForm,TInstantConnectionManager;TInstantConnectionManager,HasForm



Imported
main

HasForm;HasForm_Method;TInstantConnectionManager_HasForm
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.HasForm \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{link=ID_317>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if the connection manager has a form instance.
\par \pard\sb25\sa25\b\f1 function\b0  HasForm: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the HasForm property to determine if the connection manager has created a TConnectionManagerForm instance.
\par 
\par }
3780
ID_104
TInstantConnector
TInstantConnector



Imported
main

TInstantConnector;TInstantConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\tx5755\ul Hierarchy\ulnone\{linkID=3790\}\tab\strike Members\strike0\{linkID=3860>nav\}\tab\strike Properties\strike0\{linkID=3810>nav\}\tab\strike Methods\strike0\{linkID=3850>nav\}\tab\strike Events\strike0\{linkID=3830>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\strike\f1 TInstantConnectorClass\strike0\{linkID=12060>main\} = \b class\b0  \b of\b0  TInstantConnector;
\par TInstantConnector = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
3790
ID_344





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3780>main\}
\par 
\par }
3800
ID_349





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnector Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantConnector\strike0\{linkID=3780>main\}
\par 
\par }
3810
ID_346





Imported



FALSE
22
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnector Properties \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul Legend\ulnone\{link=ID_350\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3880>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3900>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3940>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3970>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3990>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4090>main\}
\par 
\par }
3820
ID_350





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
3830
ID_348





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnector Events \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul Legend\ulnone\{link=ID_351\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4300>main\}
\par 
\par }
3840
ID_351





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
3850
ID_347





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantConnector Methods \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4170>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4280>main\}
\par 
\par }
3860
ID_345





Imported



FALSE
37
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnector Members \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul Legend\ulnone\{link=ID_352\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3880>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3900>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3940>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3970>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3990>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4090>main\}
\par \pard\sb55\sa55\tx355\b Events
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4300>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4170>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4280>main\}
\par 
\par }
3870
ID_352





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
3880
ID_113
TInstantConnector.AfterConnect
AfterConnect;AfterConnect,TInstantConnector;TInstantConnector,AfterConnect



Imported
main

AfterConnect;AfterConnect_Property;TInstantConnector_AfterConnect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.AfterConnect \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=3890\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs after the connection is opened.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  AfterConnect: TNotifyEvent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an AfterConnect event handler to take actions after the connector component opens the connection to the database.
\par 
\par }
3890
ID_353





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.BeforeConnect\strike0\{linkID=3920>main\}
\par }
3900
ID_114
TInstantConnector.AfterDisconnect
AfterDisconnect;AfterDisconnect,TInstantConnector;TInstantConnector,AfterDisconnect



Imported
main

AfterDisconnect;AfterDisconnect_Property;TInstantConnector_AfterDisconnect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.AfterDisconnect \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=3910\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs after the connection is closed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  AfterDisconnect: TNotifyEvent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an AfterDisconnect event handler to take actions after the connector component closes the connection to the database.
\par 
\par }
3910
ID_354





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.BeforeDisconnect\strike0\{linkID=3940>main\}
\par }
3920
ID_115
TInstantConnector.BeforeConnect
BeforeConnect;BeforeConnect,TInstantConnector;TInstantConnector,BeforeConnect



Imported
main

BeforeConnect;BeforeConnect_Property;TInstantConnector_BeforeConnect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.BeforeConnect \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=3930\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs before the connection is opened.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  BeforeConnect: TNotifyEvent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write a BeforeConnect event handler to take actions before the connector component opens the connection to the database.
\par 
\par }
3930
ID_355





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.AfterConnect\strike0\{linkID=3880>main\}
\par }
3940
ID_116
TInstantConnector.BeforeDisconnect
BeforeDisconnect;BeforeDisconnect,TInstantConnector;TInstantConnector,BeforeDisconnect



Imported
main

BeforeDisconnect;BeforeDisconnect_Property;TInstantConnector_BeforeDisconnect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.BeforeDisconnect \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=3950\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs before the connection is closed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  BeforeDisconnect: TNotifyEvent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write a BeforeDisconnect event handler to take actions before the connector component closes the connection to the database.
\par 
\par }
3950
ID_356





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.AfterDisconnect\strike0\{linkID=3900>main\}
\par }
3960
ID_117
TInstantConnector.Broker
Broker;Broker,TInstantConnector;TInstantConnector,Broker



Imported
main

Broker;Broker_Property;TInstantConnector_Broker
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.Broker \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 States the associated broker object.
\par \pard\sb25\sa25\b\f1 property\b0  Broker: TInstantBroker;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 States the associated broker object. The broker is used by objectstores to manage objects persistently, and is database specific, like the connector object itself.
\par 
\par }
3970
ID_118
TInstantConnector.ClientCount
ClientCount;ClientCount,TInstantConnector;TInstantConnector,ClientCount



Imported
main

ClientCount;ClientCount_Property;TInstantConnector_ClientCount
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.ClientCount \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=3980\}
\par \pard\sb25\sa85\tx1435\fs18 Determines the number of registered clients for the connector component
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ClientCount: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use ClientCount to determine the number of clients that depend on the connector component.
\par 
\par }
3980
ID_357





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.Clients\strike0\{linkID=3990>main\}
\par }
3990
ID_119
TInstantConnector.Clients
Clients;Clients,TInstantConnector;TInstantConnector,Clients



Imported
main

Clients;Clients_Property;TInstantConnector_Clients
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.Clients \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=4000\}
\par \pard\sb25\sa85\tx1435\fs18 Array of the clients registered for the connector component.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Clients [\b Index\b0 : Integer]: TObject;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use the Clients array to access the clients that depend on the connector component.
\par 
\par }
4000
ID_358





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.ClientCount\strike0\{linkID=3970>main\}
\par \strike TInstantConnector.RegisterClient\strike0\{linkID=4220>main\}
\par \strike TInstantConnector.UnregisterClient\strike0\{linkID=4280>main\}
\par }
4010
ID_120
TInstantConnector.Connected
Connected;Connected,TInstantConnector;TInstantConnector,Connected



Imported
main

Connected;Connected_Property;TInstantConnector_Connected
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.Connected \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if a connection has been established to the database.
\par \pard\sb25\sa25\b\f1 property\b0  Connected: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Set Connected to True to open the connection. Set Connected to False to close the connection. When setting the Connected value it uses the \strike Connect\strike0\{linkID=4140>main\} and \strike Disconnect\strike0\{linkID=4170>main\} methods.
\par 
\par }
4020
ID_121
TInstantConnector.DatabaseName
DatabaseName;DatabaseName,TInstantConnector;TInstantConnector,DatabaseName



Imported
main

DatabaseName;DatabaseName_Property;TInstantConnector_DatabaseName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.DatabaseName \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the name of the database the connector component connects to.
\par \pard\sb25\sa25\b\f1 property\b0  DatabaseName: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use DatabaseName to determine the name of the database the connector component connects to.
\par 
\par }
4030
ID_122
TInstantConnector.InTransaction
InTransaction;InTransaction,TInstantConnector;TInstantConnector,InTransaction



Imported
main

InTransaction;InTransaction_Property;TInstantConnector_InTransaction
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.InTransaction \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if a transaction is in progress.
\par \pard\sb25\sa25\b\f1 property\b0  InTransaction: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InTransaction to determine if a transaction is currently active for the connector component. If the connector component is currently in a transaction, InTransaction is True. Otherwise InTransaction is False.
\par 
\par }
4040
ID_123
TInstantConnector.InUse
InUse;InUse,TInstantConnector;TInstantConnector,InUse



Imported
main

InUse;InUse_Property;TInstantConnector_InUse
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.InUse \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if the connector component is in use.
\par \pard\sb25\sa25\b\f1 property\b0  InUse: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InUse to determine if the connector component is in use by clients that depend on the connector component in its present configuration.
\par 
\par }
4050
ID_124
TInstantConnector.IsDefault
IsDefault;IsDefault,TInstantConnector;TInstantConnector,IsDefault



Imported
main

IsDefault;IsDefault_Property;TInstantConnector_IsDefault
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.IsDefault \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if the connector is the default connector of the application.
\par \pard\sb25\sa25\b\f1 property\b0  IsDefault: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use IsDefault to specify whether the connector is the default connector of the application.
\par 
\par }
4060
ID_125
TInstantConnector.ObjectCount
ObjectCount;ObjectCount,TInstantConnector;TInstantConnector,ObjectCount



Imported
main

ObjectCount;ObjectCount_Property;TInstantConnector_ObjectCount
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.ObjectCount \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the number of objects using the connector.
\par \pard\sb25\sa25\b\f1 property\b0  ObjectCount: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 ObjectCount determines the number of \strike TInstantObject\strike0\{linkID=7240>main\} objects that use the connector.
\par 
\par }
4070
ID_126
TInstantConnector.Objects
Objects;Objects,TInstantConnector;TInstantConnector,Objects



Imported
main

Objects;Objects_Property;TInstantConnector_Objects
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.Objects \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=4080\}
\par \pard\sb25\sa85\tx1435\fs18 Array representing the objects that use the Connector.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Objects [\b Index\b0 : Integer]: \strike TInstantObject\strike0\{linkID=7240>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use this zero-based array to programmatically access the objects that use the connector.
\par 
\par }
4080
ID_359





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.ObjectCount\strike0\{linkID=4060>main\}
\par }
4090
ID_127
TInstantConnector.UseTransactions
TInstantConnector,UseTransactions;UseTransactions;UseTransactions,TInstantConnector



Imported


TInstantConnector_UseTransactions;UseTransactions;UseTransactions_Property
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.UseTransactions \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if the connector uses transactions.
\par \pard\sb25\sa25\b\f1 property\b0  UseTransactions: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The UseTransactions property specifies if the connector should use transactions. If UseTransactions is True, transactions are used. If UseTransaction is False any call to \strike StartTransaction\strike0\{linkID=4260>main\}, \strike CommitTransaction\strike0\{linkID=4120>main\} and \strike RollbackTransaction\strike0\{linkID=4240>main\} is suppressed.
\par 
\par }
4100
ID_136
TInstantConnector.BuildDatabase
BuildDatabase;BuildDatabase,TInstantConnector;TInstantConnector,BuildDatabase



Imported
main

BuildDatabase;BuildDatabase_Method;TInstantConnector_BuildDatabase
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.BuildDatabase \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Builds the database.
\par \pard\sb25\sa25\b\f1 procedure\b0  \strike BuildDatabase\strike0\{linkID=4110>main\}(Model: TInstantModel); \b overload\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call \strike BuildDatabase\strike0\{linkID=4110>main\} to build a database for the application. The Model argument specifies the model for which a database should be created. If this argument is unassigned (the default), a database is created for all classes that constitute the business model of the application.
\par 
\par }
4110
ID_137
TInstantConnector.BuildDatabase
BuildDatabase;BuildDatabase,TInstantConnector;TInstantConnector,BuildDatabase



Imported
main

BuildDatabase;BuildDatabase_Method;TInstantConnector_BuildDatabase
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.BuildDatabase \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Builds a database for an array of classes.
\par \pard\sb25\sa25\b\f1 procedure\b0  BuildDatabase(AClasses: \b array\b0  \b of\b0  TInstantObjectClass); \b overload\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the BuildDatabase method to build a database for an array of classes. For relational databases, much attention should be given to the class hierarchy and mapping strategy when building databases for a selection of classes rather than the complete model.
\par 
\par }
4120
ID_138
TInstantConnector.CommitTransaction
CommitTransaction;CommitTransaction,TInstantConnector;TInstantConnector,CommitTransaction



Imported
main

CommitTransaction;CommitTransaction_Method;TInstantConnector_CommitTransaction
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.CommitTransaction \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=4130\}
\par \pard\sb25\sa85\tx1435\fs18 Commits the active transaction.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  CommitTransaction;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call CommitTransaction to commit changes made during the active transaction to the database and to end the transaction.
\par 
\par }
4130
ID_360





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.RollbackTransaction\strike0\{linkID=4240>main\}
\par \strike TInstantConnector.StartTransaction\strike0\{linkID=4260>main\}
\par }
4140
ID_139
TInstantConnector.Connect
Connect;Connect,TInstantConnector;TInstantConnector,Connect



Imported
main

Connect;Connect_Method;TInstantConnector_Connect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.Connect \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=4150\}
\par \pard\sb25\sa85\tx1435\fs18 Opens the connection to the database.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Connect;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Connect to establish a connection to the database. After the connection has been established the \strike Connected\strike0\{linkID=4010>main\} property is True. Connect generates a \strike BeforeConnect\strike0\{linkID=3920>main\} event before the trying to connect, and an \strike AfterConnect\strike0\{linkID=3880>main\} event after the connection is established.
\par 
\par }
4150
ID_361





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.Connected\strike0\{linkID=4010>main\}
\par \strike TInstantConnector.Disconnect\strike0\{linkID=4170>main\}
\par }
4160
ID_140
TInstantConnector.CreateQuery
CreateQuery;CreateQuery,TInstantConnector;TInstantConnector,CreateQuery



Imported
main

CreateQuery;CreateQuery_Method;TInstantConnector_CreateQuery
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.CreateQuery \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Creates and returns an instance of a Query object.
\par \pard\sb25\sa25\b\f1 function\b0  CreateQuery: TInstantQuery;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call CreateQuery to obtain an instance of a TInstantQuery descendant appropriate for the kind of database the connector is connected to.
\par 
\par }
4170
ID_141
TInstantConnector.Disconnect
Disconnect;Disconnect,TInstantConnector;TInstantConnector,Disconnect



Imported
main

Disconnect;Disconnect_Method;TInstantConnector_Disconnect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.Disconnect \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=4180\}
\par \pard\sb25\sa85\tx1435\fs18 Closes the connection.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Disconnect;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Close to disconnect from the database. Disconnect generates a \strike BeforeDisconnect\strike0\{linkID=3940>main\} event before the trying to close the connection, and an \strike AfterDisconnect\strike0\{linkID=3900>main\} event after the connection is closed. If the connection is in use, trying to disconnect raises an exception.
\par 
\par }
4180
ID_362





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.Connect\strike0\{linkID=4140>main\}
\par \strike TInstantConnector.InUse\strike0\{linkID=4040>main\}
\par }
4190
ID_142
TInstantConnector.EnsureObjectStore
EnsureObjectStore;EnsureObjectStore,TInstantConnector;TInstantConnector,EnsureObjectStore



Imported
main

EnsureObjectStore;EnsureObjectStore_Method;TInstantConnector_EnsureObjectStore
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.EnsureObjectStore \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns an object store for a specified class type.
\par \pard\sb25\sa25\b\f1 function\b0  EnsureObjectStore(AClass: TInstantObjectClass): TInstantObjectStore;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Returns an object store capable of managing objects of the class type specified as the AClass argument. Object stores are used internally by the persistence mechanism of InstantObjects, and it should not be necessary to use them directly.
\par 
\par }
4200
ID_143
TInstantConnector.GenerateId
GenerateId;GenerateId,TInstantConnector;TInstantConnector,GenerateId



Imported
main

GenerateId;GenerateId_Method;TInstantConnector_GenerateId
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.GenerateId \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=4210\}
\par \pard\sb25\sa85\tx1435\fs18 Generates an unique id.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  GenerateId: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call this method to generate an unique Id. The method returns a GUID by default, but the specialized object brokers may return a value specific for the database engine they support.
\par 
\par }
4210
ID_363





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.GenerateId\strike0\{linkID=8570>main\}
\par }
4220
ID_144
TInstantConnector.RegisterClient
RegisterClient;RegisterClient,TInstantConnector;TInstantConnector,RegisterClient



Imported
main

RegisterClient;RegisterClient_Method;TInstantConnector_RegisterClient
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.RegisterClient \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=4230\}
\par \pard\sb25\sa85\tx1435\fs18 Registers an object that uses the connector component.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  RegisterClient(Client: TObject);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use RegisterClient to associate an object with the connector component.
\par 
\par }
4230
ID_365





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.UnregisterClient\strike0\{linkID=4280>main\}
\par }
4240
ID_145
TInstantConnector.RollbackTransaction
RollbackTransaction;RollbackTransaction,TInstantConnector;TInstantConnector,RollbackTransaction



Imported
main

RollbackTransaction;RollbackTransaction_Method;TInstantConnector_RollbackTransaction
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.RollbackTransaction \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=4250\}
\par \pard\sb25\sa85\tx1435\fs18 Rolls back the active transaction.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  RollbackTransaction;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call RollbackTransaction to cancel any changes made during the active transaction and to end the transaction.
\par 
\par }
4250
ID_366





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.CommitTransaction\strike0\{linkID=4120>main\}
\par \strike TInstantConnector.StartTransaction\strike0\{linkID=4260>main\}
\par }
4260
ID_146
TInstantConnector.StartTransaction
StartTransaction;StartTransaction,TInstantConnector;TInstantConnector,StartTransaction



Imported
main

StartTransaction;StartTransaction_Method;TInstantConnector_StartTransaction
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.StartTransaction \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=4270\}
\par \pard\sb25\sa85\tx1435\fs18 Initiates a new transaction.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  StartTransaction;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call StartTransaction to start a new transaction in the database the connector component is connected to.
\par 
\par }
4270
ID_367





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.CommitTransaction\strike0\{linkID=4120>main\}
\par \strike TInstantConnector.RollbackTransaction\strike0\{linkID=4240>main\}
\par }
4280
ID_147
TInstantConnector.UnregisterClient
TInstantConnector,UnregisterClient;UnregisterClient;UnregisterClient,TInstantConnector



Imported
main

TInstantConnector_UnregisterClient;UnregisterClient;UnregisterClient_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.UnregisterClient \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3780>main\}\tab\ul See Also\ulnone\{linkID=4290\}
\par \pard\sb25\sa85\tx1435\fs18 Unregisters an object that uses the connector component.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  UnregisterClient(Client: TObject);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use UnregisterClient to remove an association between an object and the connector component.
\par 
\par }
4290
ID_368





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.RegisterClient\strike0\{linkID=4220>main\}
\par }
4300
ID_131
TInstantConnector.BeforeBuildDatabase
BeforeBuildDatabase;BeforeBuildDatabase,TInstantConnector;TInstantConnector,BeforeBuildDatabase



Imported
main

BeforeBuildDatabase;BeforeBuildDatabase_Event;TInstantConnector_BeforeBuildDatabase
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.BeforeBuildDatabase \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{link=ID_104>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs before the database is build.
\par \pard\sb25\sa25\b\f1 property\b0  BeforeBuildDatabase: \strike TInstantSchemeEvent\strike0\{linkID=12370>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write a BeforeBuildDatabase event handler to take specific action before a database is build. The event is particularly useful if modifications or additions should be made to the database scheme like adding indices.
\par 
\par }
4310
ID_306
TInstantContainer
TInstantContainer



Imported
main

TInstantContainer;TInstantContainer_Object
FALSE
18
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer \cf1\b0\fs16\{keepn\} 
\par \pard\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=4320\}\tab\strike Members\strike0\{linkID=4390>nav\}\tab\strike Properties\strike0\{linkID=4340>nav\}\tab\strike Methods\strike0\{linkID=4370>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 TInstantContainer is the ancestor of attribute classes that represent a relationship with multiple objects.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantContainer = \b class\b0 (\strike TInstantComplex\strike0\{linkID=3200>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantContainer is the ancestor of attribute classes that represent a relationship with multiple objects. TInstantContainer introduces common properties and methods to:
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-295\li495\sb25\sa25\tx480\strike Add\strike0\{linkID=4460>main\}, \strike Remove\strike0\{linkID=4630>main\} and find objects.
\par {\pntext\f3\'B7\tab}Load and Save the objects it represents from and to a stream.
\par \strike{\pntext\f3\'B7\tab}Sort\strike0\{linkID=4670>main\} objects
\par \pard\fi-295\li495\sb25\sa25\tx495 
\par \pard\li180\sb25\sa25\tx480 TInstantContainer is abstract; so do not create instances of this class. Instead refer to the following concrete\f2  \f0 descendant classes: 
\par \pard\li440\sb25\sa25\tx480\tx680\ul\b Container attribute classes\f2                             \f0 
\par \ulnone\b0\strike TInstantParts\strike0\{linkID=9240>main\}
\par \strike TInstantReferences\strike0\{linkID=9630>main\}
\par \pard 
\par }
4320
ID_370





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3200>main\}
\par \tab |
\par \strike TInstantContainer\strike0\{linkID=4310>main\}
\par 
\par }
4330
ID_377





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantContainer Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantContainer\strike0\{linkID=4310>main\}
\par 
\par }
4340
ID_372





Imported



FALSE
34
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantContainer Properties \cf1\b0\fs16 
\par \strike TInstantContainer\strike0\{linkID=4310>main\}\tab\ul Legend\ulnone\{link=ID_381\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantContainer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ChangeCount\strike0\{linkID=4410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Count\strike0\{linkID=4420>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Items\strike0\{linkID=4440>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3330>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3350>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
4350
ID_381





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
4360
ID_382





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantContainer Events \b0\{keepn\}\cf1\fs16 
\par \strike TInstantContainer\strike0\{linkID=4310>main\}
\par 
\par }
4370
ID_373





Imported



FALSE
38
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantContainer Methods \cf1\b0\fs16 
\par \strike TInstantContainer\strike0\{linkID=4310>main\}\tab\ul Legend\ulnone\{link=ID_394\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantContainer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Add\strike0\{linkID=4460>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=4480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=4490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Delete\strike0\{linkID=4500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=4520>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Exchange\strike0\{linkID=4530>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasItem\strike0\{linkID=4550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOf\strike0\{linkID=4560>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Insert\strike0\{linkID=4570>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadObjectsFromStream\strike0\{linkID=4590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Move\strike0\{linkID=4610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=4630>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveObjectsToStream\strike0\{linkID=4650>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Sort\strike0\{linkID=4670>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3370>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3380>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3390>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
4380
ID_394





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
4390
ID_371





Imported



FALSE
25
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantContainer Members \cf1\b0\fs16 
\par \strike TInstantContainer\strike0\{linkID=4310>main\}\tab\ul Legend\ulnone\{link=ID_395\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ChangeCount\strike0\{linkID=4410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Count\strike0\{linkID=4420>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Items\strike0\{linkID=4440>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Add\strike0\{linkID=4460>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=4480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=4490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Delete\strike0\{linkID=4500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=4520>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Exchange\strike0\{linkID=4530>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasItem\strike0\{linkID=4550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOf\strike0\{linkID=4560>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Insert\strike0\{linkID=4570>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadObjectsFromStream\strike0\{linkID=4590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Move\strike0\{linkID=4610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=4630>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveObjectsToStream\strike0\{linkID=4650>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Sort\strike0\{linkID=4670>main\}
\par 
\par }
4400
ID_395





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
4410
ID_378
TInstantContainer.ChangeCount
ChangeCount;ChangeCount,TInstantContainer;TInstantContainer,ChangeCount



Imported
main

ChangeCount;ChangeCount_Property;TInstantContainer_ChangeCount
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.ChangeCount \cf1\b0\fs16 
\par \strike TInstantContainer\strike0\{link=ID_306>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the number of changed objects in the container.
\par \pard\sb25\sa25\b\f1 property\b0  ChangeCount: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use ChangeCount to determine the number of changed objects in the container. ChangeCount checks the IsChanged property of the individual objects.
\par 
\par }
4420
ID_379
TInstantContainer.Count
Count;Count,TInstantContainer;TInstantContainer,Count



Imported
main

Count;Count_Property;TInstantContainer_Count
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Count \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4310>main\}\tab\ul See Also\ulnone\{linkID=4430\}
\par \pard\sb25\sa85\tx1435\fs18 Determines the number of objects the in the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Count: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use Count to determine the number of objects in the containers array of objects. Count is very useful in combination with the \strike Items\strike0\{linkID=4440>main\} property to iterate over the objects in the containers array of objects.
\par 
\par }
4430
ID_396





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Items\strike0\{linkID=4440>main\}
\par }
4440
ID_380
TInstantContainer.Items
Items;Items,TInstantContainer;TInstantContainer,Items



Imported
main

Items;Items_Property;TInstantContainer_Items
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Items \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4310>main\}\tab\ul See Also\ulnone\{linkID=4450\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies a reference to an object at a given position in the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Items [\b Index\b0 : Integer]: \strike TInstantObject\strike0\{linkID=7240>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use Objects to obtain a reference or change a reference to an object at a specified position in the containers array of objects. The Index argument indicates the zero-based index of the object. Use Items with the \strike Count\strike0\{linkID=4420>main\} property to iterate through all of the objects in the containers array of objects.
\par 
\par }
4450
ID_397





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Count\strike0\{linkID=4420>main\}
\par }
4460
ID_374
TInstantContainer.Add
Add;Add,TInstantContainer;TInstantContainer,Add



Imported
main

Add;Add_Method;TInstantContainer_Add
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Add \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4310>main\}\tab\ul See Also\ulnone\{linkID=4470\}
\par \pard\sb25\sa85\tx1435\fs18 Adds an object to the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  Add(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}): Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Add to add an object at the end of the containers array of objects. If the object that is added does not comply with the validation rules of the attribute, an exception is raised.
\par 
\par }
4470
ID_398





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Insert\strike0\{linkID=4570>main\}
\par }
4480
ID_383
TInstantContainer.AttachObject
AttachObject;AttachObject,TInstantContainer;TInstantContainer,AttachObject



Imported
main

AttachObject;AttachObject_Method;TInstantContainer_AttachObject
FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.AttachObject \cf1\b0\fs16 
\par \strike TInstantContainer\strike0\{link=ID_306>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Attaches an object to the attribute.
\par \pard\sb25\sa25\b\f1 function\b0  AttachObject(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}): Boolean; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Attaches the object specified by the AObject argument to the attribute.
\par For the descendant classes of TInstantComplex this implies: 
\par 
\par \pard\sb25\sa25\tx2300\ul\b Class\tab Action\f2                                                                                        \ulnone\b0\f0 
\par TInstantElement\tab AObject is assigned as the attributes Value
\par TInstantContainer\tab AObject is added to the objects array
\par \pard\sb25\sa25\tx3120 
\par If the object is succesfully attached, the function returns True. Otherwise the function returns False.
\par \pard 
\par }
4490
ID_384
TInstantContainer.Clear
Clear;Clear,TInstantContainer;TInstantContainer,Clear



Imported
main

Clear;Clear_Method;TInstantContainer_Clear
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Clear \cf1\b0\fs16 
\par \strike TInstantContainer\strike0\{link=ID_306>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Clears the containers array of objects.
\par \pard\sb25\sa25\b\f1 procedure\b0  Clear;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Clear to clear the containers array of objects. The number of objects in the container will hereafter be zero.
\par 
\par }
4500
ID_385
TInstantContainer.Delete
Delete;Delete,TInstantContainer;TInstantContainer,Delete



Imported
main

Delete;Delete_Method;TInstantContainer_Delete
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Delete \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4310>main\}\tab\ul See Also\ulnone\{linkID=4510\}
\par \pard\sb25\sa85\tx1435\fs18 Deletes an object from the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Delete(\b Index\b0 : Integer);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Delete to delete the object at the position specified by the zero-based Index argument from the containers array of objects.
\par 
\par }
4510
ID_399





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Remove\strike0\{linkID=4630>main\}
\par }
4520
ID_386
TInstantContainer.DetachObject
DetachObject;DetachObject,TInstantContainer;TInstantContainer,DetachObject



Imported
main

DetachObject;DetachObject_Method;TInstantContainer_DetachObject
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.DetachObject \cf1\b0\fs16 
\par \strike TInstantContainer\strike0\{link=ID_306>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Detaches an object from the attribute.
\par \pard\sb25\sa25\b\f1 function\b0  DetachObject(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}): Boolean; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description\b0 
\par \pard 
\par Detaches the object specified by the AObject argument from the attribute.
\par For the descendant classes of TInstantComplex this implies: 
\par 
\par \pard\tx2340\ul\b Class\tab Action\f2                                                                                                      \ulnone\b0\f0 
\par TInstantElement\tab if the attribute Value equals AObject, the Value is set to nil.
\par TInstantContainer\tab AObject is removed from the attributes array of objects.
\par \pard 
\par If the object is succesfully detached, the function returns True. Otherwise the function returns False.
\par }
4530
ID_387
TInstantContainer.Exchange
Exchange;Exchange,TInstantContainer;TInstantContainer,Exchange



Imported
main

Exchange;Exchange_Method;TInstantContainer_Exchange
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Exchange \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4310>main\}\tab\ul See Also\ulnone\{linkID=4540\}
\par \pard\sb25\sa85\tx1435\fs18 Swaps the position of two objects in the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Exchange(Index1: Integer; Index2: Integer);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Exchange to swap the positions of the objects at positions specified by the zero-based Index1 and Index2 arguments in the containers array of objects.
\par 
\par }
4540
ID_400





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Move\strike0\{linkID=4610>main\}
\par }
4550
ID_388
TInstantContainer.HasItem
HasItem;HasItem,TInstantContainer;TInstantContainer,HasItem



Imported
main

HasItem;HasItem_Method;TInstantContainer_HasItem
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.HasItem \cf1\b0\fs16 
\par \strike TInstantContainer\strike0\{link=ID_306>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if an Item at a specified position is assigned.
\par \pard\sb25\sa25\b\f1 function\b0  HasItem(\b Index\b0 : Integer): Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call the HasItem method to Determine if the Item at the position in the \strike Items\strike0\{linkID=4440>main\} array specified by the Index argument is assigned. If the Item is assigned, HasItem returns true. The HasItem only checks the in memory reference to the Item.
\par 
\par }
4560
ID_389
TInstantContainer.IndexOf
IndexOf;IndexOf,TInstantContainer;TInstantContainer,IndexOf



Imported
main

IndexOf;IndexOf_Method;TInstantContainer_IndexOf
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.IndexOf \cf1\b0\fs16 
\par \strike TInstantContainer\strike0\{link=ID_306>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns the index of a specified object in the containers array of objects.
\par \pard\sb25\sa25\b\f1 function\b0  IndexOf(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call IndexOf to get the zero-based index for a specified object in the containers array of objects. If an object is not found, IndexOf returns -1. If an object appears more than once, IndexOf returns the index of the first occurrence of the object.
\par 
\par }
4570
ID_390
TInstantContainer.Insert
Insert;Insert,TInstantContainer;TInstantContainer,Insert



Imported
main

Insert;Insert_Method;TInstantContainer_Insert
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Insert \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4310>main\}\tab\ul See Also\ulnone\{linkID=4580\}
\par \pard\sb25\sa85\tx1435\fs18 Adds an object at a given position in the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Insert(\b Index\b0 : Integer; AObject: \strike TInstantObject\strike0\{linkID=7240>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Insert to add an object at a position specified by the zero-based Index argument. Insert adds the object at the specified position in the containers array of objects, shifting the object that previously occupied that position, and all subsequent objects, up. If the object that is inserted does not comply with the validation rules of the attribute, an exception is raised.
\par 
\par }
4580
ID_401





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Add\strike0\{linkID=4460>main\}
\par }
4590
ID_391
TInstantContainer.LoadObjectsFromStream
LoadObjectsFromStream;LoadObjectsFromStream,TInstantContainer;TInstantContainer,LoadObjectsFromStream



Imported
main

LoadObjectsFromStream;LoadObjectsFromStream_Method;TInstantContainer_LoadObjectsFromStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.LoadObjectsFromStream \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4310>main\}\tab\ul See Also\ulnone\{linkID=4600\}
\par \pard\sb25\sa85\tx1435\fs18 Loads one or more object from a stream into the attribute.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  LoadObjectsFromStream(AStream: TStream);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call LoadObjectsFromStream to load one or more objects from a stream into the attribute. The stream that holds the objects is passed as the Stream argument. If the object in the stream does not comply with the validation rules of the attribute, an exception is raised.
\par 
\par }
4600
ID_402





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.SaveObjectsToStream\strike0\{linkID=4650>main\}
\par }
4610
ID_392
TInstantContainer.Move
Move;Move,TInstantContainer;TInstantContainer,Move



Imported
main

Move;Move_Method;TInstantContainer_Move
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Move \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4310>main\}\tab\ul See Also\ulnone\{linkID=4620\}
\par \pard\sb25\sa85\tx1435\fs18 Changes the position of an object in the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Move(CurIndex: Integer; NewIndex: Integer);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Move to move the object at the position specified by the CurIndex so that it afterwards occupies the position NewIndex. Both CurIndex and NewIndex are zero-base indexes into the containers array of objects.
\par 
\par }
4620
ID_403





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Exchange\strike0\{linkID=4530>main\}
\par }
4630
ID_375
TInstantContainer.Remove
Remove;Remove,TInstantContainer;TInstantContainer,Remove



Imported


Remove;Remove_Method;TInstantContainer_Remove
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Remove \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4310>main\}\tab\ul See Also\ulnone\{linkID=4640\}
\par \pard\sb25\sa85\tx1435\fs18 Removes an object from the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  Remove(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}): Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Remove to remove an object from the containers array of objects.
\par 
\par }
4640
ID_404





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Delete\strike0\{linkID=4500>main\}
\par }
4650
ID_393
TInstantContainer.SaveObjectsToStream
SaveObjectsToStream;SaveObjectsToStream,TInstantContainer;TInstantContainer,SaveObjectsToStream



Imported
main

SaveObjectsToStream;SaveObjectsToStream_Method;TInstantContainer_SaveObjectsToStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.SaveObjectsToStream \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4310>main\}\tab\ul See Also\ulnone\{linkID=4660\}
\par \pard\sb25\sa85\tx1435\fs18 Saves the objects the attribute holds to a stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  SaveObjectsToStream(AStream: TStream);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call SaveObjectToStream to save the object the attribute holds to a stream. The stream that the object should be saved to is passed as the Stream argument.
\par 
\par }
4660
ID_405





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.LoadObjectsFromStream\strike0\{linkID=4590>main\}
\par }
4670
ID_376
TInstantContainer.Sort
Sort;Sort,TInstantContainer;TInstantContainer,Sort



Imported
main

Sort;Sort_Method;TInstantContainer_Sort
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Sort \cf1\b0\fs16 
\par \strike TInstantContainer\strike0\{link=ID_306>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Sorts the objects in the container based on comparison function.
\par \pard\sb25\sa25\b\f1 procedure\b0  Sort(Compare: \strike TInstantSortCompare\strike0\{linkID=12380>main\});
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Sort to QuickSort the objects in the container. Compare is a comparison function that indicates how the items are to be ordered.
\par 
\par }
4680
ID_407
TInstantCustomExposer
TInstantCustomExposer



Imported
main

TInstantCustomExposer;TInstantCustomExposer_Object
FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer \cf1\b0\fs16\{keepn\} 
\par \pard\sb25\tx1435\tx2875\tx4315\tx5755\ul Hierarchy\ulnone\{linkID=4690\}\tab\strike Members\strike0\{linkID=4770>nav\}\tab\strike Properties\strike0\{linkID=4710>nav\}\tab\strike Methods\strike0\{linkID=4750>nav\}\tab\strike Events\strike0\{linkID=4730>nav\}\tab\strike Unit: InstantPresentation\strike0\{linkID=12870>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 The ancestor of components that make objects accessible via data-aware controls.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\f1 TInstantCustomExposer = \b class\b0 (TDataSet)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantCustomExposer is the ancestor of components that make objects accessible via standard data-aware controls by exposing the objects in rows and columns. The rows represent the individual objects and the columns represent properties of the objects.
\par TInstantCustomExposer is not limited to exposing instances of \strike TInstantObject\strike0\{linkID=7240>main\} descendants but may expose instances of any class that has published properties. The object that is exposed is specified by the \strike Subject\strike0\{linkID=5010>main\} property.
\par In addition to the published properties, any container attributes within an exposed object are available as nested datasets, if the object is a \strike TInstantObject\strike0\{linkID=7240>main\}.
\par An exposer can expose a single object (object mode) or multiple objects (content mode), by setting the \strike Mode\strike0\{linkID=4880>main\} property accordingly.
\par 
\par TInstantCustomExposer is abstract; so do not create instances of this class. Instead refer to the following concrete descendant classes: 
\par \ul\b Concrete exposer classes\f2                                                    \ulnone\b0\f0 
\par \strike TInstantExposer\strike0\{linkID=6300>main\}
\par \strike TInstantSelector\strike0\{linkID=10050>main\}
\par \pard 
\par 
\par }
4690
ID_408





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TDataSet
\par \pard\li95\tx355\tab |
\par \strike TInstantCustomExposer\strike0\{linkID=4680>main\}
\par 
\par }
4700
ID_418





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCustomExposer Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantCustomExposer\strike0\{linkID=4680>main\}
\par 
\par }
4710
ID_410





Imported



FALSE
24
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCustomExposer Properties \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul Legend\ulnone\{link=ID_434\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Accessor\strike0\{linkID=4790>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ContainerName\strike0\{linkID=4800>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike CurrentObject\strike0\{linkID=4810>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike FieldOptions\strike0\{linkID=4820>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike HasSubject\strike0\{linkID=4840>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsChanged\strike0\{linkID=4850>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Limited\strike0\{linkID=4860>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Mode\strike0\{linkID=4880>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClass\strike0\{linkID=4890>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClassName\strike0\{linkID=4910>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4950>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Options\strike0\{linkID=4970>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ReadOnly\strike0\{linkID=4980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Sorted\strike0\{linkID=4990>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Subject\strike0\{linkID=5010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike TotalCount\strike0\{linkID=5020>main\}
\par 
\par }
4720
ID_434





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
4730
ID_412





Imported



FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCustomExposer Events \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul Legend\ulnone\{link=ID_442\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCompare\strike0\{linkID=5370>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateObject\strike0\{linkID=5390>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnFieldError\strike0\{linkID=5400>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIncludeField\strike0\{linkID=5420>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitField\strike0\{linkID=5450>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitFieldDef\strike0\{linkID=5470>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnLimit\strike0\{linkID=5490>main\}
\par 
\par }
4740
ID_442





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
4750
ID_411





Imported



FALSE
33
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCustomExposer Methods \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul Legend\ulnone\{link=ID_469\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddObject\strike0\{linkID=5040>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ApplyChanges\strike0\{linkID=5050>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AssignFieldValue\strike0\{linkID=5060>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ChangesDisabled\strike0\{linkID=5070>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=5090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DeleteObject\strike0\{linkID=5100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DisableChanges\strike0\{linkID=5120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnableChanges\strike0\{linkID=5140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetFieldStrings\strike0\{linkID=5160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GotoObject\strike0\{linkID=5170>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike HandleFieldError\strike0\{linkID=5180>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike IncludeField\strike0\{linkID=5190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOfObject\strike0\{linkID=5200>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitField\strike0\{linkID=5210>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitFieldDef\strike0\{linkID=5220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike InsertObject\strike0\{linkID=5230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFields\strike0\{linkID=5240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike PostChanges\strike0\{linkID=5250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshCurrentObject\strike0\{linkID=5260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshData\strike0\{linkID=5270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReleaseObject\strike0\{linkID=5280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remember\strike0\{linkID=5290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RemoveObject\strike0\{linkID=5310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Reset\strike0\{linkID=5330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Revert\strike0\{linkID=5340>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Undo\strike0\{linkID=5360>main\}
\par 
\par }
4760
ID_469





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
4770
ID_409





Imported



FALSE
59
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCustomExposer Members \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul Legend\ulnone\{link=ID_470\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Accessor\strike0\{linkID=4790>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ContainerName\strike0\{linkID=4800>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike CurrentObject\strike0\{linkID=4810>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike FieldOptions\strike0\{linkID=4820>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike HasSubject\strike0\{linkID=4840>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsChanged\strike0\{linkID=4850>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Limited\strike0\{linkID=4860>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Mode\strike0\{linkID=4880>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClass\strike0\{linkID=4890>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClassName\strike0\{linkID=4910>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4950>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Options\strike0\{linkID=4970>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ReadOnly\strike0\{linkID=4980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Sorted\strike0\{linkID=4990>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Subject\strike0\{linkID=5010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike TotalCount\strike0\{linkID=5020>main\}
\par \pard\sb55\sa55\tx355\b Events
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCompare\strike0\{linkID=5370>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateObject\strike0\{linkID=5390>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnFieldError\strike0\{linkID=5400>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIncludeField\strike0\{linkID=5420>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitField\strike0\{linkID=5450>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitFieldDef\strike0\{linkID=5470>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnLimit\strike0\{linkID=5490>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddObject\strike0\{linkID=5040>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ApplyChanges\strike0\{linkID=5050>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AssignFieldValue\strike0\{linkID=5060>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ChangesDisabled\strike0\{linkID=5070>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=5090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DeleteObject\strike0\{linkID=5100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DisableChanges\strike0\{linkID=5120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnableChanges\strike0\{linkID=5140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetFieldStrings\strike0\{linkID=5160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GotoObject\strike0\{linkID=5170>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike HandleFieldError\strike0\{linkID=5180>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike IncludeField\strike0\{linkID=5190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOfObject\strike0\{linkID=5200>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitField\strike0\{linkID=5210>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitFieldDef\strike0\{linkID=5220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike InsertObject\strike0\{linkID=5230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFields\strike0\{linkID=5240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike PostChanges\strike0\{linkID=5250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshCurrentObject\strike0\{linkID=5260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshData\strike0\{linkID=5270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReleaseObject\strike0\{linkID=5280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remember\strike0\{linkID=5290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RemoveObject\strike0\{linkID=5310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Reset\strike0\{linkID=5330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Revert\strike0\{linkID=5340>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Undo\strike0\{linkID=5360>main\}
\par 
\par }
4780
ID_470





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
4790
ID_419
TInstantCustomExposer.Accessor
Accessor;Accessor,TInstantCustomExposer;TInstantCustomExposer,Accessor



Imported
main

Accessor;Accessor_Property;TInstantCustomExposer_Accessor
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Accessor \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Holds the accessor that is currently being used by the exposer to access the subject.
\par \pard\sb25\sa25\b\f1 property\b0  Accessor: TInstantAccessor;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The subject being exposed by an exposer is accessed via an accessor. The purpose of the accessor is to give the exposer access to any object, regardless of its class, simply by using an accessor that is suitable for the object. The accessor allows the exposer to perform operations such as adding and removing contained objects as well as reading and writing properties of the subject or objects contained within it.
\par 
\par }
4800
ID_420
TInstantCustomExposer.ContainerName
ContainerName;ContainerName,TInstantCustomExposer;TInstantCustomExposer,ContainerName



Imported
main

ContainerName;ContainerName_Property;TInstantCustomExposer_ContainerName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ContainerName \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the name of the container whose objects are to be exposed.
\par \pard\sb25\sa25\b\f1 property\b0  ContainerName: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use ContainerName to specify the name of the container in the subject which contains the objects that are to be exposed. If the \strike Mode\strike0\{linkID=4880>main\} of the exposer is not amContent, ContainerName has no effect.
\par 
\par }
4810
ID_421
TInstantCustomExposer.CurrentObject
CurrentObject;CurrentObject,TInstantCustomExposer;TInstantCustomExposer,CurrentObject



Imported
main

CurrentObject;CurrentObject_Property;TInstantCustomExposer_CurrentObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.CurrentObject \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the object at the current position of the exposer.
\par \pard\sb25\sa25\b\f1 property\b0  CurrentObject: TObject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Each row of an exposer represents an object. When in content mode, the CurrentObject specifies the object at the current row of the exposer. In object mode, CurrentObject will always be \strike Subject\strike0\{linkID=5010>main\}.
\par 
\par }
4820
ID_422
TInstantCustomExposer.FieldOptions
FieldOptions;FieldOptions,TInstantCustomExposer;TInstantCustomExposer,FieldOptions



Imported
main

FieldOptions;FieldOptions_Property;TInstantCustomExposer_FieldOptions
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.FieldOptions \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=4830\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies what fields are created by default to access properties of exposed objects.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  FieldOptions: TInstantFieldOptions;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The exposer uses dataset fields to access properties of exposed objects. The number of fields in an exposer influences the performance of the exposer; reducing the number of fields can increase performance. Simple published properties of the actual exposed object are always included. FieldOptions allow you to specify whether to include fields for object properties as well. In addition, you can specify whether to include published properties of the objects assigned to the object properties. To include or exclude fields for specific properties, refer to \strike OnIncludeField\strike0\{linkID=5420>main\}.
\par 
\par }
4830
ID_471





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.OnIncludeField\strike0\{linkID=5420>main\}
\par }
4840
ID_423
TInstantCustomExposer.HasSubject
HasSubject;HasSubject,TInstantCustomExposer;TInstantCustomExposer,HasSubject



Imported
main

HasSubject;HasSubject_Property;TInstantCustomExposer_HasSubject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.HasSubject \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if the exposer has a subject
\par \pard\sb25\sa25\b\f1 property\b0  HasSubject: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasSubject to determine if the exposer has a subject.
\par 
\par }
4850
ID_424
TInstantCustomExposer.IsChanged
IsChanged;IsChanged,TInstantCustomExposer;TInstantCustomExposer,IsChanged



Imported
main

IsChanged;IsChanged_Property;TInstantCustomExposer_IsChanged
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.IsChanged \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if changes have been made to the exposed subject.
\par \pard\sb25\sa25\b\f1 property\b0  IsChanged: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 If objects have been added or removed or any changes have been made to the subject or any object within the subject, IsChanged is True. Otherwise IsChanged is False.
\par 
\par }
4860
ID_425
TInstantCustomExposer.Limited
Limited;Limited,TInstantCustomExposer;TInstantCustomExposer,Limited



Imported
main

Limited;Limited_Property;TInstantCustomExposer_Limited
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Limited \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=4870\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies whether a limited set of objects within an exposed container is accessible.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Limited: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 When Limited is True, only objects that pass the inclusion criteria specified by the \strike OnLimit\strike0\{linkID=5490>main\} event are accessible. If Limited is False all objects within the exposed container are included. The limited view is applied immediately when both Limited is set to True and \strike OnLimit\strike0\{linkID=5490>main\} is assigned.
\par 
\par }
4870
ID_472





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.OnLimit\strike0\{linkID=5490>main\}
\par \strike TInstantCustomExposer.ObjectCount\strike0\{linkID=4930>main\}
\par \strike TInstantCustomExposer.TotalCount\strike0\{linkID=5020>main\}
\par \strike TInstantCustomExposer.Sorted\strike0\{linkID=4990>main\}
\par \strike TInstantCustomExposer.OnCompare\strike0\{linkID=5370>main\}
\par }
4880
ID_415
TInstantCustomExposer.Mode
Mode;Mode,TInstantCustomExposer;TInstantCustomExposer,Mode



Imported
main

Mode;Mode_Property;TInstantCustomExposer_Mode
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Mode \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies how the attached subject is being exposed.
\par \pard\sb25\sa25\b\f1 property\b0  Mode: \strike TInstantAccessMode\strike0\{linkID=11950>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 An exposer can operate in one of two possible modes; object or content. The access mode specified in the Mode property determines the current mode of the exposer. When in object mode, the properties of the attached subject are available via dataset fields in the exposer. In content mode, the properties of objects contained in the subject are available instead. Content mode requires that the attached subject is either itself a container or that it has one or more containers that are accessible via a suitable accessor. In object mode, the exposer will have a fixed row count of one. In content mode, the number of rows will equal the number of objects in the specified container. Adding and deleting rows in content mode will result in objects being created and destroyed. Rows cannot be added nor deleted in object mode.
\par 
\par }
4890
ID_426
TInstantCustomExposer.ObjectClass
ObjectClass;ObjectClass,TInstantCustomExposer;TInstantCustomExposer,ObjectClass



Imported
main

ObjectClass;ObjectClass_Property;TInstantCustomExposer_ObjectClass
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ObjectClass \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=4900\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class of objects being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClass: TClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The exposer uses dataset fields to access properties of exposed objects. ObjectClass specifies the common base class of the objects being exposed. By default, the accessor created by the exposer to access the subject will determine the class from the attached subject. \strike TInstantCustomExposer\strike0\{linkID=4680>main\} therefore introduces the ObjectClass property as read-only, but descendants may reintroduce this property as writeable, allowing you to override the class determined by the accessor. \strike TInstantExposer\strike0\{linkID=6300>main\} is an example hereof.
\par 
\par }
4900
ID_474





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.ObjectClassName\strike0\{linkID=4910>main\}
\par }
4910
ID_427
TInstantCustomExposer.ObjectClassName
ObjectClassName;ObjectClassName,TInstantCustomExposer;TInstantCustomExposer,ObjectClassName



Imported
main

ObjectClassName;ObjectClassName_Property;TInstantCustomExposer_ObjectClassName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ObjectClassName \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=4920\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class name of objects being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClassName: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ObjectClassName specifies the name of the common class of the objects being exposed.
\par 
\par }
4920
ID_475





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.ObjectClass\strike0\{linkID=4890>main\}
\par }
4930
ID_428
TInstantCustomExposer.ObjectCount
ObjectCount;ObjectCount,TInstantCustomExposer;TInstantCustomExposer,ObjectCount



Imported
main

ObjectCount;ObjectCount_Property;TInstantCustomExposer_ObjectCount
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ObjectCount \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=4940\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the number of objects currently being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectCount: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 In content mode, ObjectCount will reflect the number of objects currently accessible within the exposed container. In object mode, ObjectCount will always be 1.
\par 
\par }
4940
ID_476





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.Objects\strike0\{linkID=4950>main\}
\par \strike TInstantCustomExposer.TotalCount\strike0\{linkID=5020>main\}
\par }
4950
ID_429
TInstantCustomExposer.Objects
Objects;Objects,TInstantCustomExposer;TInstantCustomExposer,Objects



Imported
main

Objects;Objects_Property;TInstantCustomExposer_Objects
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Objects \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=4960\}
\par \pard\sb25\sa85\tx1435\fs18 Array representing the objects contained by the exposed container.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Objects [\b Index\b0 : Integer]: TObject;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use this zero-based array to access the exposed objects programmatically when in content mode.
\par 
\par }
4960
ID_477





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.ObjectCount\strike0\{linkID=4930>main\}
\par \strike TInstantCustomExposer.TotalCount\strike0\{linkID=5020>main\}
\par }
4970
ID_430
TInstantCustomExposer.Options
Options;Options,TInstantCustomExposer;TInstantCustomExposer,Options



Imported
main

Options;Options_Property;TInstantCustomExposer_Options
FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Options \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the options of the exposer.
\par \pard\sb25\sa25\b\f1 property\b0  Options: \strike TInstantExposerOptions\strike0\{linkID=12210>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Options to specify the options of the exposer.
\par eoAutoApply specifies that changes made to the \strike Subject\strike0\{linkID=5010>main\} or objects contained in the \strike Subject\strike0\{linkID=5010>main\} should be applied automatically. For \strike TInstantObject\strike0\{linkID=7240>main\} descendants this means that the persistent storage is updated for each changed object. Deleted objects will be disposed from the persistent storage and new objects will be added.
\par 
\par Use eoDeferInsert to specify that objects that are appended or Inserted are not applied to the container of the \strike Subject\strike0\{linkID=5010>main\} until a row is posted. This option is only effective when the exposer is in amContent \strike Mode\strike0\{linkID=4880>main\}.
\par 
\par }
4980
ID_431
TInstantCustomExposer.ReadOnly
ReadOnly;ReadOnly,TInstantCustomExposer;TInstantCustomExposer,ReadOnly



Imported
main

ReadOnly;ReadOnly_Property;TInstantCustomExposer_ReadOnly
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ReadOnly \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies whether the exposer is read-only or writeable.
\par \pard\sb25\sa25\b\f1 property\b0  \b ReadOnly\b0 : Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 ReadOnly determines whether the exposed objects can be modified through the exposer or not. If True, rows can be added or deleted and properties can be changed via their corresponding fields. If False, no changes can be made.
\par 
\par }
4990
ID_432
TInstantCustomExposer.Sorted
Sorted;Sorted,TInstantCustomExposer;TInstantCustomExposer,Sorted



Imported
main

Sorted;Sorted_Property;TInstantCustomExposer_Sorted
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Sorted \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5000\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies whether or not the exposed objects are sorted.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Sorted: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0\strike Objects\strike0\{linkID=4950>main\} in an exposed container can be sorted by assigning an \strike OnCompare\strike0\{linkID=5370>main\} event handler. The Sorted property determines whether sorting is enabled or not.
\par 
\par }
5000
ID_479





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.OnCompare\strike0\{linkID=5370>main\}
\par \strike TInstantCustomExposer.Limited\strike0\{linkID=4860>main\}
\par \strike TInstantCustomExposer.OnLimit\strike0\{linkID=5490>main\}
\par }
5010
ID_414
TInstantCustomExposer.Subject
Subject;Subject,TInstantCustomExposer;TInstantCustomExposer,Subject



Imported
main

Subject;Subject_Property;TInstantCustomExposer_Subject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Subject \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the object that is being exposed.
\par \pard\sb25\sa25\b\f1 property\b0  Subject: TObject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Subject is the main object of the object(s) being exposed. The class of the subject is used to find a suitable accessor with which the exposer can access the subject or objects contained within it. Whether the subject itself or objects contained within it are exposed, is determined by the current \strike Mode\strike0\{linkID=4880>main\} of the exposer.
\par 
\par }
5020
ID_433
TInstantCustomExposer.TotalCount
TInstantCustomExposer,TotalCount;TotalCount;TotalCount,TInstantCustomExposer



Imported
main

TInstantCustomExposer_TotalCount;TotalCount;TotalCount_Property
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.TotalCount \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5030\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the total number of objects in the currently exposed container.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  TotalCount: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 In content mode, TotalCount will reflect the total number of objects within the exposed container. In object mode, TotalCount will always be 1.
\par 
\par }
5030
ID_480





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.ObjectCount\strike0\{linkID=4930>main\}
\par \strike TInstantCustomExposer.Objects\strike0\{linkID=4950>main\}
\par }
5040
ID_443
TInstantCustomExposer.AddObject
AddObject;AddObject,TInstantCustomExposer;TInstantCustomExposer,AddObject



Imported
main

AddObject;AddObject_Method;TInstantCustomExposer_AddObject
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.AddObject \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Adds an object to the exposed container.
\par \pard\sb25\sa25\b\f1 function\b0  AddObject(AObject: TObject): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The object passed in AObject is added to the end of the container that is currently being exposed. The exposer is updated to reflect the change, making the added object visible as the corresponding row of the dataset.
\par Calling this method is only valid when the exposer is in content mode.
\par 
\par }
5050
ID_444
TInstantCustomExposer.ApplyChanges
ApplyChanges;ApplyChanges,TInstantCustomExposer;TInstantCustomExposer,ApplyChanges



Imported
main

ApplyChanges;ApplyChanges_Method;TInstantCustomExposer_ApplyChanges
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ApplyChanges \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Saves pending changes.
\par \pard\sb25\sa25\b\f1 procedure\b0  ApplyChanges;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Saves changes made to the subject or objects contained in the subject. For \strike TInstantObject\strike0\{linkID=7240>main\} descendants this means that the persistent storage is updated for each changed object. Deleted objects will be disposed from the persistent storage and new objects will be added.
\par 
\par }
5060
ID_445
TInstantCustomExposer.AssignFieldValue
AssignFieldValue;AssignFieldValue,TInstantCustomExposer;TInstantCustomExposer,AssignFieldValue



Imported
main

AssignFieldValue;AssignFieldValue_Method;TInstantCustomExposer_AssignFieldValue
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.AssignFieldValue \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Applies a given value to a specified field of the exposer.
\par \pard\sb25\sa25\b\f1 procedure\b0  AssignFieldValue(Field: TField; Value: Variant);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use this method when side effects of setting a property of an exposed object involve setting related properties of the same object and the values of the related properties must be visible in data-aware controls immediately. Normally, data-aware controls such as TDBEdit do not save an edited value before exiting the control. For an exposer this means that the underlying property of an edit control is not changed until the control is left. For changes to happen immediately when editing a property via an edit control, call AssignFieldValue with the field and new value from an OnChange event of the control.
\par 
\par }
5070
ID_446
TInstantCustomExposer.ChangesDisabled
ChangesDisabled;ChangesDisabled,TInstantCustomExposer;TInstantCustomExposer,ChangesDisabled



Imported
main

ChangesDisabled;ChangesDisabled_Method;TInstantCustomExposer_ChangesDisabled
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ChangesDisabled \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5080\}
\par \pard\sb25\sa85\tx1435\fs18 Determines if the exposer responds to object changes.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  ChangesDisabled: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The ChangesDisabled property determines if the exposer responds to indirect modifications that occur to the objects is exposes. If the value of one of an objects attribute is changed, the object sends a notification. If ChangesDisabled is True, the exposer will not respond to such a notification and reflect the change that occurred. The mechanism is only effective when exposing \strike TInstantObject\strike0\{linkID=7240>main\} descendants.
\par 
\par }
5080
ID_481





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.DisableChanges\strike0\{linkID=5120>main\}
\par \strike TInstantCustomExposer.EnableChanges\strike0\{linkID=5140>main\}
\par }
5090
ID_447
TInstantCustomExposer.Clear
Clear;Clear,TInstantCustomExposer;TInstantCustomExposer,Clear



Imported
main

Clear;Clear_Method;TInstantCustomExposer_Clear
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Clear \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Removes all objects from the exposed container.
\par \pard\sb25\sa25\b\f1 procedure\b0  Clear;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Removes all objects from the container that is currently being exposed. After calling this method, the exposer will be empty.
\par Calling this method is only valid when the exposer is in content mode.
\par 
\par }
5100
ID_448
TInstantCustomExposer.DeleteObject
DeleteObject;DeleteObject,TInstantCustomExposer;TInstantCustomExposer,DeleteObject



Imported
main

DeleteObject;DeleteObject_Method;TInstantCustomExposer_DeleteObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.DeleteObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5110\}
\par \pard\sb25\sa85\tx1435\fs18 Deletes an object from the exposer.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  DeleteObject(\b Index\b0 : Integer);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 DeleteObject deletes the object at the position specified by the Index argument from the exposer whithout disposing the object persistently.
\par 
\par }
5110
ID_482





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.RemoveObject\strike0\{linkID=5310>main\}
\par }
5120
ID_449
TInstantCustomExposer.DisableChanges
DisableChanges;DisableChanges,TInstantCustomExposer;TInstantCustomExposer,DisableChanges



Imported
main

DisableChanges;DisableChanges_Method;TInstantCustomExposer_DisableChanges
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.DisableChanges \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5130\}
\par \pard\sb25\sa85\tx1435\fs18 Disables responding to object changes.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  DisableChanges;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Disables the exposer from responding to indirect object modifications. DisableChanges can be nested. Each call to DisableChanges should have a corresponding call to \strike EnableChanges\strike0\{linkID=5140>main\}.
\par 
\par }
5130
ID_483





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.ChangesDisabled\strike0\{linkID=5070>main\}
\par \strike TInstantCustomExposer.EnableChanges\strike0\{linkID=5140>main\}
\par }
5140
ID_450
TInstantCustomExposer.EnableChanges
EnableChanges;EnableChanges,TInstantCustomExposer;TInstantCustomExposer,EnableChanges



Imported
main

EnableChanges;EnableChanges_Method;TInstantCustomExposer_EnableChanges
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.EnableChanges \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5150\}
\par \pard\sb25\sa85\tx1435\fs18 Enables responding to object changes.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  EnableChanges;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Enables the exposer to respond to indirect object modifications. If the current disabled level is not nested, the call to EnableChanges enables responding. Otherwise EnableChanges only decrements the disabled nesting level.
\par 
\par }
5150
ID_484





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.ChangesDisabled\strike0\{linkID=5070>main\}
\par \strike TInstantCustomExposer.DisableChanges\strike0\{linkID=5120>main\}
\par }
5160
ID_451
TInstantCustomExposer.GetFieldStrings
GetFieldStrings;GetFieldStrings,TInstantCustomExposer;TInstantCustomExposer,GetFieldStrings



Imported
main

GetFieldStrings;GetFieldStrings_Method;TInstantCustomExposer_GetFieldStrings
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.GetFieldStrings \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Loads a stringlist with the possible values of the specified field.
\par \pard\sb25\sa25\b\f1 function\b0  GetFieldStrings(Field: TField; Strings: TStrings): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call this method to load all possible values of a given field into a pick list.
\par Returns the number of items added.
\par 
\par }
5170
ID_452
TInstantCustomExposer.GotoObject
GotoObject;GotoObject,TInstantCustomExposer;TInstantCustomExposer,GotoObject



Imported
main

GotoObject;GotoObject_Method;TInstantCustomExposer_GotoObject
FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.GotoObject \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Positions the exposer at a given object.
\par \pard\sb25\sa25\b\f1 function\b0  GotoObject(AObject: TObject): Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 If AObject is found in the exposed container, the current row is set to the row representing it.
\par The method returns True if the object was found. Otherwise the function returns False.
\par The method is only effective if the exposer is in amContent mode.
\par 
\par }
5180
ID_453
TInstantCustomExposer.HandleFieldError
HandleFieldError;HandleFieldError,TInstantCustomExposer;TInstantCustomExposer,HandleFieldError



Imported
main

HandleFieldError;HandleFieldError_Method;TInstantCustomExposer_HandleFieldError
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.HandleFieldError \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Handles errors occurred during read or write of field values.
\par \pard\sb25\sa25\b\f1 function\b0  HandleFieldError(E: Exception; Field: TField; Value: Variant; \b Write\b0 : Boolean): Boolean; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Override this method to perform special operations on specific errors that occur when reading or writing field values of the exposer. If Write is True, a write operation was performed, if False a read operation was performed. If writing was attempted, the value passed in Value was written to the field. The return value of the method indicates whether the exception was handled or not.
\par 
\par }
5190
ID_454
TInstantCustomExposer.IncludeField
IncludeField;IncludeField,TInstantCustomExposer;TInstantCustomExposer,IncludeField



Imported
main

IncludeField;IncludeField_Method;TInstantCustomExposer_IncludeField
FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.IncludeField \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines, if a field should be generated for the property with the specified fieldname.
\par \pard\sb25\sa25\b\f1 function\b0  IncludeField(FieldName: \b string\b0 ; \b Default\b0 : Boolean): Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 This method is called internally by the exposer to determine, if a field should be automatically generated for the property identified by the specified FieldName. FieldName contains the path to the property using dot-notation.
\par By default, only the field types specified by \strike Options\strike0\{linkID=4970>main\} are included. In addition, circular property references are avoided by excluding fields for multiple occurrences of the same relation.
\par Override this method to include or exclude specific fields when generating fields automatically.
\par 
\par }
5200
ID_455
TInstantCustomExposer.IndexOfObject
IndexOfObject;IndexOfObject,TInstantCustomExposer;TInstantCustomExposer,IndexOfObject



Imported
main

IndexOfObject;IndexOfObject_Method;TInstantCustomExposer_IndexOfObject
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.IndexOfObject \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns the index of the specified object.
\par \pard\sb25\sa25\b\f1 function\b0  IndexOfObject(AObject: TObject): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 If the object passed in AObject is found in the exposed container, its index is returned. Otherwise -1 is returned.
\par Calling this method is only valid when the exposer is in content mode.
\par 
\par }
5210
ID_456
TInstantCustomExposer.InitField
InitField;InitField,TInstantCustomExposer;TInstantCustomExposer,InitField



Imported
main

InitField;InitField_Method;TInstantCustomExposer_InitField
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.InitField \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Initializes a field of the exposer.
\par \pard\sb25\sa25\b\f1 procedure\b0  InitField(Field: TField); \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Used internally by the exposer to initialize fields that have been generated to access properties of exposed objects.
\par Override this method to perform any special field initialization.
\par 
\par }
5220
ID_457
TInstantCustomExposer.InitFieldDef
InitFieldDef;InitFieldDef,TInstantCustomExposer;TInstantCustomExposer,InitFieldDef



Imported
main

InitFieldDef;InitFieldDef_Method;TInstantCustomExposer_InitFieldDef
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.InitFieldDef \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Initializes a field definition.
\par \pard\sb25\sa25\b\f1 procedure\b0  InitFieldDef(FieldDef: TFieldDef); \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Used internally by the exposer to initialize field definitions that have been generated to create fields for accessing properties of exposed objects.
\par Override this method to perform any special initialization of field definitions.
\par 
\par }
5230
ID_458
TInstantCustomExposer.InsertObject
InsertObject;InsertObject,TInstantCustomExposer;TInstantCustomExposer,InsertObject



Imported
main

InsertObject;InsertObject_Method;TInstantCustomExposer_InsertObject
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.InsertObject \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Inserts an object into the exposed container.
\par \pard\sb25\sa25\b\f1 procedure\b0  InsertObject(AObject: TObject);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The object passed in AObject is inserted at the specified Index in the container that is currently being exposed. The exposer is updated to reflect the change, making the inserted object visible as the corresponding row of the dataset.
\par Calling this method is only valid when the exposer is in content mode.
\par 
\par }
5240
ID_459
TInstantCustomExposer.LoadFields
LoadFields;LoadFields,TInstantCustomExposer;TInstantCustomExposer,LoadFields



Imported
main

LoadFields;LoadFields_Method;TInstantCustomExposer_LoadFields
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.LoadFields \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Loads fields from the current object.
\par \pard\sb25\sa25\b\f1 procedure\b0  LoadFields;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call LoadFields to load the field values from \strike CurrentObject\strike0\{linkID=4810>main\} into the active record buffer.
\par 
\par }
5250
ID_460
TInstantCustomExposer.PostChanges
PostChanges;PostChanges,TInstantCustomExposer;TInstantCustomExposer,PostChanges



Imported
main

PostChanges;PostChanges_Method;TInstantCustomExposer_PostChanges
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.PostChanges \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Posts any changes made while in edit or insert mode.
\par \pard\sb25\sa25\b\f1 procedure\b0  PostChanges;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call this method to ensure that changes made during an edit or insert state are posted to the underlying object. If the exposer is in dsEdit or dsInsert mode, changes will be posted and the mode is set to dsBrowse.
\par 
\par }
5260
ID_461
TInstantCustomExposer.RefreshCurrentObject
RefreshCurrentObject;RefreshCurrentObject,TInstantCustomExposer;TInstantCustomExposer,RefreshCurrentObject



Imported
main

RefreshCurrentObject;RefreshCurrentObject_Method;TInstantCustomExposer_RefreshCurrentObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.RefreshCurrentObject \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Refreshes the current object.
\par \pard\sb25\sa25\b\f1 procedure\b0  RefreshCurrentObject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use RefreshCurrentObject to refresh the object that is currently being exposed. The method is only effective if the current object is a \strike TInstantObject\strike0\{linkID=7240>main\} instance.
\par 
\par }
5270
ID_462
TInstantCustomExposer.RefreshData
RefreshData;RefreshData,TInstantCustomExposer;TInstantCustomExposer,RefreshData



Imported
main

RefreshData;RefreshData_Method;TInstantCustomExposer_RefreshData
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.RefreshData \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Performs a complete refresh.
\par \pard\sb25\sa25\b\f1 procedure\b0  RefreshData;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call the RefreshData to perform a complete refresh when the exposer is \strike Limited\strike0\{linkID=4860>main\} or \strike Sorted\strike0\{linkID=4990>main\}. RefreshData will destroy the current object view and regenerate it.
\par 
\par }
5280
ID_463
TInstantCustomExposer.ReleaseObject
ReleaseObject;ReleaseObject,TInstantCustomExposer;TInstantCustomExposer,ReleaseObject



Imported
main

ReleaseObject;ReleaseObject_Method;TInstantCustomExposer_ReleaseObject
FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ReleaseObject \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa25\b\f1\fs18 procedure\b0  ReleaseObject(AObject: TObject);
\par 
\par }
5290
ID_464
TInstantCustomExposer.Remember
Remember;Remember,TInstantCustomExposer;TInstantCustomExposer,Remember



Imported
main

Remember;Remember_Method;TInstantCustomExposer_Remember
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 TInstantCustomExposer.Remember \b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5300\}
\par \pard\sb25\sa85\tx1435\fs18 Saves all fields of \strike CurrentObject\strike0\{linkID=4810>main\} internally making it possible to undo changes by calling \strike Revert\strike0\{linkID=5340>main\}.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Remember;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Changes made to properties of exposed objects through data-aware controls are written directly to the properties ensuring that any side effects are performed as well. This means that changes cannot be reverted simply by exiting edit or insert state with Cancel. Instead, it is necessary to call Remember prior to making changes via data-aware controls, if the changes need to be undone later. After calling Remember, changes can be reverted by calling \strike Revert\strike0\{linkID=5340>main\}.
\par 
\par }
5300
ID_485





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.Revert\strike0\{linkID=5340>main\}
\par }
5310
ID_465
TInstantCustomExposer.RemoveObject
RemoveObject;RemoveObject,TInstantCustomExposer;TInstantCustomExposer,RemoveObject



Imported
main

RemoveObject;RemoveObject_Method;TInstantCustomExposer_RemoveObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.RemoveObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5320\}
\par \pard\sb25\sa85\tx1435\fs18 Removes an object from the exposer.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  RemoveObject(AObject: TObject): Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 RemoveObject removes an object from the exposer whithout disposing the object persistently.
\par 
\par }
5320
ID_486





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.DeleteObject\strike0\{linkID=5100>main\}
\par }
5330
ID_466
TInstantCustomExposer.Reset
Reset;Reset,TInstantCustomExposer;TInstantCustomExposer,Reset



Imported
main

Reset;Reset_Method;TInstantCustomExposer_Reset
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Reset \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Completely resets the exposer.
\par \pard\sb25\sa25\b\f1 procedure\b0  Reset;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call this method to completely reset the exposer. Pending changes will be discarded and all fields will be re-created according to the current \strike ObjectClass\strike0\{linkID=4890>main\}. If the exposer was active prior to this call, it will be reopened. The exposer calls Reset internally when \strike Subject\strike0\{linkID=5010>main\} or \strike ObjectClass\strike0\{linkID=4890>main\} changes. It is normally not necessary to call this method explicitly.
\par 
\par }
5340
ID_467
TInstantCustomExposer.Revert
Revert;Revert,TInstantCustomExposer;TInstantCustomExposer,Revert



Imported
main

Revert;Revert_Method;TInstantCustomExposer_Revert
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Revert \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5350\}
\par \pard\sb25\sa85\tx1435\fs18 Revert the properties of \strike CurrentObject\strike0\{linkID=4810>main\} to the field values saved when \strike Remember\strike0\{linkID=5290>main\} was called.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Revert;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Revert lets you undo changes made to \strike CurrentObject\strike0\{linkID=4810>main\} via data-aware controls. All field values will be reverted to the values saved when calling \strike Remember\strike0\{linkID=5290>main\}.
\par 
\par }
5350
ID_487





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.Remember\strike0\{linkID=5290>main\}
\par }
5360
ID_468
TInstantCustomExposer.Undo
TInstantCustomExposer,Undo;Undo;Undo,TInstantCustomExposer



Imported
main

TInstantCustomExposer_Undo;Undo;Undo_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Undo \cf1\b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Reverts pending changes.
\par \pard\sb25\sa25\b\f1 procedure\b0  Undo;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Undo to undo any pending changes when editing an object through the exposer. Undo reloads the attribute values of the object being edited.
\par 
\par }
5370
ID_435
TInstantCustomExposer.OnCompare
OnCompare;OnCompare,TInstantCustomExposer;TInstantCustomExposer,OnCompare



Imported
main

OnCompare;OnCompare_Event;TInstantCustomExposer_OnCompare
FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.OnCompare \cf1\b0\fs16\{keepn\} 
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\strike Example 1\strike0\{linkID=5380>example\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs for each object in an exposed container to determine its sorted position.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnCompare: \strike TInstantCompareObjectsEvent\strike0\{linkID=12000>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnCompare event handler to decide the position of each object when the exposer is \strike Sorted\strike0\{linkID=4990>main\}.
\par Compare the sort values of the two passed objects and return the result in Compare: 
\par 
\par \ul\b Value\tab Meaning\f2                                                                    \ulnone\b0\f0 
\par < 0\tab Object1 is less than Object2
\par 0\tab Object1 equals Object2
\par > 0\tab Object1 is greater than Object2
\par \pard 
\par }
5380
ID_488
TInstantCustomExposer.OnCompare, Example 1
TInstantCustomExposer.OnCompare, Example 1



Imported



FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantCustomExposer.OnCompare\strike0\{link=ID_435>main\}\{keepn\} 
\par \pard\sb25\sa25\fs18 The following event handler will sort the TCustomer objects exposed by MyExposer by their Name property.
\par \pard\keep\f1 
\par procedure MyExposer.OnCompare(Object1, Object2: TObject; out Compare: Boolean);
\par begin
\par   Compare := AnsiCompareStr(TCustomer(Object1).Name, TCustomer(Object2).Name);
\par end;
\par 
\par }
5390
ID_436
TInstantCustomExposer.OnCreateObject
OnCreateObject;OnCreateObject,TInstantCustomExposer;TInstantCustomExposer,OnCreateObject



Imported
main

OnCreateObject;OnCreateObject_Event;TInstantCustomExposer_OnCreateObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 TInstantCustomExposer.OnCreateObject \b0\fs16 
\par \strike TInstantCustomExposer\strike0\{link=ID_407>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs every time a new object is created via the exposer.
\par \pard\sb25\sa25\b\f1 property\b0  OnCreateObject: \strike TInstantCreateObjectEvent\strike0\{linkID=12110>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 By default, an exposer creates an instance of \strike ObjectClass\strike0\{linkID=4890>main\} whenever a new row is inserted or appended to it. Write an OnCreateObject event handler to initialize the new object or to create an object of a more specialized class.
\par 
\par }
5400
ID_437
TInstantCustomExposer.OnFieldError
OnFieldError;OnFieldError,TInstantCustomExposer;TInstantCustomExposer,OnFieldError



Imported
main

OnFieldError;OnFieldError_Event;TInstantCustomExposer_OnFieldError
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.OnFieldError \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5410\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs whenever reading from or writing to a field results in an error.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnFieldError: \strike TInstantFieldErrorEvent\strike0\{linkID=12240>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnFieldError event handler to perform some operation on specific errors that occur during reading or writing of field values.
\par 
\par }
5410
ID_491





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.HandleFieldError\strike0\{linkID=5180>main\}
\par }
5420
ID_438
TInstantCustomExposer.OnIncludeField
OnIncludeField;OnIncludeField,TInstantCustomExposer;TInstantCustomExposer,OnIncludeField



Imported
main

OnIncludeField;OnIncludeField_Event;TInstantCustomExposer_OnIncludeField
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.OnIncludeField \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5430\}\tab\strike Example 1\strike0\{linkID=5440>example\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Occurs for every published property of the class specified by \strike ObjectClass\strike0\{linkID=4890>main\} or related classes to determine whether to create a corresponding field or not.
\par \pard\sb25\sa25\tx1435\tx2875\b\f1 property\b0  OnIncludeField: \strike TInstantIncludeFieldEvent\strike0\{linkID=12280>main\};
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 By default the fields generated to access properties of exposed objects are determined by \strike Options\strike0\{linkID=4970>main\}. Write an OnIncludeField event handler to explicitly include or exclude fields for specific properties.
\par 
\par }
5430
ID_493





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.IncludeField\strike0\{linkID=5190>main\}
\par }
5440
ID_494
TInstantCustomExposer.OnIncludeField, Example 1
TInstantCustomExposer.OnIncludeField, Example 1



Imported
example


FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantCustomExposer.OnIncludeField\strike0\{link=ID_438>main\}\{keepn\} 
\par \pard\sb25\sa25\fs18 The following code explicitly includes a field that would not have been included by default:
\par \pard\keep\f1 
\par procedure MyExposer.OnIncludeField(const FieldName: string; var Include: Boolean);
\par begin
\par   if SameText(FieldName, 'Address.Country.Name') then
\par     Include := True;
\par end;
\par 
\par }
5450
ID_439
TInstantCustomExposer.OnInitField
OnInitField;OnInitField,TInstantCustomExposer;TInstantCustomExposer,OnInitField



Imported
main

OnInitField;OnInitField_Event;TInstantCustomExposer_OnInitField
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 TInstantCustomExposer.OnInitField \b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5460\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs for every field generated by the exposer to initialize the field.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnInitField: \strike TInstantFieldEvent\strike0\{linkID=12250>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnInitField event handler to perform special initialization of fields.
\par 
\par }
5460
ID_496





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.InitField\strike0\{linkID=5210>main\}
\par }
5470
ID_440
TInstantCustomExposer.OnInitFieldDef
OnInitFieldDef;OnInitFieldDef,TInstantCustomExposer;TInstantCustomExposer,OnInitFieldDef



Imported
main

OnInitFieldDef;OnInitFieldDef_Event;TInstantCustomExposer_OnInitFieldDef
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.OnInitFieldDef \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5480\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs for every field definition generated by the exposer.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnInitFieldDef: \strike TInstantFieldDefEvent\strike0\{linkID=12230>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnInitFieldDef event handler to perform special initialization of field definitions created by the exposer.
\par 
\par }
5480
ID_498





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.InitFieldDef\strike0\{linkID=5220>main\}
\par }
5490
ID_441
TInstantCustomExposer.OnLimit
OnLimit;OnLimit,TInstantCustomExposer;TInstantCustomExposer,OnLimit



Imported
main

OnLimit;OnLimit_Event;TInstantCustomExposer_OnLimit
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.OnLimit \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\strike TInstantCustomExposer\strike0\{linkID=4680>main\}\tab\ul See Also\ulnone\{linkID=5500\}\tab\strike Example 1\strike0\{linkID=5510>example\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Occurs for each object in an exposed container to decide whether to include the object or not.
\par \pard\sb25\sa25\tx1435\tx2875\b\f1 property\b0  OnLimit: \strike TInstantLimitObjectsEvent\strike0\{linkID=12310>main\};
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Write an OnLimit event handler to specify what objects to include in the dataset. Set Include to True to include the object passed in AObject, set it to False to exclude the object.
\par 
\par }
5500
ID_500





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.Limited\strike0\{linkID=4860>main\}
\par \strike TInstantCustomExposer.Sorted\strike0\{linkID=4990>main\}
\par \strike TInstantCustomExposer.OnCompare\strike0\{linkID=5370>main\}
\par }
5510
ID_501
TInstantCustomExposer.OnLimit, Example 1
TInstantCustomExposer.OnLimit, Example 1



Imported
example


FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantCustomExposer.OnLimit\strike0\{link=ID_441>main\}\{keepn\} 
\par \pard\sb25\sa25\fs18 The following event handler will limit MyExposer to include only the customers in California.
\par \pard\keep\f1 
\par procedure MyExposer.OnLimit(AObject: TObject; var Include: Boolean);
\par begin
\par   Include := TCustomer(AObject).Address.State = 'CA';
\par end;
\par 
\par }
5520
ID_9
TInstantDateTime
TInstantDateTime



Imported
main

TInstantDateTime;TInstantDateTime_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 TInstantDateTime \b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=5530\}\tab\strike Members\strike0\{linkID=5600>nav\}\tab\strike Properties\strike0\{linkID=5550>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantDateTime represents a TDateTime value.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantDateTime = \b class\b0 (\strike TInstantSimple\strike0\{linkID=10280>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantDateTime holds a TDateTime as its value.
\par 
\par }
5530
ID_503





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10280>main\}
\par \tab |
\par \strike TInstantDateTime\strike0\{linkID=5520>main\}
\par 
\par }
5540
ID_506





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDateTime Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantDateTime\strike0\{linkID=5520>main\}
\par 
\par }
5550
ID_505





Imported



FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDateTime Properties \cf1\b0\fs16 
\par \strike TInstantDateTime\strike0\{linkID=5520>main\}\tab\ul Legend\ulnone\{link=ID_508\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantDateTime
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=5620>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
5560
ID_508





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
5570
ID_509





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantDateTime Events\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike TInstantDateTime\strike0\{linkID=5520>main\}
\par 
\par }
5580
ID_510





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDateTime Methods \cf1\b0\fs16 
\par \strike TInstantDateTime\strike0\{linkID=5520>main\}\tab\ul Legend\ulnone\{link=ID_511\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
5590
ID_511





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
5600
ID_504





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDateTime Members \cf1\b0\fs16 
\par \strike TInstantDateTime\strike0\{linkID=5520>main\}\tab\ul Legend\ulnone\{link=ID_512\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=5620>main\}
\par 
\par }
5610
ID_512





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
5620
ID_507
TInstantDateTime.Value
TInstantDateTime,Value;Value;Value,TInstantDateTime



Imported
main

TInstantDateTime_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDateTime.Value \cf1\b0\fs16 
\par \strike TInstantDateTime\strike0\{link=ID_9>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the DateTime attribute
\par \pard\sb25\sa25\b\f1 property\b0  Value: TDateTime;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the DateTime attribute.
\par 
\par }
5630
ID_513
TInstantDBISAMConnector
TInstantDBISAMConnector



Imported
main

TInstantDBISAMConnector;TInstantDBISAMConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBISAMConnector \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=5640\}\tab\strike Members\strike0\{linkID=5710>nav\}\tab\strike Properties\strike0\{linkID=5660>nav\}\tab\strike Methods\strike0\{linkID=5700>nav\}\tab\strike Unit: InstantDBISAM\strike0\{linkID=12700>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\strike\f1 TInstantConnectorClass\strike0\{linkID=12060>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \strike TInstantConnector\strike0\{linkID=3780>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
5640
ID_514





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3780>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9810>main\}
\par \tab |
\par \strike TInstantDBISAMConnector\strike0\{linkID=5630>main\}
\par 
\par }
5650
ID_519





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBISAMConnector Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantDBISAMConnector\strike0\{linkID=5630>main\}
\par 
\par }
5660
ID_516





Imported



FALSE
28
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBISAMConnector Properties \cf1\b0\fs16 
\par \strike TInstantDBISAMConnector\strike0\{linkID=5630>main\}\tab\ul Legend\ulnone\{link=ID_523\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantDBISAMConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Database\strike0\{linkID=5730>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Session\strike0\{linkID=5740>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike SessionName\strike0\{linkID=5760>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=9910>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3880>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3900>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3940>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3970>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3990>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4090>main\}
\par 
\par }
5670
ID_523





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
5680
ID_524





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBISAMConnector Events \cf1\b0\fs16 
\par \strike TInstantDBISAMConnector\strike0\{linkID=5630>main\}\tab\ul Legend\ulnone\{link=ID_525\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=9920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=9940>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4300>main\}
\par 
\par }
5690
ID_525





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
5700
ID_517





Imported



FALSE
22
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantDBISAMConnector Methods \cf1\b0\fs16 
\par \strike TInstantDBISAMConnector\strike0\{link=ID_513>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantDBISAMConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasDatabase\strike0\{linkID=5780>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasSession\strike0\{linkID=5790>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4170>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4280>main\}
\par 
\par }
5710
ID_515





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBISAMConnector Members \cf1\b0\fs16 
\par \strike TInstantDBISAMConnector\strike0\{linkID=5630>main\}\tab\ul Legend\ulnone\{link=ID_528\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Database\strike0\{linkID=5730>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Session\strike0\{linkID=5740>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike SessionName\strike0\{linkID=5760>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasDatabase\strike0\{linkID=5780>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasSession\strike0\{linkID=5790>main\}
\par 
\par }
5720
ID_528





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
5730
ID_520
TInstantDBISAMConnector.Database
Database;Database,TInstantDBISAMConnector;TInstantDBISAMConnector,Database



Imported
main

Database;Database_Property;TInstantDBISAMConnector_Database
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBISAMConnector.Database \cf1\b0\fs16 
\par \strike TInstantDBISAMConnector\strike0\{link=ID_513>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the database used by the connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Database: TDBISAMDatabase;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Database property to specify the database used by the connector component.
\par 
\par }
5740
ID_521
TInstantDBISAMConnector.Session
Session;Session,TInstantDBISAMConnector;TInstantDBISAMConnector,Session



Imported
main

Session;Session_Property;TInstantDBISAMConnector_Session
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBISAMConnector.Session \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantDBISAMConnector\strike0\{linkID=5630>main\}\tab\ul See Also\ulnone\{linkID=5750\}
\par \pard\sb25\sa85\tx1435\fs18 Accesses the session component used by the database.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Session: TDBISAMSession;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use the Session property to access the session component used by the associated database component.
\par 
\par }
5750
ID_529





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantDBISAMConnector.Database\strike0\{linkID=5730>main\}
\par }
5760
ID_522
TInstantDBISAMConnector.SessionName
SessionName;SessionName,TInstantDBISAMConnector;TInstantDBISAMConnector,SessionName



Imported
main

SessionName;SessionName_Property;TInstantDBISAMConnector_SessionName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBISAMConnector.SessionName \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantDBISAMConnector\strike0\{linkID=5630>main\}\tab\ul See Also\ulnone\{linkID=5770\}
\par \pard\sb25\sa85\tx1435\fs18 Determines the session name.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  SessionName: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use the SessionName property to determine the SessionName of the \strike Session\strike0\{linkID=5740>main\}. If no \strike Session\strike0\{linkID=5740>main\} is associated with the \strike Database\strike0\{linkID=5730>main\}, SessionName is blank.
\par 
\par }
5770
ID_530





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantDBISAMConnector.Session\strike0\{linkID=5740>main\}
\par }
5780
ID_526
TInstantDBISAMConnector.HasDatabase
HasDatabase;HasDatabase,TInstantDBISAMConnector;TInstantDBISAMConnector,HasDatabase



Imported
main

HasDatabase;HasDatabase_Method;TInstantDBISAMConnector_HasDatabase
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBISAMConnector.HasDatabase \cf1\b0\fs16 
\par \strike TInstantDBISAMConnector\strike0\{link=ID_513>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if a database is associated with the connector.
\par \pard\sb25\sa25\b\f1 function\b0  HasDatabase: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasDatabase to determine if the \strike Database\strike0\{linkID=5730>main\} property of the connector is assigned. If a database component has been associated with the connector, HasDatabase returns True. Otherwise HasDatabase returns False.
\par 
\par }
5790
ID_527
TInstantDBISAMConnector.HasSession
HasSession;HasSession,TInstantDBISAMConnector;TInstantDBISAMConnector,HasSession



Imported
main

HasSession;HasSession_Method;TInstantDBISAMConnector_HasSession
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBISAMConnector.HasSession \cf1\b0\fs16 
\par \strike TInstantDBISAMConnector\strike0\{link=ID_513>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if a session is associated with the connector.
\par \pard\sb25\sa25\b\f1 function\b0  HasSession: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasSession to determine if the \strike Session\strike0\{linkID=5740>main\} property of the connector is assigned. If a session component has been associated with the connector, HasSession returns True. Otherwise HasSession returns False.
\par 
\par }
5800
ID_531
TInstantDBXConnector
TInstantDBXConnector



Imported
main

TInstantDBXConnector;TInstantDBXConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBXConnector \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul Hierarchy\ulnone\{linkID=5810\}\tab\strike Unit: InstantDBX\strike0\{linkID=12720>main\}
\par \pard\sb25\sa85\tx1435\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\strike\f1 TInstantConnectorClass\strike0\{linkID=12060>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \strike TInstantConnector\strike0\{linkID=3780>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
5810
ID_532





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3780>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9810>main\}
\par \tab |
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3410>main\}
\par \tab |
\par \strike TInstantDBXConnector\strike0\{linkID=5800>main\}
\par 
\par }
5820
ID_534





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBXConnector Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantDBXConnector\strike0\{linkID=5800>main\}
\par 
\par }
5830
ID_535





Imported



FALSE
26
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBXConnector Properties \cf1\b0\fs16 
\par \strike TInstantDBXConnector\strike0\{linkID=5800>main\}\tab\ul Legend\ulnone\{link=ID_536\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Connection\strike0\{linkID=3510>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=9910>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3880>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3900>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3940>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3970>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3990>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4090>main\}
\par 
\par }
5840
ID_536





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
5850
ID_537





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBXConnector Events \cf1\b0\fs16 
\par \strike TInstantDBXConnector\strike0\{linkID=5800>main\}\tab\ul Legend\ulnone\{link=ID_538\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=9920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=9940>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4300>main\}
\par 
\par }
5860
ID_538





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
5870
ID_539





Imported



FALSE
21
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantDBXConnector Methods \cf1\b0\fs16 
\par \strike TInstantDBXConnector\strike0\{link=ID_531>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=3520>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4170>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4280>main\}
\par 
\par }
5880
ID_540





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBXConnector Members\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike TInstantDBXConnector\strike0\{linkID=5800>main\}\tab\ul Legend\ulnone\{linkID=5890\}
\par 
\par }
5890
ID_541





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
5900
ID_305
TInstantElement
TInstantElement



Imported
main

TInstantElement;TInstantElement_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement \cf1\b0\fs16\{keepn\} 
\par \pard\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=5910\}\tab\strike Members\strike0\{linkID=5980>nav\}\tab\strike Properties\strike0\{linkID=5930>nav\}\tab\strike Methods\strike0\{linkID=5960>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 TInstantElement is the ancestor of attribute classes that represent a relationship with a single object.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantElement = \b class\b0 (\strike TInstantComplex\strike0\{linkID=3200>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantElement is the ancestor of attribute classes that represent a relationship with a single object. TInstantElement introduces common properties and methods to:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Load and Save the object it represents from and to a stream.
\par \pard 
\par TInstantElement is abstract; so do not create instances of this class. Instead refer to the following concrete descendant classes: 
\par 
\par \pard\fi660\tx900\ul\b Element attribute classes\f2 ___________________________\ulnone\b0\f0 
\par TInstantPart
\par TInstantReference
\par \pard 
\par }
5910
ID_542





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3200>main\}
\par \tab |
\par \strike TInstantElement\strike0\{linkID=5900>main\}
\par 
\par }
5920
ID_546





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantElement Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantElement\strike0\{linkID=5900>main\}
\par 
\par }
5930
ID_544





Imported



FALSE
32
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantElement Properties \cf1\b0\fs16 
\par \strike TInstantElement\strike0\{linkID=5900>main\}\tab\ul Legend\ulnone\{link=ID_548\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantElement
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=6000>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3330>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3350>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
5940
ID_548





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
5950
ID_549





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantElement Events\cf1\b0\{keepn\}\cf2\fs16 
\par \strike TInstantElement\strike0\{linkID=5900>main\}
\par 
\par }
5960
ID_545





Imported



FALSE
29
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantElement Methods \cf1\b0\fs16 
\par \strike TInstantElement\strike0\{linkID=5900>main\}\tab\ul Legend\ulnone\{link=ID_555\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantElement
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=6010>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=6020>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=6030>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike LoadObjectFromStream\strike0\{linkID=6040>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike SaveObjectToStream\strike0\{linkID=6060>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3370>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3380>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3390>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
5970
ID_555





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
5980
ID_543





Imported



FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantElement Members \cf1\b0\fs16 
\par \strike TInstantElement\strike0\{linkID=5900>main\}\tab\ul Legend\ulnone\{link=ID_556\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=6000>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=6010>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=6020>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=6030>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike LoadObjectFromStream\strike0\{linkID=6040>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike SaveObjectToStream\strike0\{linkID=6060>main\}
\par 
\par }
5990
ID_556





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6000
ID_547
TInstantElement.Value
TInstantElement,Value;Value;Value,TInstantElement



Imported
main

TInstantElement_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement.Value \cf1\b0\fs16 
\par \strike TInstantElement\strike0\{link=ID_305>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the object that the attribute represents.
\par \pard\sb25\sa25\b\f1 property\b0  Value: \strike TInstantObject\strike0\{linkID=7240>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Value specifies the object that the attribute represents. The object is returned as a \strike TInstantObject\strike0\{linkID=7240>main\}. To access the object as its actual class type, Value should be cast to that type.
\par 
\par }
6010
ID_550
TInstantElement.AttachObject
AttachObject;AttachObject,TInstantElement;TInstantElement,AttachObject



Imported
main

AttachObject;AttachObject_Method;TInstantElement_AttachObject
FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement.AttachObject \cf1\b0\fs16 
\par \strike TInstantElement\strike0\{link=ID_305>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Attaches an object to the attribute.
\par \pard\sb25\sa25\b\f1 function\b0  AttachObject(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}): Boolean; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\b0 Attaches the object specified by the AObject argument to the attribute.
\par For the descendant classes of TInstantComplex this implies: 
\par 
\par \pard\tx2340\ul\b Class\tab Action\f2                                                                          \f0 
\par \ulnone\b0 TInstantElement\tab AObject is assigned as the attributes Value
\par TInstantContainer\tab AObject is added to the objects array
\par \pard 
\par If the object is succesfully attached, the function returns True. Otherwise the function returns False.
\par }
6020
ID_551
TInstantElement.DetachObject
DetachObject;DetachObject,TInstantElement;TInstantElement,DetachObject



Imported
main

DetachObject;DetachObject_Method;TInstantElement_DetachObject
FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement.DetachObject \cf1\b0\fs16 
\par \strike TInstantElement\strike0\{link=ID_305>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Detaches an object from the attribute.
\par \pard\sb25\sa25\b\f1 function\b0  DetachObject(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}): Boolean; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\b0 Detaches the object specified by the AObject argument from the attribute.
\par For the descendant classes of TInstantComplex this implies: 
\par 
\par \pard\tx2220\ul\b Class\tab Action\f2                                                                                                 \ulnone\b0\f0 
\par TInstantElement\tab if the attribute Value equals AObject, the Value is set to nil.
\par TInstantContainer\tab AObject is removed from the attributes array of objects.
\par \pard 
\par If the object is succesfully detached, the function returns True. Otherwise the function returns False.
\par }
6030
ID_552
TInstantElement.HasValue
HasValue;HasValue,TInstantElement;TInstantElement,HasValue



Imported
main

HasValue;HasValue_Method;TInstantElement_HasValue
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement.HasValue \cf1\b0\fs16 
\par \strike TInstantElement\strike0\{link=ID_305>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if the instance has been instantiated.
\par \pard\sb25\sa25\b\f1 function\b0  HasValue: Boolean; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasValue to determine if the instance associated with the element attribute has been instantiated. If the instance has been instantiated, HasValue returns True.
\par 
\par }
6040
ID_553
TInstantElement.LoadObjectFromStream
LoadObjectFromStream;LoadObjectFromStream,TInstantElement;TInstantElement,LoadObjectFromStream



Imported
main

LoadObjectFromStream;LoadObjectFromStream_Method;TInstantElement_LoadObjectFromStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement.LoadObjectFromStream \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantElement\strike0\{linkID=5900>main\}\tab\ul See Also\ulnone\{linkID=6050\}
\par \pard\sb25\sa85\tx1435\fs18 Loads an object from a stream into the attribute.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  LoadObjectFromStream(AStream: TStream); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call LoadObjectFromStream to load an object from a stream into the attribute. The stream that holds the object is passed as the Stream argument. If the object in the stream does not comply with the validation rules of the attribute, an exception is raised.
\par 
\par }
6050
ID_557





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantElement.SaveObjectToStream\strike0\{linkID=6060>main\}
\par }
6060
ID_554
TInstantElement.SaveObjectToStream
SaveObjectToStream;SaveObjectToStream,TInstantElement;TInstantElement,SaveObjectToStream



Imported
main

SaveObjectToStream;SaveObjectToStream_Method;TInstantElement_SaveObjectToStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement.SaveObjectToStream \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantElement\strike0\{linkID=5900>main\}\tab\ul See Also\ulnone\{linkID=6070\}
\par \pard\sb25\sa85\tx1435\fs18 Saves the object the attribute represents to a stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  SaveObjectToStream(AStream: TStream); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call SaveObjectToStream to save the object the attribute represents to a stream. The stream that the object should be saved to is passed as the Stream argument.
\par 
\par }
6070
ID_558





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantElement.LoadObjectFromStream\strike0\{linkID=6040>main\}
\par }
6080
ID_559
TInstantExplorer
TInstantExplorer



Imported
main

TInstantExplorer;TInstantExplorer_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=6090\}\tab\strike Members\strike0\{linkID=6150>nav\}\tab\strike Properties\strike0\{linkID=6110>nav\}\tab\strike Methods\strike0\{linkID=6140>nav\}\tab\strike Unit: InstantExplorer\strike0\{linkID=12740>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Allows navigation of objects within a tree.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantExplorer = \b class\b0 (TCustomControl)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 The Explorer contains a treeview by which the user can navigate objects and their relations.
\par 
\par }
6090
ID_560





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TCustomControl
\par \pard\li95\tx355\tab |
\par \strike TInstantExplorer\strike0\{linkID=6080>main\}
\par 
\par }
6100
ID_565





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExplorer Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantExplorer\strike0\{linkID=6080>main\}
\par 
\par }
6110
ID_562





Imported



FALSE
18
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExplorer Properties \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6080>main\}\tab\ul Legend\ulnone\{link=ID_577\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantExplorer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AutoAdjust\strike0\{linkID=6170>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Layout\strike0\{linkID=6180>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike NodeTypes\strike0\{linkID=6190>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnChangeNode\strike0\{linkID=6200>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateNode\strike0\{linkID=6210>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateNodeData\strike0\{linkID=6220>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetImageIndex\strike0\{linkID=6230>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetNodeText\strike0\{linkID=6240>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIncludeNode\strike0\{linkID=6250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RootObject\strike0\{linkID=6260>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ShowRoot\strike0\{linkID=6270>main\}
\par 
\par }
6120
ID_577





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
6130
ID_578





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantExplorer Events \b0\{keepn\}\cf1\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6080>main\}
\par 
\par }
6140
ID_563





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantExplorer Methods \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantExplorer
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=6280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Refresh\strike0\{linkID=6290>main\}
\par 
\par }
6150
ID_561





Imported



FALSE
21
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExplorer Members \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6080>main\}\tab\ul Legend\ulnone\{link=ID_581\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AutoAdjust\strike0\{linkID=6170>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Layout\strike0\{linkID=6180>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike NodeTypes\strike0\{linkID=6190>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnChangeNode\strike0\{linkID=6200>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateNode\strike0\{linkID=6210>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateNodeData\strike0\{linkID=6220>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetImageIndex\strike0\{linkID=6230>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetNodeText\strike0\{linkID=6240>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIncludeNode\strike0\{linkID=6250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RootObject\strike0\{linkID=6260>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ShowRoot\strike0\{linkID=6270>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=6280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Refresh\strike0\{linkID=6290>main\}
\par 
\par }
6160
ID_581





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
6170
ID_566
TInstantExplorer.AutoAdjust
AutoAdjust;AutoAdjust,TInstantExplorer;TInstantExplorer,AutoAdjust



Imported
main

AutoAdjust;AutoAdjust_Property;TInstantExplorer_AutoAdjust
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.AutoAdjust \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if the explorer is automatically adjusted.
\par \pard\sb25\sa25\b\f1 property\b0  AutoAdjust: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 When AutoAdjust is True the explorer automatically resizes the tree and the detail view to the same height or width when the explorer is resized.
\par 
\par }
6180
ID_567
TInstantExplorer.Layout
Layout;Layout,TInstantExplorer;TInstantExplorer,Layout



Imported
main

Layout;Layout_Property;TInstantExplorer_Layout
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.Layout \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the layout of the explorer.
\par \pard\sb25\sa25\b\f1 property\b0  Layout: \strike TInstantExplorerLayout\strike0\{linkID=12160>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Set Layout to specify whether to include a detail view and how the detail view should be displayed.
\par 
\par }
6190
ID_568
TInstantExplorer.NodeTypes
NodeTypes;NodeTypes,TInstantExplorer;TInstantExplorer,NodeTypes



Imported
main

NodeTypes;NodeTypes_Property;TInstantExplorer_NodeTypes
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.NodeTypes \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines which node types to include in the explorer.
\par \pard\sb25\sa25\b\f1 property\b0  NodeTypes: \strike TInstantExplorerNodeTypes\strike0\{linkID=12180>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Only the node types specified in NodeTypes will be included in the explorer. By default all node types are included.
\par 
\par }
6200
ID_569
TInstantExplorer.OnChangeNode
OnChangeNode;OnChangeNode,TInstantExplorer;TInstantExplorer,OnChangeNode



Imported
main

OnChangeNode;OnChangeNode_Property;TInstantExplorer_OnChangeNode
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.OnChangeNode \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the selected node changes.
\par \pard\sb25\sa25\b\f1 property\b0  OnChangeNode: TInstantExplorerNodeEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnChangeNode event handler to perform special operations when the selected node is changed.
\par 
\par }
6210
ID_570
TInstantExplorer.OnCreateNode
OnCreateNode;OnCreateNode,TInstantExplorer;TInstantExplorer,OnCreateNode



Imported
main

OnCreateNode;OnCreateNode_Property;TInstantExplorer_OnCreateNode
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.OnCreateNode \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the explorer creates a new node.
\par \pard\sb25\sa25\b\f1 property\b0  OnCreateNode: TInstantExplorerCreateNodeEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 When navigating through the explorer, nodes are created as required. Write an OnCreateNode event handler to control the creation of new nodes in the tree.
\par 
\par }
6220
ID_571
TInstantExplorer.OnCreateNodeData
OnCreateNodeData;OnCreateNodeData,TInstantExplorer;TInstantExplorer,OnCreateNodeData



Imported
main

OnCreateNodeData;OnCreateNodeData_Property;TInstantExplorer_OnCreateNodeData
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.OnCreateNodeData \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the explorer creates data for a node.
\par \pard\sb25\sa25\b\f1 property\b0  OnCreateNodeData: TInstantExplorerCreateNodeDataEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The data of a node describes the node and the object associated with the node. Write an OnCreateNodeData event handler to control the creation of node data.
\par 
\par }
6230
ID_572
TInstantExplorer.OnGetImageIndex
OnGetImageIndex;OnGetImageIndex,TInstantExplorer;TInstantExplorer,OnGetImageIndex



Imported
main

OnGetImageIndex;OnGetImageIndex_Property;TInstantExplorer_OnGetImageIndex
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.OnGetImageIndex \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when determining the image of a node.
\par \pard\sb25\sa25\b\f1 property\b0  OnGetImageIndex: TInstantExplorerNodeEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnGetImageIndex event handler to control what image to use for a given node.
\par 
\par }
6240
ID_573
TInstantExplorer.OnGetNodeText
OnGetNodeText;OnGetNodeText,TInstantExplorer;TInstantExplorer,OnGetNodeText



Imported
main

OnGetNodeText;OnGetNodeText_Property;TInstantExplorer_OnGetNodeText
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.OnGetNodeText \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when determining the text of a node.
\par \pard\sb25\sa25\b\f1 property\b0  OnGetNodeText: TInstantExplorerGetNodeTextEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnGetText event handler to control the text of a given node.
\par 
\par }
6250
ID_574
TInstantExplorer.OnIncludeNode
OnIncludeNode;OnIncludeNode,TInstantExplorer;TInstantExplorer,OnIncludeNode



Imported
main

OnIncludeNode;OnIncludeNode_Property;TInstantExplorer_OnIncludeNode
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.OnIncludeNode \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs for every node to determine whether to include the node or not.
\par \pard\sb25\sa25\b\f1 property\b0  OnIncludeNode: TInstantExplorerIncludeNodeEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnIncludeNode event handler to control what nodes to include in addition to the \strike NodeTypes\strike0\{linkID=6190>main\} property.
\par 
\par }
6260
ID_575
TInstantExplorer.RootObject
RootObject;RootObject,TInstantExplorer;TInstantExplorer,RootObject



Imported
main

RootObject;RootObject_Property;TInstantExplorer_RootObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.RootObject \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the object in the root of the explorer.
\par \pard\sb25\sa25\b\f1 property\b0  RootObject: TObject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Assign an object to this property to start exploring from the object.
\par 
\par }
6270
ID_576
TInstantExplorer.ShowRoot
ShowRoot;ShowRoot,TInstantExplorer;TInstantExplorer,ShowRoot



Imported
main

ShowRoot;ShowRoot_Property;TInstantExplorer_ShowRoot
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.ShowRoot \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if the root object is visible or not.
\par \pard\sb25\sa25\b\f1 property\b0  ShowRoot: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 If you do not want the root object to be represented by a node in the tree, set ShowRoot to False.
\par 
\par }
6280
ID_579
TInstantExplorer.Clear
Clear;Clear,TInstantExplorer;TInstantExplorer,Clear



Imported
main

Clear;Clear_Method;TInstantExplorer_Clear
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.Clear \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Clears the explorer.
\par \pard\sb25\sa25\b\f1 procedure\b0  Clear;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Clear to clear the content of the explorer.
\par 
\par }
6290
ID_580
TInstantExplorer.Refresh
Refresh;Refresh,TInstantExplorer;TInstantExplorer,Refresh



Imported
main

Refresh;Refresh_Method;TInstantExplorer_Refresh
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.Refresh \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{link=ID_559>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Refreshes the explorer.
\par \pard\sb25\sa25\b\f1 procedure\b0  Refresh;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Refresh to rebuild the nodes of the explorer from the root object.
\par 
\par }
6300
ID_416
TInstantExposer
TInstantExposer



Imported
main

TInstantExposer;TInstantExposer_Object
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=6310\}\tab\strike Members\strike0\{linkID=6390>nav\}\tab\strike Properties\strike0\{linkID=6330>nav\}\tab\strike Unit: InstantPresentation\strike0\{linkID=12870>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Provides dataset-based access to objects.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantExposer = \b class\b0 (\strike TInstantCustomExposer\strike0\{linkID=4680>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantExposer provides dataset-based access to objects. The exposed objects are represented as rows and their published properties are represented as columns. The object that is to be exposed is specified at runtime by the \strike Subject\strike0\{linkID=6500>main\} property. The exposer is capable of either exposing the published properties of the subject itself or, if the subject is a container, the published properties of the objects contained in the subject. The way, the subject is exposed is specified by the \strike Mode\strike0\{linkID=6450>main\} property. If the subject has multiple containers, as \strike TInstantObject\strike0\{linkID=7240>main\} instances may have, the name of the container is specified by the \strike ContainerName\strike0\{linkID=6410>main\} property.
\par Master-Detail relationships can be defined using the \strike MasterSource\strike0\{linkID=6430>main\}, \strike MasterProperty\strike0\{linkID=6420>main\} and \strike ContainerName\strike0\{linkID=6410>main\} properties.
\par 
\par }
6310
ID_584





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TDataSet
\par \pard\li95\tx355\tab |
\par \strike TInstantCustomExposer\strike0\{linkID=4680>main\}
\par \tab |
\par \strike TInstantExposer\strike0\{linkID=6300>main\}
\par 
\par }
6320
ID_592





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExposer Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantExposer\strike0\{linkID=6300>main\}
\par 
\par }
6330
ID_586





Imported



FALSE
32
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExposer Properties \cf1\b0\fs16 
\par \strike TInstantExposer\strike0\{linkID=6300>main\}\tab\ul Legend\ulnone\{link=ID_595\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ContainerName\strike0\{linkID=6410>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike MasterProperty\strike0\{linkID=6420>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike MasterSource\strike0\{linkID=6430>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Mode\strike0\{linkID=6450>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ObjectClass\strike0\{linkID=6460>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ObjectClassName\strike0\{linkID=6480>main\}
\par \{bmct bm0.BMP\}\{bmct bm7.BMP\} \strike Subject\strike0\{linkID=6500>main\}
\par \pard\sb55\sa55\tx355\b TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Accessor\strike0\{linkID=4790>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ContainerName\strike0\{linkID=4800>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike CurrentObject\strike0\{linkID=4810>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike FieldOptions\strike0\{linkID=4820>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike HasSubject\strike0\{linkID=4840>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsChanged\strike0\{linkID=4850>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Limited\strike0\{linkID=4860>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Mode\strike0\{linkID=4880>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClass\strike0\{linkID=4890>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClassName\strike0\{linkID=4910>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4950>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Options\strike0\{linkID=4970>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ReadOnly\strike0\{linkID=4980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Sorted\strike0\{linkID=4990>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Subject\strike0\{linkID=5010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike TotalCount\strike0\{linkID=5020>main\}
\par 
\par }
6340
ID_595





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par \{bmct bm7.BMP\} write only
\par 
\par }
6350
ID_596





Imported



FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExposer Events \cf1\b0\fs16 
\par \strike TInstantExposer\strike0\{linkID=6300>main\}\tab\ul Legend\ulnone\{link=ID_597\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCompare\strike0\{linkID=5370>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateObject\strike0\{linkID=5390>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnFieldError\strike0\{linkID=5400>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIncludeField\strike0\{linkID=5420>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitField\strike0\{linkID=5450>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitFieldDef\strike0\{linkID=5470>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnLimit\strike0\{linkID=5490>main\}
\par 
\par }
6360
ID_597





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
6370
ID_598





Imported



FALSE
33
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExposer Methods \cf1\b0\fs16 
\par \strike TInstantExposer\strike0\{linkID=6300>main\}\tab\ul Legend\ulnone\{link=ID_599\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddObject\strike0\{linkID=5040>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ApplyChanges\strike0\{linkID=5050>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AssignFieldValue\strike0\{linkID=5060>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ChangesDisabled\strike0\{linkID=5070>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=5090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DeleteObject\strike0\{linkID=5100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DisableChanges\strike0\{linkID=5120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnableChanges\strike0\{linkID=5140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetFieldStrings\strike0\{linkID=5160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GotoObject\strike0\{linkID=5170>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike HandleFieldError\strike0\{linkID=5180>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike IncludeField\strike0\{linkID=5190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOfObject\strike0\{linkID=5200>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitField\strike0\{linkID=5210>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitFieldDef\strike0\{linkID=5220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike InsertObject\strike0\{linkID=5230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFields\strike0\{linkID=5240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike PostChanges\strike0\{linkID=5250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshCurrentObject\strike0\{linkID=5260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshData\strike0\{linkID=5270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReleaseObject\strike0\{linkID=5280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remember\strike0\{linkID=5290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RemoveObject\strike0\{linkID=5310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Reset\strike0\{linkID=5330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Revert\strike0\{linkID=5340>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Undo\strike0\{linkID=5360>main\}
\par 
\par }
6380
ID_599





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
6390
ID_585





Imported



FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExposer Members \cf1\b0\fs16 
\par \strike TInstantExposer\strike0\{linkID=6300>main\}\tab\ul Legend\ulnone\{link=ID_600\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ContainerName\strike0\{linkID=6410>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike MasterProperty\strike0\{linkID=6420>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike MasterSource\strike0\{linkID=6430>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Mode\strike0\{linkID=6450>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ObjectClass\strike0\{linkID=6460>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ObjectClassName\strike0\{linkID=6480>main\}
\par \{bmct bm0.BMP\}\{bmct bm7.BMP\} \strike Subject\strike0\{linkID=6500>main\}
\par 
\par }
6400
ID_600





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par \{bmct bm7.BMP\} write only
\par 
\par }
6410
ID_589
TInstantExposer.ContainerName
ContainerName;ContainerName,TInstantExposer;TInstantExposer,ContainerName



Imported
main

ContainerName;ContainerName_Property;TInstantExposer_ContainerName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.ContainerName \cf1\b0\fs16 
\par \strike TInstantExposer\strike0\{link=ID_416>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the name of the container whose objects are to be exposed.
\par \pard\sb25\sa25\b\f1 property\b0  ContainerName;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use ContainerName to specify the name of the container in the subject which contains the objects that are to be exposed. If the Mode of the exposer is not amContent, ContainerName has no effect.
\par 
\par }
6420
ID_591
TInstantExposer.MasterProperty
MasterProperty;MasterProperty,TInstantExposer;TInstantExposer,MasterProperty



Imported
main

MasterProperty;MasterProperty_Property;TInstantExposer_MasterProperty
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.MasterProperty \cf1\b0\fs16 
\par \strike TInstantExposer\strike0\{link=ID_416>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the master property for a detail exposer in a master-detail relationship.
\par \pard\sb25\sa25\b\f1 property\b0  MasterProperty: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use MasterProperty to specify the master property for a detail exposer in a master-detail relationship. The MasterProperty specifies the property of the master exposers CurrentObject that should serve as \strike Subject\strike0\{linkID=6500>main\} for detail exposer. If no masterproperty is specified, the \strike Subject\strike0\{linkID=6500>main\} of the detail exposer will be the CurrentObject of the master exposer.
\par MasterProperty is only used if a \strike MasterSource\strike0\{linkID=6430>main\} is specified.
\par 
\par }
6430
ID_590
TInstantExposer.MasterSource
MasterSource;MasterSource,TInstantExposer;TInstantExposer,MasterSource



Imported
main

MasterSource;MasterSource_Property;TInstantExposer_MasterSource
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.MasterSource \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantExposer\strike0\{linkID=6300>main\}\tab\ul See Also\ulnone\{linkID=6440\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the name of the master data source to use for establishing a master-detail relationship.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  MasterSource: TDataSource;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 MasterSource specifies the name of the data source component whose DataSet property identifies the exposer used as the Master exposer. An exposer that defines a MasterSource becomes a detail exposer. The detail exposer exposes the details of the CurrentObject of the master exposer.
\par 
\par }
6440
ID_601





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantExposer.MasterProperty\strike0\{linkID=6420>main\}
\par \strike TInstantExposer.ContainerName\strike0\{linkID=6410>main\}
\par }
6450
ID_588
TInstantExposer.Mode
Mode;Mode,TInstantExposer;TInstantExposer,Mode



Imported


Mode;Mode_Property;TInstantExposer_Mode
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.Mode \cf1\b0\fs16 
\par \strike TInstantExposer\strike0\{link=ID_416>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies how the attached subject is being exposed.
\par \pard\sb25\sa25\b\f1 property\b0  Mode;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 An exposer can operate in one of two possible modes; object or content. The access mode specified in the Mode property determines the current mode of the exposer. When in object mode, the properties of the attached subject are available via dataset fields in the exposer. In content mode, the properties of objects contained in the subject are available instead. Content mode requires that the attached subject is either itself a container or that it has one or more containers that are accessible via a suitable accessor. In object mode, the exposer will have a fixed row count of one. In content mode, the number of rows will equal the number of objects in the specified container. Adding and deleting rows in content mode will result in objects being created and destroyed. Rows cannot be added nor deleted in object mode.
\par 
\par }
6460
ID_593
TInstantExposer.ObjectClass
ObjectClass;ObjectClass,TInstantExposer;TInstantExposer,ObjectClass



Imported
main

ObjectClass;ObjectClass_Property;TInstantExposer_ObjectClass
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.ObjectClass \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantExposer\strike0\{linkID=6300>main\}\tab\ul See Also\ulnone\{linkID=6470\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class of objects being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The exposer uses dataset fields to access properties of exposed objects. ObjectClass specifies the common base class of the objects being exposed. By default, the accessor created by the exposer to access the subject will determine the class from the attached subject. TInstantCustomExposer therefore introduces the ObjectClass property as read-only, but descendants may reintroduce this property as writeable, allowing you to override the class determined by the accessor. TInstantExposer is an example hereof.
\par 
\par }
6470
ID_602





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantExposer.ObjectClassName\strike0\{linkID=6480>main\}
\par }
6480
ID_594
TInstantExposer.ObjectClassName
ObjectClassName;ObjectClassName,TInstantExposer;TInstantExposer,ObjectClassName



Imported
main

ObjectClassName;ObjectClassName_Property;TInstantExposer_ObjectClassName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.ObjectClassName \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantExposer\strike0\{linkID=6300>main\}\tab\ul See Also\ulnone\{linkID=6490\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class name of objects being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClassName;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ObjectClassName specifies the name of the common class of the objects being exposed.
\par 
\par }
6490
ID_603





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantExposer.ObjectClass\strike0\{linkID=6460>main\}
\par }
6500
ID_587
TInstantExposer.Subject
Subject;Subject,TInstantExposer;TInstantExposer,Subject



Imported
main

Subject;Subject_Property;TInstantExposer_Subject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.Subject \cf1\b0\fs16 
\par \strike TInstantExposer\strike0\{link=ID_416>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the object that is being exposed.
\par \pard\sb25\sa25\b\f1 property\b0  Subject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Subject is the main object of the object(s) being exposed. The class of the subject is used to find a suitable accessor with which the exposer can access the subject or objects contained within it. Whether the subject itself or objects contained within it are exposed, is determined by the current Mode of the exposer.
\par 
\par }
6510
ID_604
TInstantFileStream
TInstantFileStream



Imported
main

TInstantFileStream;TInstantFileStream_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFileStream \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=6520\}\tab\strike Members\strike0\{linkID=6570>nav\}\tab\strike Methods\strike0\{linkID=6560>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Provides stream-based access to data stored in a file.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantFileStream = \b class\b0 (\strike TInstantStream\strike0\{linkID=10390>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Use TInstantFileStream to access data in disk files. Like all \strike TInstantStream\strike0\{linkID=10390>main\} objects, TInstantFileStream uses a source stream that handles the streaming. The Source stream of TInstantFileStream is a TFileStream object.
\par 
\par }
6520
ID_605





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TStream
\par \pard\li95\tx355\tab |
\par \strike TInstantStream\strike0\{linkID=10390>main\}
\par \tab |
\par \strike TInstantFileStream\strike0\{linkID=6510>main\}
\par 
\par }
6530
ID_609





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFileStream Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantFileStream\strike0\{linkID=6510>main\}
\par 
\par }
6540
ID_612





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantFileStream Properties \cf1\b0\fs16 
\par \strike TInstantFileStream\strike0\{link=ID_604>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FreeSource\strike0\{linkID=10460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Source\strike0\{linkID=10470>main\}
\par 
\par }
6550
ID_614





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantFileStream Events \cf1\b0\fs16 
\par \strike TInstantFileStream\strike0\{link=ID_604>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnProcessObject\strike0\{linkID=10670>main\}
\par 
\par }
6560
ID_607





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantFileStream Methods \cf1\b0\fs16 
\par \strike TInstantFileStream\strike0\{link=ID_604>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantFileStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=6580>main\}
\par \pard\sb55\sa55\b TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AlignStream\strike0\{linkID=10490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObject\strike0\{linkID=10510>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObjectRes\strike0\{linkID=10530>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResHeader\strike0\{linkID=10550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResourceFileHeader\strike0\{linkID=10570>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObject\strike0\{linkID=10590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObjectRes\strike0\{linkID=10610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceFileHeader\strike0\{linkID=10630>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceHeader\strike0\{linkID=10650>main\}
\par 
\par }
6570
ID_606





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantFileStream Members \cf1\b0\fs16 
\par \strike TInstantFileStream\strike0\{link=ID_604>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=6580>main\}
\par 
\par }
6580
ID_615
TInstantFileStream.Create
Create;Create,TInstantFileStream;TInstantFileStream,Create



Imported
main

Create;Create_Method;TInstantFileStream_Create
FALSE
31
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFileStream.Create \cf1\b0\fs16 
\par \strike TInstantFileStream\strike0\{link=ID_604>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Creates an instance of \strike TInstantFileStream\strike0\{linkID=6510>main\}.
\par \pard\sb25\sa25\b\f1 constructor\b0  Create(\b const\b0  FileName: \b string\b0 ; Mode: Word);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Create to create a \strike TInstantFileStream\strike0\{linkID=6510>main\} object. The FileName argument specifies the name of the file. The Mode argument specifies how the file should be opened. If the file cannot be opened, Create raises an exception.
\par \pard\f2 The Mode parameter consists of an open mode and a share mode or'ed together.
\par 
\par The open mode must be one of the following values: 
\par 
\par \pard\tx2000\ul\b Value\tab Meaning                                                                                                       \ulnone\b0 
\par fmCreate\tab Create a file with the given name. 
\par \tab If a file with the given name exists, open the file in write mode.
\par fmOpenRead\tab Open the file for reading only.
\par fmOpenWrite\tab Open the file for writing only. Writing to the file completely replaces 
\par \tab the current content.
\par fmOpenReadWrite\tab Open the file to modify the current content rather than replace it.
\par \pard 
\par The share mode must be one of the following values: 
\par 
\par \pard\tx2040\ul\b Value\tab Meaning                              \ulnone\b0 
\par fmShareCompat\tab Sharing is compatible with the way FCBs are opened.
\par fmShareExclusive\tab Other applications cannot open the file for any reason.
\par fmShareDenyWrite\tab Other applications can open the file for reading but not for writing.
\par fmShareDenyRead\tab Other applications can open the file for writing but not for reading.
\par fmShareDenyNone\tab No attempt is made to prevent other applications from 
\par \tab reading from or writing to the file.\f0 
\par \pard 
\par }
6590
ID_626
TInstantFlashFilerConnector
TInstantFlashFilerConnector



Imported
main

TInstantFlashFilerConnector;TInstantFlashFilerConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFlashFilerConnector \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul Hierarchy\ulnone\{linkID=6600\}\tab\strike Unit: InstantFlashFiler\strike0\{linkID=12780>main\}
\par \pard\sb25\sa85\tx1435\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\strike\f1 TInstantConnectorClass\strike0\{linkID=12060>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \strike TInstantConnector\strike0\{linkID=3780>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
6600
ID_627





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3780>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9810>main\}
\par \tab |
\par \strike TInstantFlashFilerConnector\strike0\{linkID=6590>main\}
\par 
\par }
6610
ID_629





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFlashFilerConnector Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantFlashFilerConnector\strike0\{linkID=6590>main\}
\par 
\par }
6620
ID_630





Imported



FALSE
24
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFlashFilerConnector Properties \cf1\b0\fs16 
\par \strike TInstantFlashFilerConnector\strike0\{linkID=6590>main\}\tab\ul Legend\ulnone\{link=ID_631\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=9910>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3880>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3900>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3940>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3970>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3990>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4090>main\}
\par 
\par }
6630
ID_631





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6640
ID_632





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFlashFilerConnector Events \cf1\b0\fs16 
\par \strike TInstantFlashFilerConnector\strike0\{linkID=6590>main\}\tab\ul Legend\ulnone\{link=ID_633\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=9920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=9940>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4300>main\}
\par 
\par }
6650
ID_633





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
6660
ID_634





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantFlashFilerConnector Methods \cf1\b0\fs16 
\par \strike TInstantFlashFilerConnector\strike0\{link=ID_626>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4170>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4280>main\}
\par 
\par }
6670
ID_635





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFlashFilerConnector Members \b0\{keepn\}\cf1\fs16 
\par \strike TInstantFlashFilerConnector\strike0\{linkID=6590>main\}\tab\ul Legend\ulnone\{linkID=6680\}
\par 
\par }
6680
ID_636





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6690
ID_173
TInstantFloat
TInstantFloat



Imported
main

TInstantFloat;TInstantFloat_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFloat \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=6710\}\tab\strike Members\strike0\{linkID=6780>nav\}\tab\strike Properties\strike0\{linkID=6730>nav\}\tab\ul See Also\ulnone\{linkID=6700\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 TInstantFloat represents a Double value.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantFloat = \b class\b0 (\strike TInstantNumeric\strike0\{linkID=7140>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantFloat holds a Double as its value.
\par 
\par }
6700
ID_640





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantInteger\strike0\{linkID=6920>main\}
\par }
6710
ID_637





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10280>main\}
\par \tab |
\par \strike TInstantNumeric\strike0\{linkID=7140>main\}
\par \tab |
\par \strike TInstantFloat\strike0\{linkID=6690>main\}
\par 
\par }
6720
ID_642





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFloat Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantFloat\strike0\{linkID=6690>main\}
\par 
\par }
6730
ID_639





Imported



FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFloat Properties \cf1\b0\fs16 
\par \strike TInstantFloat\strike0\{linkID=6690>main\}\tab\ul Legend\ulnone\{link=ID_644\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantFloat
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=6800>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
6740
ID_644





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6750
ID_645





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantFloat Events \b0\{keepn\}\cf1\fs16 
\par \strike TInstantFloat\strike0\{linkID=6690>main\}
\par 
\par }
6760
ID_646





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFloat Methods \cf1\b0\fs16 
\par \strike TInstantFloat\strike0\{linkID=6690>main\}\tab\ul Legend\ulnone\{link=ID_647\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
6770
ID_647





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
6780
ID_638





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFloat Members \cf1\b0\fs16 
\par \strike TInstantFloat\strike0\{linkID=6690>main\}\tab\ul Legend\ulnone\{link=ID_648\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=6800>main\}
\par 
\par }
6790
ID_648





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6800
ID_643
TInstantFloat.Value
TInstantFloat,Value;Value;Value,TInstantFloat



Imported
main

TInstantFloat_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFloat.Value \cf1\b0\fs16 
\par \strike TInstantFloat\strike0\{link=ID_173>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the Float attribute
\par \pard\sb25\sa25\b\f1 property\b0  Value: Double;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the Float attribute.
\par 
\par }
6810
ID_649
TInstantIBXConnector
TInstantIBXConnector



Imported
main

TInstantIBXConnector;TInstantIBXConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantIBXConnector \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=6820\}\tab\strike Members\strike0\{linkID=6890>nav\}\tab\strike Properties\strike0\{linkID=6840>nav\}\tab\strike Unit: InstantIBX\strike0\{linkID=12800>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\strike\f1 TInstantConnectorClass\strike0\{linkID=12060>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \strike TInstantConnector\strike0\{linkID=3780>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
6820
ID_650





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3780>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9810>main\}
\par \tab |
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3410>main\}
\par \tab |
\par \strike TInstantIBXConnector\strike0\{linkID=6810>main\}
\par 
\par }
6830
ID_654





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantIBXConnector Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantIBXConnector\strike0\{linkID=6810>main\}
\par 
\par }
6840
ID_652





Imported



FALSE
28
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantIBXConnector Properties \cf1\b0\fs16 
\par \strike TInstantIBXConnector\strike0\{linkID=6810>main\}\tab\ul Legend\ulnone\{link=ID_656\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantIBXConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=6910>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Connection\strike0\{linkID=3510>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=9910>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3880>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3900>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3940>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3970>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3990>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4090>main\}
\par 
\par }
6850
ID_656





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6860
ID_657





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantIBXConnector Events \cf1\b0\fs16 
\par \strike TInstantIBXConnector\strike0\{linkID=6810>main\}\tab\ul Legend\ulnone\{link=ID_658\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=9920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=9940>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4300>main\}
\par 
\par }
6870
ID_658





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
6880
ID_659





Imported



FALSE
21
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantIBXConnector Methods \cf1\b0\fs16 
\par \strike TInstantIBXConnector\strike0\{link=ID_649>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=3520>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4170>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4280>main\}
\par 
\par }
6890
ID_651





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantIBXConnector Members \cf1\b0\fs16 
\par \strike TInstantIBXConnector\strike0\{linkID=6810>main\}\tab\ul Legend\ulnone\{link=ID_660\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=6910>main\}
\par 
\par }
6900
ID_660





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6910
ID_655
TInstantIBXConnector.Connection
Connection;Connection,TInstantIBXConnector;TInstantIBXConnector,Connection



Imported
main

Connection;Connection_Property;TInstantIBXConnector_Connection
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantIBXConnector.Connection \cf1\b0\fs16 
\par \strike TInstantIBXConnector\strike0\{link=ID_649>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the connection used by the connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Connection: TIBDatabase;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Connection property to specify the connection used by the connector component.
\par 
\par }
6920
ID_171
TInstantInteger
TInstantInteger



Imported
main

TInstantInteger;TInstantInteger_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantInteger \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=6940\}\tab\strike Members\strike0\{linkID=7010>nav\}\tab\strike Properties\strike0\{linkID=6960>nav\}\tab\ul See Also\ulnone\{linkID=6930\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 TInstantInteger represents a 32-bit Integer value.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantInteger = \b class\b0 (\strike TInstantNumeric\strike0\{linkID=7140>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantInteger holds a 32-bit Integer as its value.
\par 
\par }
6930
ID_664





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantFloat\strike0\{linkID=6690>main\}
\par }
6940
ID_661





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10280>main\}
\par \tab |
\par \strike TInstantNumeric\strike0\{linkID=7140>main\}
\par \tab |
\par \strike TInstantInteger\strike0\{linkID=6920>main\}
\par 
\par }
6950
ID_665





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantInteger Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantInteger\strike0\{linkID=6920>main\}
\par 
\par }
6960
ID_663





Imported



FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantInteger Properties \cf1\b0\fs16 
\par \strike TInstantInteger\strike0\{linkID=6920>main\}\tab\ul Legend\ulnone\{link=ID_667\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantInteger
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=7030>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
6970
ID_667





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6980
ID_668





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantInteger Events\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike TInstantInteger\strike0\{linkID=6920>main\}
\par 
\par }
6990
ID_669





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantInteger Methods \cf1\b0\fs16 
\par \strike TInstantInteger\strike0\{linkID=6920>main\}\tab\ul Legend\ulnone\{link=ID_670\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
7000
ID_670





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
7010
ID_662





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantInteger Members \cf1\b0\fs16 
\par \strike TInstantInteger\strike0\{linkID=6920>main\}\tab\ul Legend\ulnone\{link=ID_671\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=7030>main\}
\par 
\par }
7020
ID_671





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
7030
ID_666
TInstantInteger.Value
TInstantInteger,Value;Value;Value,TInstantInteger



Imported
main

TInstantInteger_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantInteger.Value \cf1\b0\fs16 
\par \strike TInstantInteger\strike0\{link=ID_171>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the Integer attribute
\par \pard\sb25\sa25\b\f1 property\b0  Value: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the Integer attribute.
\par 
\par }
7040
ID_180
TInstantMemo
TInstantMemo



Imported
main

TInstantMemo;TInstantMemo_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantMemo \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul Hierarchy\ulnone\{linkID=7050\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 TInstantMemo represents a memo.
\par \pard\sb25\sa25\tx1435\f1 TInstantMemo = \b class\b0 (\strike TInstantBlob\strike0\{linkID=2690>main\})
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantMemo holds a memo as its value. A memo is special binary large object (Blob) that contain multi-line text data.
\par 
\par }
7050
ID_672





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10280>main\}
\par \tab |
\par \strike TInstantBlob\strike0\{linkID=2690>main\}
\par \tab |
\par \strike TInstantMemo\strike0\{linkID=7040>main\}
\par 
\par }
7060
ID_673





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantMemo Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantMemo\strike0\{linkID=7040>main\}
\par 
\par }
7070
ID_674





Imported



FALSE
28
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantMemo Properties \cf1\b0\fs16 
\par \strike TInstantMemo\strike0\{linkID=7040>main\}\tab\ul Legend\ulnone\{link=ID_675\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantBlob
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Size\strike0\{linkID=2800>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=2810>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
7080
ID_675





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
7090
ID_676





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantMemo Events\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike TInstantMemo\strike0\{linkID=7040>main\}
\par 
\par }
7100
ID_677





Imported



FALSE
25
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantMemo Methods \cf1\b0\fs16 
\par \strike TInstantMemo\strike0\{linkID=7040>main\}\tab\ul Legend\ulnone\{link=ID_678\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantBlob
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=2820>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadDataFromStream\strike0\{linkID=2830>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadBuffer\strike0\{linkID=2840>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveDataToStream\strike0\{linkID=2850>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteBuffer\strike0\{linkID=2860>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
7110
ID_678





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
7120
ID_679





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantMemo Members\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike TInstantMemo\strike0\{linkID=7040>main\}\tab\ul Legend\ulnone\{linkID=7130\}
\par 
\par }
7130
ID_680





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
7140
ID_641
TInstantNumeric
TInstantNumeric



Imported
main

TInstantNumeric;TInstantNumeric_Object
FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantNumeric \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul Hierarchy\ulnone\{linkID=7150\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 TInstantNumeric is the ancestor of attribute classes that represent a numeric value.
\par \pard\sb25\sa25\tx1435\f1 TInstantNumeric = \b class\b0 (\strike TInstantSimple\strike0\{linkID=10280>main\})
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantNumeric is the ancestor of attribute classes that represent a numeric value.
\par \trowd\trleft-1\trqc\cellx1439\pard\intbl\strike TInstantElement\strike0\{linkID=5900>main\} is abstract; so do not create instances of this class. Instead refer to the following concrete descendant classes: \b Numeric attribute classes\cell\row
\trowd\trleft-1\trqc\cellx1439\pard\intbl\b0\strike TInstantInteger\strike0\{linkID=6920>main\}\cell\row
\strike\trowd\trleft-1\trqc\cellx1439\intbl TInstantFloat\strike0\{linkID=6690>main\}\cell\row
\pard 
\par 
\par }
7150
ID_681





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10280>main\}
\par \tab |
\par \strike TInstantNumeric\strike0\{linkID=7140>main\}
\par 
\par }
7160
ID_682





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantNumeric Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantNumeric\strike0\{linkID=7140>main\}
\par 
\par }
7170
ID_683





Imported



FALSE
25
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantNumeric Properties \cf1\b0\fs16 
\par \strike TInstantNumeric\strike0\{linkID=7140>main\}\tab\ul Legend\ulnone\{link=ID_684\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
7180
ID_684





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
7190
ID_685





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantNumeric Events\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike TInstantNumeric\strike0\{linkID=7140>main\}
\par 
\par }
7200
ID_686





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantNumeric Methods \cf1\b0\fs16 
\par \strike TInstantNumeric\strike0\{linkID=7140>main\}\tab\ul Legend\ulnone\{link=ID_687\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
7210
ID_687





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
7220
ID_688





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantNumeric Members\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike TInstantNumeric\strike0\{linkID=7140>main\}\tab\ul Legend\ulnone\{linkID=7230\}
\par 
\par }
7230
ID_689





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
7240
ID_170
TInstantObject
TInstantObject



Imported
main

TInstantObject;TInstantObject_Object
FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\tx5755\tx7195\tx8635\ul Hierarchy\ulnone\{linkID=7270\}\tab\strike Members\strike0\{linkID=7340>nav\}\tab\strike Properties\strike0\{linkID=7290>nav\}\tab\strike Methods\strike0\{linkID=7320>nav\}\tab\strike Events\strike0\{linkID=7310>nav\}\tab\ul See Also\ulnone\{linkID=7250\}\tab\strike Example 1\strike0\{linkID=7260>example\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\tx7195\tx8635\fs18 The ancestor for classes with persistence capabilities.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\tx8635\f1 TInstantObject = \b class\b0 (\strike TInstantStreamable\strike0\{linkID=10680>main\}, IUnknown)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\tx8635\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\tx8635\b0 TInstantObject implements the methods required to manage persistent objects. It is the fundamental ancestor of classes that have the ability to store, retrieve and dispose their instances to and from a database.
\par To enable persistence capabilities for a class, the only requirement is that it ultimately descends from TInstantObject and that class and attribute metadata is specified as part of the class declaration. Furthermore attribute fields need to be declared for the attributes of the class. Attribute fields contain instances of \strike TInstantAttribute\strike0\{linkID=2180>main\} descendants. The attribute objects are created and destroyed automatically.
\par Instances of classes descending from TInstantObject exist only once in memory. This means that if an object has been retrieved from the database, any subsequent requests for the same object will be given a reference to the instance already in memory. Instances will not be removed from memory until the last dependent reference is destroyed.
\par 
\par }
7250
ID_695





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \strike TInstantExposer\strike0\{linkID=6300>main\}
\par }
7260
ID_696
TInstantObject, Example 1
TInstantObject, Example 1



Imported
example


FALSE
36
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\keep\f1\fs18 TPerson = class(TInstantObject)
\par \{\- stored                                   
\par   DateOfBirth: DateTime default 'Now';     
\par   FirstName: String(20);                   
\par   Gender: Integer;                         
\par   LastName: String(20);                    
\par   MiddleName: String(50); \}                
\par   _DateOfBirth: \strike TInstantDateTime\strike0\{linkID=5520>main\};          
\par   _FirstName: \strike TInstantString\strike0\{linkID=10850>main\};              
\par   _Gender: \strike TInstantInteger\strike0\{linkID=6920>main\};                
\par   _LastName: \strike TInstantString\strike0\{linkID=10850>main\};               
\par   _MiddleName: \strike TInstantString\strike0\{linkID=10850>main\};             
\par private
\par   function GetDateOfBirth: TDate;
\par   function GetFirstName: string;
\par   function GetGender: TGender;
\par   function GetLastName: string;
\par   function GetMiddleName: string;
\par   procedure SetDateOfBirth(const Value: TDate);
\par   procedure SetFirstName(const Value: string);
\par   procedure SetGender(const Value: TGender);
\par   procedure SetLastName(const Value: string);
\par   procedure SetMiddleName(const Value: string);
\par published
\par   property DateOfBirth: TDate read GetDateOfBirth write SetDateOfBirth;
\par   property FirstName: string read GetFirstName write SetFirstName;
\par   property Gender: TGender read GetGender write SetGender;
\par   property LastName: string read GetLastName write SetLastName;
\par   property MiddleName: string read GetMiddleName write SetMiddleName;
\par end;
\par 
\par }
7270
ID_690





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantObject\strike0\{linkID=7240>main\}
\par 
\par }
7280
ID_697





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantObject Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantObject\strike0\{linkID=7240>main\}
\par 
\par }
7290
ID_692





Imported



FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantObject Properties \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul Legend\ulnone\{link=ID_718\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantObject
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Caption\strike0\{linkID=7360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=7380>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike DefaultContainer\strike0\{linkID=7390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike HasDefaultContainer\strike0\{linkID=7410>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Id\strike0\{linkID=7420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsAbandoned\strike0\{linkID=7440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=7450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=7470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIdChanged\strike0\{linkID=7480>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsOwned\strike0\{linkID=7500>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsPersistent\strike0\{linkID=7520>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectChangeCount\strike0\{linkID=7530>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectClass\strike0\{linkID=7540>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=7550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Objects\strike0\{linkID=7570>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=7590>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OwnerAttribute\strike0\{linkID=7610>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike PersistentId\strike0\{linkID=7620>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RefCount\strike0\{linkID=7640>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike UpdateCount\strike0\{linkID=7660>main\}
\par 
\par }
7300
ID_718





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
7310
ID_694





Imported



FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantObject Events \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantObject
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnAfterContentChange\strike0\{linkID=8930>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnAttributeChanged\strike0\{linkID=8950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnBeforeContentChange\strike0\{linkID=8960>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnChange\strike0\{linkID=8980>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnError\strike0\{linkID=9000>main\}
\par 
\par }
7320
ID_693





Imported



FALSE
82
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantObject Methods \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul Legend\ulnone\{link=ID_791\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantObject
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike _AddRef\strike0\{linkID=7670>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike _Release\strike0\{linkID=7690>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Abandon\strike0\{linkID=7710>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddObject\strike0\{linkID=7730>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddRef\strike0\{linkID=7750>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterAddRef\strike0\{linkID=7770>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterAssign\strike0\{linkID=7790>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterContentChange\strike0\{linkID=7810>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterCreate\strike0\{linkID=7830>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterCreateAttributes\strike0\{linkID=7850>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterDispose\strike0\{linkID=7870>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterRefresh\strike0\{linkID=7890>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterRetrieve\strike0\{linkID=7910>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterStore\strike0\{linkID=7930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ApplyState\strike0\{linkID=7950>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Assign\strike0\{linkID=7970>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AttributeByName\strike0\{linkID=7990>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AttributeChanged\strike0\{linkID=8010>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeAssign\strike0\{linkID=8030>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeContentChange\strike0\{linkID=8050>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeCreateAttributes\strike0\{linkID=8070>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeDispose\strike0\{linkID=8090>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeRefresh\strike0\{linkID=8110>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeRelease\strike0\{linkID=8130>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeStore\strike0\{linkID=8140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CanDispose\strike0\{linkID=8160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CanStore\strike0\{linkID=8170>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Changed\strike0\{linkID=8180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ChangesDisabled\strike0\{linkID=8200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CheckId\strike0\{linkID=8220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ClassType\strike0\{linkID=8230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ClearObjects\strike0\{linkID=8240>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike constructor Clone(Source: TInstantObject; AConnector: TInstantConnector); virtual; overload;\strike0\{linkID=8260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function Clone(AConnector: TInstantConnector): TInstantObject; overload;\strike0\{linkID=8280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ContainerByName\strike0\{linkID=8300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=8320>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=8340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DeleteObject\strike0\{linkID=8350>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Destruct\strike0\{linkID=8370>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DisableChanges\strike0\{linkID=8390>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Dispose\strike0\{linkID=8420>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike DisposeOwnedObject\strike0\{linkID=8440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnableChanges\strike0\{linkID=8450>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EqualsPersistentSignature\strike0\{linkID=8470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EqualsSignature\strike0\{linkID=8490>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Finalize\strike0\{linkID=8510>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FindAttribute\strike0\{linkID=8530>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FindContainer\strike0\{linkID=8550>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike GenerateId\strike0\{linkID=8570>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike HandleError\strike0\{linkID=8590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOfObject\strike0\{linkID=8610>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=8630>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike InsertObject\strike0\{linkID=8650>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsOperationAllowed\strike0\{linkID=8670>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Metadata\strike0\{linkID=8690>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike OwnedObjectChanged\strike0\{linkID=8700>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike OwnerChanged\strike0\{linkID=8720>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike QueryInterface\strike0\{linkID=8730>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Refresh\strike0\{linkID=8740>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshAll\strike0\{linkID=8760>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Release\strike0\{linkID=8770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RemoveObject\strike0\{linkID=8790>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ResetAttributes\strike0\{linkID=8810>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike RestoreState\strike0\{linkID=8820>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Retrieve\strike0\{linkID=8840>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike SaveState\strike0\{linkID=8860>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Store\strike0\{linkID=8880>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Unchanged\strike0\{linkID=8900>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike VerifyOperation\strike0\{linkID=8910>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
7330
ID_791





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
7340
ID_691





Imported



FALSE
103
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantObject Members \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul Legend\ulnone\{link=ID_792\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Caption\strike0\{linkID=7360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=7380>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike DefaultContainer\strike0\{linkID=7390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike HasDefaultContainer\strike0\{linkID=7410>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Id\strike0\{linkID=7420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsAbandoned\strike0\{linkID=7440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=7450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=7470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIdChanged\strike0\{linkID=7480>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsOwned\strike0\{linkID=7500>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsPersistent\strike0\{linkID=7520>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectChangeCount\strike0\{linkID=7530>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectClass\strike0\{linkID=7540>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=7550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Objects\strike0\{linkID=7570>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=7590>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OwnerAttribute\strike0\{linkID=7610>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike PersistentId\strike0\{linkID=7620>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RefCount\strike0\{linkID=7640>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike UpdateCount\strike0\{linkID=7660>main\}
\par \pard\sb55\sa55\tx355\b Events
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnAfterContentChange\strike0\{linkID=8930>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnAttributeChanged\strike0\{linkID=8950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnBeforeContentChange\strike0\{linkID=8960>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnChange\strike0\{linkID=8980>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnError\strike0\{linkID=9000>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike _AddRef\strike0\{linkID=7670>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike _Release\strike0\{linkID=7690>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Abandon\strike0\{linkID=7710>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddObject\strike0\{linkID=7730>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddRef\strike0\{linkID=7750>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterAddRef\strike0\{linkID=7770>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterAssign\strike0\{linkID=7790>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterContentChange\strike0\{linkID=7810>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterCreate\strike0\{linkID=7830>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterCreateAttributes\strike0\{linkID=7850>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterDispose\strike0\{linkID=7870>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterRefresh\strike0\{linkID=7890>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterRetrieve\strike0\{linkID=7910>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterStore\strike0\{linkID=7930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ApplyState\strike0\{linkID=7950>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Assign\strike0\{linkID=7970>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AttributeByName\strike0\{linkID=7990>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AttributeChanged\strike0\{linkID=8010>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeAssign\strike0\{linkID=8030>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeContentChange\strike0\{linkID=8050>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeCreateAttributes\strike0\{linkID=8070>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeDispose\strike0\{linkID=8090>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeRefresh\strike0\{linkID=8110>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeRelease\strike0\{linkID=8130>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeStore\strike0\{linkID=8140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CanDispose\strike0\{linkID=8160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CanStore\strike0\{linkID=8170>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Changed\strike0\{linkID=8180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ChangesDisabled\strike0\{linkID=8200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CheckId\strike0\{linkID=8220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ClassType\strike0\{linkID=8230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ClearObjects\strike0\{linkID=8240>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike constructor Clone(Source: TInstantObject; AConnector: TInstantConnector); virtual; overload;\strike0\{linkID=8260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function Clone(AConnector: TInstantConnector): TInstantObject; overload;\strike0\{linkID=8280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ContainerByName\strike0\{linkID=8300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=8320>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=8340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DeleteObject\strike0\{linkID=8350>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Destruct\strike0\{linkID=8370>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DisableChanges\strike0\{linkID=8390>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Dispose\strike0\{linkID=8420>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike DisposeOwnedObject\strike0\{linkID=8440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnableChanges\strike0\{linkID=8450>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EqualsPersistentSignature\strike0\{linkID=8470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EqualsSignature\strike0\{linkID=8490>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Finalize\strike0\{linkID=8510>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FindAttribute\strike0\{linkID=8530>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FindContainer\strike0\{linkID=8550>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike GenerateId\strike0\{linkID=8570>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike HandleError\strike0\{linkID=8590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOfObject\strike0\{linkID=8610>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=8630>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike InsertObject\strike0\{linkID=8650>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsOperationAllowed\strike0\{linkID=8670>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Metadata\strike0\{linkID=8690>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike OwnedObjectChanged\strike0\{linkID=8700>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike OwnerChanged\strike0\{linkID=8720>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike QueryInterface\strike0\{linkID=8730>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Refresh\strike0\{linkID=8740>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshAll\strike0\{linkID=8760>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Release\strike0\{linkID=8770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RemoveObject\strike0\{linkID=8790>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ResetAttributes\strike0\{linkID=8810>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike RestoreState\strike0\{linkID=8820>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Retrieve\strike0\{linkID=8840>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike SaveState\strike0\{linkID=8860>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Store\strike0\{linkID=8880>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Unchanged\strike0\{linkID=8900>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike VerifyOperation\strike0\{linkID=8910>main\}
\par 
\par }
7350
ID_792





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
7360
ID_698
TInstantObject.Caption
Caption;Caption,TInstantObject;TInstantObject,Caption



Imported
main

Caption;Caption_Property;TInstantObject_Caption
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Caption \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7370\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the text string that identifies the object to the user.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Caption: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Caption specifies the text string that identifies the object. By default the \strike Id\strike0\{linkID=7420>main\} of the object is returned. If a different behavior is required the GetCaption method must be overridden.
\par 
\par }
7370
ID_793





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Id\strike0\{linkID=7420>main\}
\par }
7380
ID_699
TInstantObject.Connector
Connector;Connector,TInstantObject;TInstantObject,Connector



Imported
main

Connector;Connector_Property;TInstantObject_Connector
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Connector \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the Connector associated with the instance.
\par \pard\sb25\sa25\b\f1 property\b0  Connector: \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Connector specifies the connector associated with the instance. The connector serves as the conduit between the instance and the database where the instance is or should be stored.
\par 
\par }
7390
ID_700
TInstantObject.DefaultContainer
DefaultContainer;DefaultContainer,TInstantObject;TInstantObject,DefaultContainer



Imported
main

DefaultContainer;DefaultContainer_Property;TInstantObject_DefaultContainer
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.DefaultContainer \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7400\}
\par \pard\sb25\sa85\tx1435\fs18 The default container attribute for the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  DefaultContainer: \strike TInstantContainer\strike0\{linkID=4310>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 DefaultContainer returns the default container attribute for the instance. The name of the Default container is specified as part of the metadata for the class. The DefaultContainer enables a convenient way of accessing instances of \strike TInstantObject\strike0\{linkID=7240>main\} descendants that mainly serves as containers. \strike TInstantObject\strike0\{linkID=7240>main\} introduces several mehods that accesses the default container attribute.
\par 
\par }
7400
ID_794





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Objects\strike0\{linkID=7570>main\}
\par }
7410
ID_701
TInstantObject.HasDefaultContainer
HasDefaultContainer;HasDefaultContainer,TInstantObject;TInstantObject,HasDefaultContainer



Imported
main

HasDefaultContainer;HasDefaultContainer_Property;TInstantObject_HasDefaultContainer
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.HasDefaultContainer \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines is a default container exists for the instance.
\par \pard\sb25\sa25\b\f1 property\b0  HasDefaultContainer: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasDefaultContainer to determine if a default container exists for the instance.
\par 
\par }
7420
ID_702
TInstantObject.Id
Id;Id,TInstantObject;TInstantObject,Id



Imported
main

Id;Id_Property;TInstantObject_Id
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Id \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7430\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the unique Id of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Id: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The Id is the identification of an object. To store an object in a database, it must have an unique signature. The signature denotes the combination of the class name and the Id of the instance. The Id may be a generated value, but it can also be composed out of one or more key attribute of the class. If the instance does not have Id when it is stored, an Id is generated automatically. Override the GetId and SetId to customize the way a class manages its Id.
\par 
\par }
7430
ID_795





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Caption\strike0\{linkID=7360>main\}
\par }
7440
ID_703
TInstantObject.IsAbandoned
IsAbandoned;IsAbandoned,TInstantObject;TInstantObject,IsAbandoned



Imported
main

IsAbandoned;IsAbandoned_Property;TInstantObject_IsAbandoned
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsAbandoned \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if the object has been abandoned by its connector
\par \pard\sb25\sa25\b\f1 property\b0  IsAbandoned: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use IsAbandoned to determine if the instance has been abandoned by its connector. If a connector is destroyed prematurely, it automatically abandons all objects that may still be used in the application. These objects are even if they have been abandoned intact with the exception that they cannot be stored, retrieve or refreshed.
\par 
\par }
7450
ID_704
TInstantObject.IsChanged
IsChanged;IsChanged,TInstantObject;TInstantObject,IsChanged



Imported
main

IsChanged;IsChanged_Property;TInstantObject_IsChanged
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsChanged \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7460\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies if the instance is changed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsChanged: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 IsChanged returns True if the instance has been marked as changed, either by setting IsChanged to True directly, because some of its attributes were changed or the \strike Changed\strike0\{linkID=8180>main\} method was explicitly called.
\par 
\par }
7460
ID_796





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Changed\strike0\{linkID=8180>main\}
\par }
7470
ID_705
TInstantObject.IsDefault
IsDefault;IsDefault,TInstantObject;TInstantObject,IsDefault



Imported
main

IsDefault;IsDefault_Property;TInstantObject_IsDefault
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsDefault \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if the instance is default.
\par \pard\sb25\sa25\b\f1 property\b0  IsDefault: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 IsDefault returns True if all the attributes of the instance have default values and the \strike Id\strike0\{linkID=7420>main\} property of the instance contains and empty string.
\par 
\par }
7480
ID_706
TInstantObject.IsIdChanged
IsIdChanged;IsIdChanged,TInstantObject;TInstantObject,IsIdChanged



Imported


IsIdChanged;IsIdChanged_Property;TInstantObject_IsIdChanged
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsIdChanged \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7490\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies if the \strike Id\strike0\{linkID=7420>main\} has been changed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsIdChanged: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 IsIdChanged returns True if the \strike Id\strike0\{linkID=7420>main\} of the instance has been changed since the instance was either retrieved from the database or created.
\par 
\par }
7490
ID_797





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.IsChanged\strike0\{linkID=7450>main\}
\par }
7500
ID_707
TInstantObject.IsOwned
IsOwned;IsOwned,TInstantObject;TInstantObject,IsOwned



Imported
main

IsOwned;IsOwned_Property;TInstantObject_IsOwned
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsOwned \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7510\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies if the instance has an owner.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsOwned: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 IsOwned returns True if the instance has an owner.
\par 
\par }
7510
ID_798





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Owner\strike0\{linkID=7590>main\}
\par }
7520
ID_708
TInstantObject.IsPersistent
IsPersistent;IsPersistent,TInstantObject;TInstantObject,IsPersistent



Imported
main

IsPersistent;IsPersistent_Property;TInstantObject_IsPersistent
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsPersistent \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link= ID_170>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies if the instance has been stored.
\par \pard\sb25\sa25\b\f1 property\b0  IsPersistent: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 IsPersistent returns True if the instance has been stored to the database.
\par 
\par }
7530
ID_709
TInstantObject.ObjectChangeCount
ObjectChangeCount;ObjectChangeCount,TInstantObject;TInstantObject,ObjectChangeCount



Imported
main

ObjectChangeCount;ObjectChangeCount_Property;TInstantObject_ObjectChangeCount
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ObjectChangeCount \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link= ID_170>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Returns the number of changed objects in the default container of the instance.
\par \pard\sb25\sa25\b\f1 property\b0  ObjectChangeCount: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 ObjectChangeCount returns the number of changed objects in the default container of the instance. If no default container is specified, ObjectChangeCount raises an exception.
\par 
\par }
7540
ID_710
TInstantObject.ObjectClass
ObjectClass;ObjectClass,TInstantObject;TInstantObject,ObjectClass



Imported
main

ObjectClass;ObjectClass_Property;TInstantObject_ObjectClass
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ObjectClass \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns the class type for the default container of the instance.
\par \pard\sb25\sa25\b\f1 property\b0  ObjectClass: TInstantObjectClass;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 ObjectClass returns the minimum required class type for the default container of the instance. If no default container is specified, ObjectClass raises an exception.
\par 
\par }
7550
ID_711
TInstantObject.ObjectCount
ObjectCount;ObjectCount,TInstantObject;TInstantObject,ObjectCount



Imported
main

ObjectCount;ObjectCount_Property;TInstantObject_ObjectCount
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ObjectCount \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7560\}
\par \pard\sb25\sa85\tx1435\fs18 Returns the number of objects in the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectCount: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ObjectCount returns the number of objects in the default container of the instance. If no default container is specified, ObjectCount raises an exception.
\par 
\par }
7560
ID_799





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Objects\strike0\{linkID=7570>main\}
\par }
7570
ID_712
TInstantObject.Objects
Objects;Objects,TInstantObject;TInstantObject,Objects



Imported
main

Objects;Objects_Property;TInstantObject_Objects
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Objects \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7580\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies a reference to an object at a given position in the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Objects [\b Index\b0 : Integer]: \strike TInstantObject\strike0\{linkID=7240>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use Objects to obtain a reference or change a reference to an object at a specified position in the default container of the instance. The Index argument indicates the zero-based index of the object. Use Objects with the \strike ObjectCount\strike0\{linkID=7550>main\} property to iterate through all of the objects in the default container. If no default container is specified, Objects raises an exception.
\par 
\par }
7580
ID_800





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.ObjectCount\strike0\{linkID=7550>main\}
\par }
7590
ID_713
TInstantObject.Owner
Owner;Owner,TInstantObject;TInstantObject,Owner



Imported
main

Owner;Owner_Property;TInstantObject_Owner
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Owner \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7600\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the object that owns the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Owner: \strike TInstantObject\strike0\{linkID=7240>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use Owner to access the owner of the instance. The owning object is responsible for the creation as well as the destruction of the instance. If the instance is not owned, Owner returns nil.
\par 
\par }
7600
ID_801





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.IsOwned\strike0\{linkID=7500>main\}
\par }
7610
ID_714
TInstantObject.OwnerAttribute
OwnerAttribute;OwnerAttribute,TInstantObject;TInstantObject,OwnerAttribute



Imported
main

OwnerAttribute;OwnerAttribute_Property;TInstantObject_OwnerAttribute
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OwnerAttribute \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link= ID_170>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies the context of an owned object.
\par \pard\sb25\sa25\b\f1 property\b0  OwnerAttribute: \strike TInstantComplex\strike0\{linkID=3200>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use OwnerAttribute to obtain a reference to the attribute object that constitutes the context for the instance.
\par 
\par }
7620
ID_715
TInstantObject.PersistentId
PersistentId;PersistentId,TInstantObject;TInstantObject,PersistentId



Imported
main

PersistentId;PersistentId_Property;TInstantObject_PersistentId
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.PersistentId \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7630\}
\par \pard\sb25\sa85\tx1435\fs18 Contains the persistent \strike Id\strike0\{linkID=7420>main\} of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  PersistentId: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 PersistentId returns the persistent \strike Id\strike0\{linkID=7420>main\} of the instance. Since the \strike Id\strike0\{linkID=7420>main\} of the Instance may change, PersistentId keeps the value of the \strike Id\strike0\{linkID=7420>main\} when it was retrieved from the database.
\par 
\par }
7630
ID_802





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Id\strike0\{linkID=7420>main\}
\par }
7640
ID_716
TInstantObject.RefCount
RefCount;RefCount,TInstantObject;TInstantObject,RefCount



Imported
main

RefCount;RefCount_Property;TInstantObject_RefCount
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.RefCount \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7650\}
\par \pard\sb25\sa85\tx1435\fs18 Indicates the number of references to the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  RefCount: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 RefCount is the number of references to the instance. RefCount is used to determine when the instance can be removed from memory. When RefCount is zero, the object can be removed. RefCount is automatically incremented when references to the instance are retrieved, and is automatically decremented when the references are destroyed. RefCount is incremented \strike AddRef\strike0\{linkID=7750>main\} method and decremented by the \strike Release\strike0\{linkID=8770>main\} method.
\par 
\par }
7650
ID_803





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AddRef\strike0\{linkID=7750>main\}
\par \strike TInstantObject.Release\strike0\{linkID=8770>main\}
\par }
7660
ID_717
TInstantObject.UpdateCount
TInstantObject,UpdateCount;UpdateCount;UpdateCount,TInstantObject



Imported
main

TInstantObject_UpdateCount;UpdateCount;UpdateCount_Property
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.UpdateCount \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies how many times the instance was updated in the database
\par \pard\sb25\sa25\b\f1 property\b0  UpdateCount: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 UpdateCount specifies how many times the instance was updated in the database.
\par 
\par }
7670
ID_724
TInstantObject._AddRef
_AddRef;_AddRef,TInstantObject;TInstantObject,_AddRef



Imported
main

_AddRef;_AddRef_Method;TInstantObject__AddRef
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject._AddRef \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7680\}
\par \pard\sb25\sa85\tx1435\fs18 Increments the reference count for the number of references dependent on the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  _AddRef: Integer; \b stdcall\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 _AddRef implements the IUnknown interface method, \strike AddRef\strike0\{linkID=7750>main\}, defined by COM. It calls the \strike AddRef\strike0\{linkID=7750>main\} method which increments the reference count for the instance. _AddRef returns the resulting value of the reference count for the instance.
\par 
\par }
7680
ID_804





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject._Release\strike0\{linkID=7690>main\}
\par }
7690
ID_725
TInstantObject._Release
_Release;_Release,TInstantObject;TInstantObject,_Release



Imported
main

_Release;_Release_Method;TInstantObject__Release
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject._Release \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7700\}
\par \pard\sb25\sa85\tx1435\fs18 Decrements the reference count for the number of references dependent on the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  _Release: Integer; \b stdcall\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 _Release implements the IUnknown interface method, \strike Release\strike0\{linkID=8770>main\}, defined by COM. It calls the \strike Release\strike0\{linkID=8770>main\} method which decrements the reference count for the instance. _Release returns the resulting value of the reference count for the instance.
\par 
\par }
7700
ID_805





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject._AddRef\strike0\{linkID=7670>main\}
\par }
7710
ID_726
TInstantObject.Abandon
Abandon;Abandon,TInstantObject;TInstantObject,Abandon



Imported
main

Abandon;Abandon_Method;TInstantObject_Abandon
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Abandon \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7720\}
\par \pard\sb25\sa85\tx1435\fs18 Abandons the object
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Abandon;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Abandon to set the instance in a state where it no longer attempts to store, dispose or refresh itself when the relevant mehods are used. Abandon is called automatically by the connector associated with the instance if the connector is destroyed prematurely.
\par 
\par }
7720
ID_806





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.IsAbandoned\strike0\{linkID=7440>main\}
\par }
7730
ID_727
TInstantObject.AddObject
AddObject;AddObject,TInstantObject;TInstantObject,AddObject



Imported
main

AddObject;AddObject_Method;TInstantObject_AddObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AddObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7740\}
\par \pard\sb25\sa85\tx1435\fs18 Adds an object to the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  AddObject(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}): Integer; \b overload\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AddObject adds an object to the default container of the instance. If no default container is specified, AddObject raises an exception.
\par 
\par }
7740
ID_807





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DefaultContainer\strike0\{linkID=7390>main\}
\par \strike TInstantContainer.Add\strike0\{linkID=4460>main\}
\par }
7750
ID_728
TInstantObject.AddRef
AddRef;AddRef,TInstantObject;TInstantObject,AddRef



Imported
main

AddRef;AddRef_Method;TInstantObject_AddRef
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AddRef \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7760\}
\par \pard\sb25\sa85\tx1435\fs18 Increments the reference count for the number of references dependent on the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  AddRef: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AddRef increments the reference count for the instance and returns the resulting value of the reference count. Although it should not normally be necessary to call AddRef directly, it can be called to safeguard an object before calling a method that could result in a premature destruction of the object, and after the method returns, call the \strike Release\strike0\{linkID=8770>main\} method to decrement the count.
\par 
\par }
7760
ID_808





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Release\strike0\{linkID=8770>main\}
\par }
7770
ID_729
TInstantObject.AfterAddRef
AfterAddRef;AfterAddRef,TInstantObject;TInstantObject,AfterAddRef



Imported
main

AfterAddRef;AfterAddRef_Method;TInstantObject_AfterAddRef
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterAddRef \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7780\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after a reference has been added to the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterAddRef; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterAddRef is called automatically immediately after a reference has been added to the instance. Do not call it explicitly in your applications. The AfterAddRef method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks when references are added to instances of the class.
\par 
\par }
7780
ID_809





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeRelease\strike0\{linkID=8130>main\}
\par }
7790
ID_730
TInstantObject.AfterAssign
AfterAssign;AfterAssign,TInstantObject;TInstantObject,AfterAssign



Imported
main

AfterAssign;AfterAssign_Method;TInstantObject_AfterAssign
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterAssign \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7800\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after assigning the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterAssign; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterAssign is called automatically immediately after assignment has been performed using the \strike Assign\strike0\{linkID=7970>main\} method of the instance. Do not call it explicitly in your applications. The AfterAssign method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to assignment without overriding the \strike Assign\strike0\{linkID=7970>main\} method.
\par 
\par }
7800
ID_810





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeAssign\strike0\{linkID=8030>main\}
\par }
7810
ID_731
TInstantObject.AfterContentChange
AfterContentChange;AfterContentChange,TInstantObject;TInstantObject,AfterContentChange



Imported
main

AfterContentChange;AfterContentChange_Method;TInstantObject_AfterContentChange
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterContentChange \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7820\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically after the content of a container has changed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterContentChange(Container: \strike TInstantContainer\strike0\{linkID=4310>main\}; ChangeType: \strike TInstantContentChangeType\strike0\{linkID=12090>main\}; \b Index\b0 : Integer; AObject: \strike TInstantObject\strike0\{linkID=7240>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterContentChange is called automatically after the content of a container has changed. Do not call it explicitly in your applications. The AfterContentChange method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks after the content of a container has changed. The Container is specified by the Container argument. The ChangeType specifies the type of change that occurred. The Index argument specifies the index in the containers array of objects where the change occurred. The AObject argument holds a reference to the object for which the change occurred. Please note that this reference may be unassigned.
\par 
\par }
7820
ID_811





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeContentChange\strike0\{linkID=8050>main\}
\par \strike TInstantObject.OnAfterContentChange\strike0\{linkID=8930>main\}
\par }
7830
ID_732
TInstantObject.AfterCreate
AfterCreate;AfterCreate,TInstantObject;TInstantObject,AfterCreate



Imported
main

AfterCreate;AfterCreate_Method;TInstantObject_AfterCreate
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterCreate \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7840\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after the new instance has been created.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterCreate; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterCreate is called automatically immediately after the new instance has been created using the \strike Create\strike0\{linkID=8320>main\} constructor. Do not call it explicitly in your applications. The AfterCreate method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the creation of new objects.
\par 
\par }
7840
ID_813





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Create\strike0\{linkID=8320>main\}
\par \strike TInstantObject.AfterRetrieve\strike0\{linkID=7910>main\}
\par \strike TInstantObject.Initialize\strike0\{linkID=8630>main\}
\par }
7850
ID_733
TInstantObject.AfterCreateAttributes
AfterCreateAttributes;AfterCreateAttributes,TInstantObject;TInstantObject,AfterCreateAttributes



Imported
main

AfterCreateAttributes;AfterCreateAttributes_Method;TInstantObject_AfterCreateAttributes
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterCreateAttributes \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7860\}
\par \pard\sb25\sa85\tx1435\fs18 Called after the attributes have been created.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterCreateAttributes; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterCreateAttributes is called automatically immediately after the attributes of the instance have been created. Do not call it explicitly in your applications. The AfterCreateAttributes method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the creation of attributes.
\par 
\par }
7860
ID_814





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeCreateAttributes\strike0\{linkID=8070>main\}
\par }
7870
ID_734
TInstantObject.AfterDispose
AfterDispose;AfterDispose,TInstantObject;TInstantObject,AfterDispose



Imported
main

AfterDispose;AfterDispose_Method;TInstantObject_AfterDispose
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterDispose \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7880\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after the instance has been disposed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterDispose; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterDispose is called automatically immediately after the instance has been disposed. Do not call it explicitly in your applications. The AfterDispose method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks after instances are disposed.
\par 
\par }
7880
ID_815





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeDispose\strike0\{linkID=8090>main\}
\par \strike TInstantObject.Dispose\strike0\{linkID=8420>main\}
\par }
7890
ID_735
TInstantObject.AfterRefresh
AfterRefresh;AfterRefresh,TInstantObject;TInstantObject,AfterRefresh



Imported
main

AfterRefresh;AfterRefresh_Method;TInstantObject_AfterRefresh
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterRefresh \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7900\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after the instance has been refreshed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterRefresh; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterRefresh is called automatically immediately after the instance has been refreshed. Do not call it explicitly in your applications. The AfterRefresh method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks after instances are refreshed.
\par 
\par }
7900
ID_816





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeRefresh\strike0\{linkID=8110>main\}
\par \strike TInstantObject.Refresh\strike0\{linkID=8740>main\}
\par }
7910
ID_736
TInstantObject.AfterRetrieve
AfterRetrieve;AfterRetrieve,TInstantObject;TInstantObject,AfterRetrieve



Imported
main

AfterRetrieve;AfterRetrieve_Method;TInstantObject_AfterRetrieve
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterRetrieve \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7920\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after the instance has been retrieved.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterRetrieve; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterRetrieve is called automatically immediately after the instance has been retrieved using the \strike Retrieve\strike0\{linkID=8840>main\} constructor. Do not call it explicitly in your applications. The AfterRetrieve method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the retrieval of existing objects.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  AfterRetrieve is not only called when a persistent object is brought from the database into memory for the first time, but also for subsequent requests for the object. Therefore no memory allocation should be performed here.
\par 
\par }
7920
ID_817





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Retrieve\strike0\{linkID=8840>main\}
\par \strike TInstantObject.Initialize\strike0\{linkID=8630>main\}
\par \strike TInstantObject.AfterCreate\strike0\{linkID=7830>main\}
\par }
7930
ID_737
TInstantObject.AfterStore
AfterStore;AfterStore,TInstantObject;TInstantObject,AfterStore



Imported
main

AfterStore;AfterStore_Method;TInstantObject_AfterStore
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterStore \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7940\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after the instance has been stored.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterStore; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterStore is called automatically immediately after the instance has been stored. Do not call it explicitly in your applications. The AfterStore method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks after instances are stored.
\par 
\par }
7940
ID_818





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeStore\strike0\{linkID=8140>main\}
\par \strike TInstantObject.Store\strike0\{linkID=8880>main\}
\par }
7950
ID_738
TInstantObject.ApplyState
ApplyState;ApplyState,TInstantObject;TInstantObject,ApplyState



Imported
main

ApplyState;ApplyState_Method;TInstantObject_ApplyState
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ApplyState \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7960\}
\par \pard\sb25\sa85\tx1435\fs18 Applies the state of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  ApplyState; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ApplyState applies the state of the instance. ApplyState is called automatically. Do not call it explicitly in your applications.
\par 
\par }
7960
ID_819





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.SaveState\strike0\{linkID=8860>main\}
\par \strike TInstantObject.RestoreState\strike0\{linkID=8820>main\}
\par }
7970
ID_739
TInstantObject.Assign
Assign;Assign,TInstantObject;TInstantObject,Assign



Imported
main

Assign;Assign_Method;TInstantObject_Assign
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Assign \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=7980\}
\par \pard\sb25\sa85\tx1435\fs18 Copies the attributes of another object to the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Assign(Source: TPersistent); \b override\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Assign to copy the attributes of the Source object to the instance. Immediatly before and after performing the assignment of the attributes, Assign calls the \strike BeforeAssign\strike0\{linkID=8030>main\} and \strike AfterAssign\strike0\{linkID=7790>main\} methods.
\par 
\par }
7980
ID_820





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeAssign\strike0\{linkID=8030>main\}
\par \strike TInstantObject.AfterAssign\strike0\{linkID=7790>main\}
\par }
7990
ID_740
TInstantObject.AttributeByName
AttributeByName;AttributeByName,TInstantObject;TInstantObject,AttributeByName



Imported
main

AttributeByName;AttributeByName_Method;TInstantObject_AttributeByName
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AttributeByName \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8000\}
\par \pard\sb25\sa85\tx1435\fs18 Searches for an attribute by the its name.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  AttributeByName(\b const\b0  AttributeName: \b string\b0 ): \strike TInstantAttribute\strike0\{linkID=2180>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call AttributeByName to search for an attribute by its name. AttributeByName returns the TAttribute object for the specified attribute name. It is only rarely necessary to call AttributeByName since fields are declared for the attributes. If the Attribute does not exist, AttributeByName raises an exception.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  An application should not access the attributes of objects directly. Instead the classes that hold the attributes should also introduce properties and methods through which the attributes can be manipulated. Using this approach, attributes and the logic accompanying them can be encapsulated in the classes to which they belong.
\par 
\par }
8000
ID_821





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.FindAttribute\strike0\{linkID=8530>main\}
\par }
8010
ID_741
TInstantObject.AttributeChanged
AttributeChanged;AttributeChanged,TInstantObject;TInstantObject,AttributeChanged



Imported
main

AttributeChanged;AttributeChanged_Method;TInstantObject_AttributeChanged
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AttributeChanged \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8020\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after an attribute has changed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AttributeChanged(Attribute: \strike TInstantAttribute\strike0\{linkID=2180>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AttributeChanged is called automatically immediately after an attribute has changed. Do not call it explicitly in your applications. The AttributeChanged method implemented by \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override AttributeChanged when creating a class that needs to perform special tasks related to the change of attributes.
\par 
\par }
8020
ID_822





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Changed\strike0\{linkID=8180>main\}
\par }
8030
ID_742
TInstantObject.BeforeAssign
BeforeAssign;BeforeAssign,TInstantObject;TInstantObject,BeforeAssign



Imported
main

BeforeAssign;BeforeAssign_Method;TInstantObject_BeforeAssign
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeAssign \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8040\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately before assigning the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  BeforeAssign; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 BeforeAssign is called automatically immediately before assignment is performed using the \strike Assign\strike0\{linkID=7970>main\} method of the instance. Do not call it explicitly in your applications. The BeforeAssign method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to assignment without overriding the \strike Assign\strike0\{linkID=7970>main\} method.
\par 
\par }
8040
ID_823





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterAssign\strike0\{linkID=7790>main\}
\par }
8050
ID_743
TInstantObject.BeforeContentChange
BeforeContentChange;BeforeContentChange,TInstantObject;TInstantObject,BeforeContentChange



Imported
main

BeforeContentChange;BeforeContentChange_Method;TInstantObject_BeforeContentChange
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeContentChange \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8060\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically before the content of a container is to be changed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  BeforeContentChange(Container: \strike TInstantContainer\strike0\{linkID=4310>main\}; ChangeType: \strike TInstantContentChangeType\strike0\{linkID=12090>main\}; \b Index\b0 : Integer; AObject: \strike TInstantObject\strike0\{linkID=7240>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 BeforeContentChange is called automatically before the content of a container is changed. Do not call it explicitly in your applications. The BeforeContentChange method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks before the content of a container is changed. The Container is specified by the Container argument. The ChangeType specifies the type of change that will occur. The Index argument specifies the index in the containers array of objects where the change will occur. The AObject argument holds a reference to the object for which the change will occur. Please note that this reference may be unassigned.
\par 
\par }
8060
ID_824





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterContentChange\strike0\{linkID=7810>main\}
\par \strike TInstantObject.OnBeforeContentChange\strike0\{linkID=8960>main\}
\par }
8070
ID_744
TInstantObject.BeforeCreateAttributes
BeforeCreateAttributes;BeforeCreateAttributes,TInstantObject;TInstantObject,BeforeCreateAttributes



Imported
main

BeforeCreateAttributes;BeforeCreateAttributes_Method;TInstantObject_BeforeCreateAttributes
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeCreateAttributes \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8080\}
\par \pard\sb25\sa85\tx1435\fs18 Called before the attributes are created.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  BeforeCreateAttributes; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 BeforeCreateAttributes is called automatically immediately before the attributes of the instance are created. Do not call it explicitly in your applications. The BeforeCreateAttributes method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the creation of attributes.
\par 
\par }
8080
ID_825





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterCreateAttributes\strike0\{linkID=7850>main\}
\par }
8090
ID_745
TInstantObject.BeforeDispose
BeforeDispose;BeforeDispose,TInstantObject;TInstantObject,BeforeDispose



Imported
main

BeforeDispose;BeforeDispose_Method;TInstantObject_BeforeDispose
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeDispose \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8100\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately before the instance is disposed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  BeforeDispose; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 BeforeDispose is called automatically immediately before the instance is disposed. Do not call it explicitly in your applications. The BeforeDispose method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks before instances are disposed.
\par 
\par }
8100
ID_826





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterDispose\strike0\{linkID=7870>main\}
\par \strike TInstantObject.Dispose\strike0\{linkID=8420>main\}
\par }
8110
ID_746
TInstantObject.BeforeRefresh
BeforeRefresh;BeforeRefresh,TInstantObject;TInstantObject,BeforeRefresh



Imported
main

BeforeRefresh;BeforeRefresh_Method;TInstantObject_BeforeRefresh
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeRefresh \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8120\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately before the instance is refreshed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  BeforeRefresh; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 BeforeRefresh is called automatically immediately before the instance is refreshed. Do not call it explicitly in your applications. The BeforeRefresh method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks before instances are refreshed.
\par 
\par }
8120
ID_827





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterRefresh\strike0\{linkID=7890>main\}
\par \strike TInstantObject.Refresh\strike0\{linkID=8740>main\}
\par }
8130
ID_747
TInstantObject.BeforeRelease
BeforeRelease;BeforeRelease,TInstantObject;TInstantObject,BeforeRelease



Imported
main

BeforeRelease;BeforeRelease_Method;TInstantObject_BeforeRelease
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeRelease \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Called automatically immediately before a reference to the instance is removed.
\par \pard\sb25\sa25\b\f1 procedure\b0  BeforeRelease; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 BeforeRelease is called automatically immediately before a reference to the instance is removed. Do not call it explicitly in your applications. The BeforeRelease method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks when references to instances of the class are removed.
\par 
\par }
8140
ID_748
TInstantObject.BeforeStore
BeforeStore;BeforeStore,TInstantObject;TInstantObject,BeforeStore



Imported
main

BeforeStore;BeforeStore_Method;TInstantObject_BeforeStore
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeStore \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8150\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately before the instance is stored.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  BeforeStore; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 BeforeStore is called automatically immediately before the instance is stored. Do not call it explicitly in your applications. The \strike AfterStore\strike0\{linkID=7930>main\} method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks before instances are stored.
\par 
\par }
8150
ID_828





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterStore\strike0\{linkID=7930>main\}
\par \strike TInstantObject.Store\strike0\{linkID=8880>main\}
\par }
8160
ID_749
TInstantObject.CanDispose
CanDispose;CanDispose,TInstantObject;TInstantObject,CanDispose



Imported
main

CanDispose;CanDispose_Method;TInstantObject_CanDispose
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.CanDispose \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the if it is possible to dispose the instance.
\par \pard\sb25\sa25\b\f1 function\b0  CanDispose: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use CanDispose to determine if it is possible to dispose the instance.
\par 
\par }
8170
ID_750
TInstantObject.CanStore
CanStore;CanStore,TInstantObject;TInstantObject,CanStore



Imported
main

CanStore;CanStore_Method;TInstantObject_CanStore
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.CanStore \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link= ID_170>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines the if it is possible to store the instance.
\par \pard\sb25\sa25\b\f1 function\b0  CanStore: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use CanStore to determine if it is possible to store the instance.
\par 
\par }
8180
ID_751
TInstantObject.Changed
Changed;Changed,TInstantObject;TInstantObject,Changed



Imported
main

Changed;Changed_Method;TInstantObject_Changed
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Changed \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8190\}
\par \pard\sb25\sa85\tx1435\fs18 Generates an \strike OnChange\strike0\{linkID=8980>main\} event, and marks the Instance as changed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Changed; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Changed generates an \strike OnChange\strike0\{linkID=8980>main\} event, and marks the instance as changed by setting its \strike IsChanged\strike0\{linkID=7450>main\} property to True. If the instance is owned, the owner is notified about the change. It should normally not be necessary to call Changed directly since it is called if a change occurs to the instance. If changes are disabled, none of the above is performed.
\par 
\par }
8190
ID_829





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.ChangesDisabled\strike0\{linkID=8200>main\}
\par }
8200
ID_752
TInstantObject.ChangesDisabled
ChangesDisabled;ChangesDisabled,TInstantObject;TInstantObject,ChangesDisabled



Imported
main

ChangesDisabled;ChangesDisabled_Method;TInstantObject_ChangesDisabled
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ChangesDisabled \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8210\}
\par \pard\sb25\sa85\tx1435\fs18 Determines if change notification and change of state is disabled for the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  ChangesDisabled: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ChangesDisabled determines if the instance will recognize and notify occuring changes. If the value is True the instance is isolated, it neither recognizes nor notifies about changes.
\par 
\par }
8210
ID_830





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DisableChanges\strike0\{linkID=8390>main\}
\par \strike TInstantObject.EnableChanges\strike0\{linkID=8450>main\}
\par }
8220
ID_753
TInstantObject.CheckId
CheckId;CheckId,TInstantObject;TInstantObject,CheckId



Imported
main

CheckId;CheckId_Method;TInstantObject_CheckId
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.CheckId \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Valides if the instance has a valid \strike Id\strike0\{linkID=7420>main\}
\par \pard\sb25\sa25\b\f1 procedure\b0  CheckId;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call CheckId to verify that the instance has a valid \strike Id\strike0\{linkID=7420>main\}. If the instance does not initially have an \strike Id\strike0\{linkID=7420>main\} when calling CheckId, an \strike Id\strike0\{linkID=7420>main\} is generated by the \strike InstantGenerateId\strike0\{linkID=11370>main\} function. If the instance initially has an \strike Id\strike0\{linkID=7420>main\}, this \strike Id\strike0\{linkID=7420>main\} is validated by calling the \strike InstantIsValidObjectId\strike0\{linkID=11440>main\} function.
\par 
\par }
8230
ID_754
TInstantObject.ClassType
ClassType;ClassType,TInstantObject;TInstantObject,ClassType



Imported
main

ClassType;ClassType_Method;TInstantObject_ClassType
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ClassType \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns a pointer to the class type of the instance.
\par \pard\sb25\sa25\b\f1 function\b0  ClassType: TInstantObjectClass;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 ClassType determines the type of the instance an object. It is rarely necessary to call ClassType directly. Instead, use the is or as operator.
\par 
\par }
8240
ID_755
TInstantObject.ClearObjects
ClearObjects;ClearObjects,TInstantObject;TInstantObject,ClearObjects



Imported
main

ClearObjects;ClearObjects_Method;TInstantObject_ClearObjects
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ClearObjects \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8250\}
\par \pard\sb25\sa85\tx1435\fs18 Removes all objects in the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  ClearObjects;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ClearObjects clears the default container of the instance. If no default container is specified, ClearObjects raises an exception.
\par 
\par }
8250
ID_833





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DefaultContainer\strike0\{linkID=7390>main\}
\par }
8260
ID_756
TInstantObject.Clone
Clone;Clone,TInstantObject;TInstantObject,Clone



Imported
main

Clone;Clone_Method;TInstantObject_Clone
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Clone \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8270\}
\par \pard\sb25\sa85\tx1435\fs18 Copy-constructor that duplicates an object.
\par \pard\sb25\sa25\tx1435\b\f1 constructor\b0  \strike Clone\strike0\{linkID=8280>main\}(Source: \strike TInstantObject\strike0\{linkID=7240>main\}; AConnector: \strike TInstantConnector\strike0\{linkID=3780>main\}); \b virtual\b0 ; \b overload\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Creates a new instance that should duplicate another object specified by the Source argument. The AConnector argument can optionally be used to specify the connector associated with the duplicate object. If AConnector is not assigned, the default connector is used for the newly created instance. If also no default \strike Connector\strike0\{linkID=7380>main\} is specified, an exception is raised.
\par 
\par }
8270
ID_834





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Create\strike0\{linkID=8320>main\}
\par \strike TInstantObject.Retrieve\strike0\{linkID=8840>main\}
\par }
8280
ID_757
TInstantObject.Clone
Clone;Clone,TInstantObject;TInstantObject,Clone



Imported
main

Clone;Clone_Method;TInstantObject_Clone
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Clone \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8290\}
\par \pard\sb25\sa85\tx1435\fs18 Creates and returns a duplicate of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  Clone(AConnector: \strike TInstantConnector\strike0\{linkID=3780>main\}): \strike TInstantObject\strike0\{linkID=7240>main\}; \b overload\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Clone to obtain a duplicate of the instance. The AConnector argument can be used to specify the connector associated with the duplicate object. If AConnector is not assigned (default) the connector associated with the instance is used.
\par 
\par }
8290
ID_835





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Clone\strike0\{linkID=8280>main\}
\par \strike TInstantObject.Assign\strike0\{linkID=7970>main\}
\par }
8300
ID_758
TInstantObject.ContainerByName
ContainerByName;ContainerByName,TInstantObject;TInstantObject,ContainerByName



Imported
main

ContainerByName;ContainerByName_Method;TInstantObject_ContainerByName
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ContainerByName \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8310\}
\par \pard\sb25\sa85\tx1435\fs18 Finds a container attribute for the instance by the its name.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  ContainerByName(\b const\b0  ContainerName: \b string\b0 ): \strike TInstantContainer\strike0\{linkID=4310>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call ContainerByName to find a container attribute by its name. ContainerByName returns the TContainer object for the specified attribute name. It is only rarely necessary to use ContainerByName since attribute fields are declared for container attributes. If the container Attribute does not exist, ContainerByName raises an exception.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  An application should not access the attributes of objects directly. Instead the classes that hold the attributes should also introduce properties and methods through which the attributes can be manipulated. Using this approach, attributes and the logic accompanying them can be encapsulated in the classes to which they belong.
\par 
\par }
8310
ID_836





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.FindContainer\strike0\{linkID=8550>main\}
\par }
8320
ID_759
TInstantObject.Create
Create;Create,TInstantObject;TInstantObject,Create



Imported
main

Create;Create_Method;TInstantObject_Create
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Create \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8330\}
\par \pard\sb25\sa85\tx1435\fs18 Constructor that creates a new instance.
\par \pard\sb25\sa25\tx1435\b\f1 constructor\b0  Create(AConnector: \strike TInstantConnector\strike0\{linkID=3780>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Create to construct a new instance of a \strike TInstantObject\strike0\{linkID=7240>main\} descendant. The AConnector argument can optionally be used to specify the connector associated with the instance. If AConnector is not assigned, the default connector is used for the newly created instance. If also no default \strike Connector\strike0\{linkID=7380>main\} is specified, an exception is raised.
\par 
\par }
8330
ID_837





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Clone\strike0\{linkID=8280>main\}
\par \strike TInstantObject.Retrieve\strike0\{linkID=8840>main\}
\par }
8340
ID_760
TInstantObject.CreateInstance
CreateInstance;CreateInstance,TInstantObject;TInstantObject,CreateInstance



Imported
main

CreateInstance;CreateInstance_Method;TInstantObject_CreateInstance
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.CreateInstance \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Creates an instance for streaming purposes.
\par \pard\sb25\sa25\b\f1 class\b0  \b function\b0  CreateInstance(Arg: Pointer): \strike TInstantStreamable\strike0\{linkID=10680>main\}; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 CreateInstance is used by the streaming mechanism of IntantObjects to create instances of classes descending from \strike TInstantObject\strike0\{linkID=7240>main\}. If assigned, the Arg argument contains a reference to the connector to be used for the newly created instance.
\par 
\par }
8350
ID_761
TInstantObject.DeleteObject
DeleteObject;DeleteObject,TInstantObject;TInstantObject,DeleteObject



Imported
main

DeleteObject;DeleteObject_Method;TInstantObject_DeleteObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.DeleteObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8360\}
\par \pard\sb25\sa85\tx1435\fs18 Deletes an object from the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  DeleteObject(\b Index\b0 : Integer);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 DeleteObject deletes the object at the position specified by the Index argument from the default container of the instance. If no default container is specified, DeleteObject raises an exception.
\par 
\par }
8360
ID_838





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DefaultContainer\strike0\{linkID=7390>main\}
\par \strike TInstantObject.RemoveObject\strike0\{linkID=8790>main\}
\par }
8370
ID_762
TInstantObject.Destruct
Destruct;Destruct,TInstantObject;TInstantObject,Destruct



Imported
main

Destruct;Destruct_Method;TInstantObject_Destruct
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Destruct \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8380\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically when the instance is destroyed for the ultimately last time.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Destruct; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Destruct is called automatically when the last reference to a non-persistent (either a newly created or disposed) instance is destroyed. Do not call it explicitly in your applications. The Destruct method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the final destruction of an object.
\par 
\par }
8380
ID_839





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Create\strike0\{linkID=8320>main\}
\par }
8390
ID_763
TInstantObject.DisableChanges
DisableChanges;DisableChanges,TInstantObject;TInstantObject,DisableChanges



Imported
main

DisableChanges;DisableChanges_Method;TInstantObject_DisableChanges
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.DisableChanges \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8400\}\tab\strike Example 1\strike0\{linkID=8410>example\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Disables change notification and change of state for the instance.
\par \pard\sb25\sa25\tx1435\tx2875\b\f1 procedure\b0  DisableChanges;
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Disables change notification and change of state for the instance. Use DisableChanges to "isolate" the instance. The instance will neither recognize change notification nor notify about occurring changes. DisableChanges can be nested. Each call to DisableChanges should have a corresponding call to \strike EnableChanges\strike0\{linkID=8450>main\}.
\par 
\par }
8400
ID_840





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.EnableChanges\strike0\{linkID=8450>main\}
\par \strike TInstantObject.ChangesDisabled\strike0\{linkID=8200>main\}
\par }
8410
ID_841
TInstantObject.DisableChanges, Example 1
TInstantObject.DisableChanges, Example 1



Imported
example


FALSE
23
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantObject.DisableChanges\strike0\{link=ID_763>main\}\{keepn\} 
\par \pard\keep\f1\fs18 Nested call to DisableChanges.
\par 
\par procedure DoNothing(Obj: \strike TInstantObject\strike0\{linkID=7240>main\});
\par begin
\par   Obj.DisableChanges;
\par   Obj.\strike EnableChanges\strike0\{linkID=8450>main\};
\par end;
\par 
\par procedure DoSomething(Obj: \strike TInstantObject\strike0\{linkID=7240>main\});
\par begin
\par   Obj.DisableChanges;
\par   try
\par     DoNothing(Obj);
\par   finally
\par     Obj.\strike EnableChanges\strike0\{linkID=8450>main\};
\par   end;
\par end;
\par 
\par }
8420
ID_764
TInstantObject.Dispose
Dispose;Dispose,TInstantObject;TInstantObject,Dispose



Imported
main

Dispose;Dispose_Method;TInstantObject_Dispose
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 TInstantObject.Dispose \b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8430\}
\par \pard\sb25\sa85\tx1435\fs18 Disposes the instance from the database.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Dispose(ConflictAction: \strike TInstantConflictAction\strike0\{linkID=12030>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Dispose disposes the instance from the database. After the instance has been disposed it has the same state as a newly created instance. This means that a disposed object can be stored in the database again if required. Immediately before and after performing the disposal of the instance, Dispose calls the \strike BeforeDispose\strike0\{linkID=8090>main\} and \strike AfterDispose\strike0\{linkID=7870>main\} methods. If the instance is owned, Dispose removes the object from its owner, and the owner is requested to store itself in order to persist the removal. If the instance has not yet been stored Dispose does nothing. The ConflictAction argument specifies how the Dispose operation should respond to conflicts.
\par 
\par }
8430
ID_842





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Store\strike0\{linkID=8880>main\}
\par }
8440
ID_765
TInstantObject.DisposeOwnedObject
DisposeOwnedObject;DisposeOwnedObject,TInstantObject;TInstantObject,DisposeOwnedObject



Imported
main

DisposeOwnedObject;DisposeOwnedObject_Method;TInstantObject_DisposeOwnedObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.DisposeOwnedObject \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link= ID_170>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Disposes an owned object persistently.
\par \pard\sb25\sa25\b\f1 procedure\b0  DisposeOwnedObject(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}; ConflictAction: \strike TInstantConflictAction\strike0\{linkID=12030>main\});
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Disposes an owned object by removing the object from the attribute in the owning instance that hold it and store the owning instance.
\par 
\par }
8450
ID_766
TInstantObject.EnableChanges
EnableChanges;EnableChanges,TInstantObject;TInstantObject,EnableChanges



Imported
main

EnableChanges;EnableChanges_Method;TInstantObject_EnableChanges
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.EnableChanges \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8460\}
\par \pard\sb25\sa85\tx1435\fs18 Enables change notification and change of state for the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  EnableChanges;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call EnableChanges to enable change notification and change of state for the instance. If the current disabled level is not nested, the call to EnableChanges enables change notification and change of state. Otherwise EnableChanges only decrements the disabled nesting level.
\par 
\par }
8460
ID_844





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DisableChanges\strike0\{linkID=8390>main\}
\par \strike TInstantObject.ChangesDisabled\strike0\{linkID=8200>main\}
\par }
8470
ID_767
TInstantObject.EqualsPersistentSignature
EqualsPersistentSignature;EqualsPersistentSignature,TInstantObject;TInstantObject,EqualsPersistentSignature



Imported
main

EqualsPersistentSignature;EqualsPersistentSignature_Method;TInstantObject_EqualsPersistentSignature
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.EqualsPersistentSignature \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8480\}
\par \pard\sb25\sa85\tx1435\fs18 Compares the persistent signature of the instance with another signature.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  EqualsPersistentSignature(\b const\b0  AObjectClassName: \b string\b0 ; \b const\b0  AObjectId: \b string\b0 ): Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call EqualsPersistentSignature to compare the persistent signature of the instance with the signature passed as the AObjectClassName and AObjectId arguments. Since the \strike Id\strike0\{linkID=7420>main\} of the instance may have changed, the persistent signature denotes the combination of the class name and the \strike PersistentId\strike0\{linkID=7620>main\} of the instance. If the instance is persistent and the values are equal, EqualsPersistentSignature returns True.
\par 
\par }
8480
ID_845





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.EqualsSignature\strike0\{linkID=8490>main\}
\par }
8490
ID_768
TInstantObject.EqualsSignature
EqualsSignature;EqualsSignature,TInstantObject;TInstantObject,EqualsSignature



Imported
main

EqualsSignature;EqualsSignature_Method;TInstantObject_EqualsSignature
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.EqualsSignature \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8500\}
\par \pard\sb25\sa85\tx1435\fs18 Compares the signature of the instance with another signature.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  EqualsSignature(\b const\b0  AObjectClassName: \b string\b0 ; \b const\b0  AObjectId: \b string\b0 ): Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call EqualsSignature to compare the signature of the instance with the signature passed as the AObjectClassName and AObjectId arguments. The signature denotes the combination of the class name and \strike Id\strike0\{linkID=7420>main\} of the instance. If the values are equal, EqualsSignature returns True.
\par 
\par }
8500
ID_846





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.EqualsPersistentSignature\strike0\{linkID=8470>main\}
\par }
8510
ID_769
TInstantObject.Finalize
Finalize;Finalize,TInstantObject;TInstantObject,Finalize



Imported
main

Finalize;Finalize_Method;TInstantObject_Finalize
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Finalize \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8520\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately before memory is deallocated for the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Finalize; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Finalize is called automatically immediately before memory is deallocated for the instance. Do not call it explicitly in your applications. The Finalize method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the deallocation of memory for an object.
\par 
\par }
8520
ID_847





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Initialize\strike0\{linkID=8630>main\}
\par }
8530
ID_770
TInstantObject.FindAttribute
FindAttribute;FindAttribute,TInstantObject;TInstantObject,FindAttribute



Imported
main

FindAttribute;FindAttribute_Method;TInstantObject_FindAttribute
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.FindAttribute \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8540\}
\par \pard\sb25\sa85\tx1435\fs18 Searches for an attribute by the its name.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  FindAttribute(\b const\b0  AttributeName: \b string\b0 ): \strike TInstantAttribute\strike0\{linkID=2180>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call FindAttribute to search for an attribute by its name. FindAttribute returns the \strike TInstantAttribute\strike0\{linkID=2180>main\} object for the specified attribute name. It is only rarely necessary to call FindAttribute since fields for the attributes are present in the class declaration. If the Attribute does not exist, FindAttribute returns nil.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  An application should not access the attributes of objects directly. Instead the classes that hold the attributes should also introduce properties and methods through which the attributes can be manipulated. Using this approach, attributes and the logic accompanying them can be encapsulated in the classes to which they belong.
\par 
\par }
8540
ID_848





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AttributeByName\strike0\{linkID=7990>main\}
\par }
8550
ID_771
TInstantObject.FindContainer
FindContainer;FindContainer,TInstantObject;TInstantObject,FindContainer



Imported
main

FindContainer;FindContainer_Method;TInstantObject_FindContainer
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.FindContainer \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8560\}
\par \pard\sb25\sa85\tx1435\fs18 Searches for a container by the its name.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  FindContainer(\b const\b0  ContainerName: \b string\b0 ): \strike TInstantContainer\strike0\{linkID=4310>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call FindContainer to search for a container by its name. FindContainer returns the \strike TInstantContainer\strike0\{linkID=4310>main\} object for the specified attribute name. It is only rarely necessary to call FindContainer since since fields for the containers are present in the class declaration. If the container does not exist, FindContainer returns nil.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  An application should not access the attributes of objects directly. Instead the classes that hold the attributes should also introduce properties and methods through which the attributes can be manipulated. Using this approach, attributes and the logic accompanying them can be encapsulated in the classes to which they belong.
\par 
\par }
8560
ID_849





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.ContainerByName\strike0\{linkID=8300>main\}
\par }
8570
ID_364
TInstantObject.GenerateId
GenerateId;GenerateId,TInstantObject;TInstantObject,GenerateId



Imported
main

GenerateId;GenerateId_Method;TInstantObject_GenerateId
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.GenerateId \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8580\}
\par \pard\sb25\sa85\tx1435\fs18 Generates an object id
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  GenerateId: \b string\b0 ; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 GenerateId is called automatically to generate an \strike Id\strike0\{linkID=7420>main\} for the instance. Normally it is not necessary to call this method explicitly. By default GenerateId calls \strike InstantGenerateId\strike0\{linkID=11370>main\}. Override this method to customize the \strike Id\strike0\{linkID=7420>main\} generation mechanism for a descendant class.
\par 
\par }
8580
ID_850





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.GenerateId\strike0\{linkID=4200>main\}
\par }
8590
ID_772
TInstantObject.HandleError
HandleError;HandleError,TInstantObject;TInstantObject,HandleError



Imported
main

HandleError;HandleError_Method;TInstantObject_HandleError
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.HandleError \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8600\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically when an error occurs to generate an \strike OnError\strike0\{linkID=9000>main\} event.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  HandleError(OperationType: \strike TInstantOperationType\strike0\{linkID=12340>main\}; E: Exception; \b var\b0  Action: \strike TInstantErrorAction\strike0\{linkID=12130>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 HandleError is called automatically to handle errors that occur when the instance is stored, disposed or refreshed. Do not call it explicitly in your applications. The HandleError method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform special error handling tasks. The OperationType argument specifies during which kind of operation the error occurred. The E argument contains the causing Exception object. Use the Action argument to specify what kind of action should be performed in response to the Error.
\par 
\par }
8600
ID_851





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.OnError\strike0\{linkID=9000>main\}
\par }
8610
ID_773
TInstantObject.IndexOfObject
IndexOfObject;IndexOfObject,TInstantObject;TInstantObject,IndexOfObject



Imported
main

IndexOfObject;IndexOfObject_Method;TInstantObject_IndexOfObject
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IndexOfObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8620\}
\par \pard\sb25\sa85\tx1435\fs18 Returns the index of a specified object in the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  IndexOfObject(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}): Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call IndexOf to get the zero-based index for a specified object in the default container of the instance. If an object is not in the container, IndexOfObject returns -1.
\par If an object appears more than once, IndexOfObject returns the index of the first occurrence of the object. If no default container is specified, IndexOfObject raises an exception.
\par 
\par }
8620
ID_854





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DefaultContainer\strike0\{linkID=7390>main\}
\par }
8630
ID_774
TInstantObject.Initialize
Initialize;Initialize,TInstantObject;TInstantObject,Initialize



Imported
main

Initialize;Initialize_Method;TInstantObject_Initialize
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Initialize \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8640\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after memory has been allocated for the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Initialize; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Initialize is called automatically immediately after memory has been allocated for the instance. Do not call it explicitly in your applications. The Initialize method implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the allocation of memory for an object. Initialize is the called when creating a new instance as well as when an existing instance is retrieved. Attribute objects have been created.
\par 
\par }
8640
ID_855





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Finalize\strike0\{linkID=8510>main\}
\par \strike TInstantObject.AfterCreate\strike0\{linkID=7830>main\}
\par \strike TInstantObject.AfterRetrieve\strike0\{linkID=7910>main\}
\par }
8650
ID_775
TInstantObject.InsertObject
InsertObject;InsertObject,TInstantObject;TInstantObject,InsertObject



Imported
main

InsertObject;InsertObject_Method;TInstantObject_InsertObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.InsertObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8660\}
\par \pard\sb25\sa85\tx1435\fs18 Adds an object at a given position in the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InsertObject(\b Index\b0 : Integer; AObject: \strike TInstantObject\strike0\{linkID=7240>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Insert to add an object at a position specified by the zero-based Index argument. Insert adds the object at the specified position, shifting the object that previously occupied that position, and all subsequent objects, up. If no default container is specified, InsertObject raises an exception.
\par 
\par }
8660
ID_856





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AddObject\strike0\{linkID=7730>main\}
\par }
8670
ID_776
TInstantObject.IsOperationAllowed
IsOperationAllowed;IsOperationAllowed,TInstantObject;TInstantObject,IsOperationAllowed



Imported
main

IsOperationAllowed;IsOperationAllowed_Method;TInstantObject_IsOperationAllowed
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsOperationAllowed \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8680\}
\par \pard\sb25\sa85\tx1435\fs18 Determines whether a specific operation is allowed or not.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  IsOperationAllowed(OperationType: \strike TInstantOperationType\strike0\{linkID=12340>main\}): Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use the IsOperationAllowed method to determine whether a specific operation is allowed for the instance. If the operation is allowed, the method returns True.
\par 
\par }
8680
ID_857





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.VerifyOperation\strike0\{linkID=8910>main\}
\par }
8690
ID_777
TInstantObject.Metadata
Metadata;Metadata,TInstantObject;TInstantObject,Metadata



Imported
main

Metadata;Metadata_Method;TInstantObject_Metadata
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Metadata \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link= ID_170>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Contains a reference to the metadata object associated with the class.
\par \pard\sb25\sa25\b\f1 class\b0  \b function\b0  Metadata: TInstantClassMetadata; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Metadata returns the metadata object associated with the class. The metadata object contains the specification for the class and the metadata for the attributes the class introduces. If no Metadata is associated with the class, an exception is raised. Metadata is used internally by the classes of the InstantObjects framework, and should normally not be accessed from your applications.
\par 
\par }
8700
ID_778
TInstantObject.OwnedObjectChanged
OwnedObjectChanged;OwnedObjectChanged,TInstantObject;TInstantObject,OwnedObjectChanged



Imported
main

OwnedObjectChanged;OwnedObjectChanged_Method;TInstantObject_OwnedObjectChanged
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OwnedObjectChanged \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8710\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after an owned object has changed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  OwnedObjectChanged(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 OwnedObjectChanged is called automatically immediately after an owned object has changed. Do not call it explicitly in your applications. The OwnedObjectChanged method implemented by \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override OwnedObjectChanged when creating a class that needs to perform special tasks related to the change of owned objects.
\par 
\par }
8710
ID_858





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Changed\strike0\{linkID=8180>main\}
\par }
8720
ID_779
TInstantObject.OwnerChanged
OwnerChanged;OwnerChanged,TInstantObject;TInstantObject,OwnerChanged



Imported
main

OwnerChanged;OwnerChanged_Method;TInstantObject_OwnerChanged
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OwnerChanged \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link= ID_170>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Called automatically immediately after the owner of the instance has changed.
\par \pard\sb25\sa25\b\f1 procedure\b0  OwnerChanged(OldOwner: \strike TInstantObject\strike0\{linkID=7240>main\}; OldOwnerAttribute: \strike TInstantComplex\strike0\{linkID=3200>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 OwnerChanged is called automatically immediately after the owner of the instance has changed. Do not call it explicitly in your applications. The OwnerChanged method implemented by \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override OwnerChanged when creating a class that needs to perform special tasks related to the change of the owner. The OldOwner argument specifies the former owner of the instance and the OldOwnerAttribute argument specifies the former attribute to which the instance was associated.
\par 
\par }
8730
ID_780
TInstantObject.QueryInterface
QueryInterface;QueryInterface,TInstantObject;TInstantObject,QueryInterface



Imported
main

QueryInterface;QueryInterface_Method;TInstantObject_QueryInterface
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.QueryInterface \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns a reference to a specified interface if that interface is supported by the instance.
\par \pard\sb25\sa25\b\f1 function\b0  QueryInterface(\b const\b0  IID: TGUID; \b out\b0  Obj): HResult; \b virtual\b0 ; \b stdcall\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 QueryInterface implements the IUnknown interface method, QueryInterface, defined by COM. For instances that support interfaces, QueryInterface returns a reference to the interface specified by the IID argument, as the Obj argument. If the instance does not support the interface, the Obj argument returns nil.
\par 
\par }
8740
ID_781
TInstantObject.Refresh
Refresh;Refresh,TInstantObject;TInstantObject,Refresh



Imported
main

Refresh;Refresh_Method;TInstantObject_Refresh
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Refresh \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8750\}
\par \pard\sb25\sa85\tx1435\fs18 Refereshes the attributes of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Refresh;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Refresh to ensure that attributes of the instance has the latest values from the database. Immediately before and after performing the refresh of the instance, Refresh calls the \strike BeforeRefresh\strike0\{linkID=8110>main\} and \strike AfterRefresh\strike0\{linkID=7890>main\} methods. If the instance is longer in the database, Refresh raises an exception. If the instance is owned, the owner is requested to refresh itself.
\par 
\par }
8750
ID_859





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.RefreshAll\strike0\{linkID=8760>main\}
\par }
8760
ID_782
TInstantObject.RefreshAll
RefreshAll;RefreshAll,TInstantObject;TInstantObject,RefreshAll



Imported
main

RefreshAll;RefreshAll_Method;TInstantObject_RefreshAll
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.RefreshAll \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Refreshes all instances associated with a connector object.
\par \pard\sb25\sa25\b\f1 class\b0  \b procedure\b0  RefreshAll(AConnector: \strike TInstantConnector\strike0\{linkID=3780>main\}; Progress: \strike TInstantProgressEvent\strike0\{linkID=12360>main\});
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call RefreshAll to refresh all instances of the class associated with a connector object. The \strike Connector\strike0\{linkID=7380>main\} argument can optionally be used to specify a \strike Connector\strike0\{linkID=7380>main\} object. If the connector is not specified, RefreshAll uses the default connector. Use the progress argument to attach a progress event in order to receive progress information during the refresh process.
\par 
\par }
8770
ID_783
TInstantObject.Release
Release;Release,TInstantObject;TInstantObject,Release



Imported
main

Release;Release_Method;TInstantObject_Release
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Release \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8780\}
\par \pard\sb25\sa85\tx1435\fs18 Decrements the reference count for the number of references dependent on the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  Release: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Release decrements the reference count and returns the resulting value of the reference count for the instance. It should not normally be necessary to call Release directly from your applications.
\par 
\par }
8780
ID_861





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AddRef\strike0\{linkID=7750>main\}
\par }
8790
ID_784
TInstantObject.RemoveObject
RemoveObject;RemoveObject,TInstantObject;TInstantObject,RemoveObject



Imported
main

RemoveObject;RemoveObject_Method;TInstantObject_RemoveObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.RemoveObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8800\}
\par \pard\sb25\sa85\tx1435\fs18 Removes an object from the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  RemoveObject(AObject: \strike TInstantObject\strike0\{linkID=7240>main\}): Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 RemoveObject removes an object from the default container of the instance. If no default container is specified, \strike DeleteObject\strike0\{linkID=8350>main\} raises an exception.
\par 
\par }
8800
ID_862





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DefaultContainer\strike0\{linkID=7390>main\}
\par \strike TInstantObject.DeleteObject\strike0\{linkID=8350>main\}
\par }
8810
ID_785
TInstantObject.ResetAttributes
ResetAttributes;ResetAttributes,TInstantObject;TInstantObject,ResetAttributes



Imported
main

ResetAttributes;ResetAttributes_Method;TInstantObject_ResetAttributes
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ResetAttributes \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link= ID_170>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Resets the values of the attributes to their default values.
\par \pard\sb25\sa25\b\f1 procedure\b0  ResetAttributes;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use ResetAttribute to reset the values of all attributes of the instance to their default values.
\par 
\par }
8820
ID_786
TInstantObject.RestoreState
RestoreState;RestoreState,TInstantObject;TInstantObject,RestoreState



Imported
main

RestoreState;RestoreState_Method;TInstantObject_RestoreState
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.RestoreState \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8830\}
\par \pard\sb25\sa85\tx1435\fs18 Restores the state of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  RestoreState; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 RestoreState restores the state of the instance. RestoreState is called automatically. Do not call it explicitly in your applications.
\par 
\par }
8830
ID_863





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.SaveState\strike0\{linkID=8860>main\}
\par \strike TInstantObject.ApplyState\strike0\{linkID=7950>main\}
\par }
8840
ID_787
TInstantObject.Retrieve
Retrieve;Retrieve,TInstantObject;TInstantObject,Retrieve



Imported
main

Retrieve;Retrieve_Method;TInstantObject_Retrieve
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Retrieve \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8850\}
\par \pard\sb25\sa85\tx1435\fs18 Constructor that retrieves an existing instance from the database.
\par \pard\sb25\sa25\tx1435\b\f1 constructor\b0  Retrieve(\b const\b0  AObjectId: \b string\b0 ; CreateIfMissing: Boolean; \strike Refresh\strike0\{linkID=8740>main\}: Boolean; AConnector: \strike TInstantConnector\strike0\{linkID=3780>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Retrieve to retrieve an existing instance of a \strike TInstantObject\strike0\{linkID=7240>main\} descendant. Use the AObjectId argument to specify the \strike Id\strike0\{linkID=7420>main\} of the object that should be retrieved. If the object does not exist in the database, the CreateIfMissing argument can be set to True to enable creation of a new instance with the specified \strike Id\strike0\{linkID=7420>main\} instead. The \strike Refresh\strike0\{linkID=8740>main\} argument can be set to True to specify that if the object has already been retrieved from the database and resides in memory, it should be refreshed. The AConnector argument can optionally be used to specify the connector associated with the instance. If AConnector is not assigned, the default connector is used for the newly created instance. If also no default \strike Connector\strike0\{linkID=7380>main\} is specified, an exception is raised.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  Instances of \strike TInstantObject\strike0\{linkID=7240>main\} descendants exist only in one instance in memory. In order for the reference tracking mechanism to work correctly, no custom Retrieve constructors must be introduced in descendant classes.
\par 
\par }
8850
ID_864





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Create\strike0\{linkID=8320>main\}
\par \strike TInstantObject.Clone\strike0\{linkID=8280>main\}
\par }
8860
ID_788
TInstantObject.SaveState
SaveState;SaveState,TInstantObject;TInstantObject,SaveState



Imported
main

SaveState;SaveState_Method;TInstantObject_SaveState
FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.SaveState \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8870\}
\par \pard\sb25\sa85\tx1435\fs18 Saves the state of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  SaveState; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 SaveState saves the state of the instance. The state of the instance denotes the values of:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab The \strike IsChanged\strike0\{linkID=7450>main\} property
\par \{bmct bm3.BMP\}\tab The \strike UpdateCount\strike0\{linkID=7660>main\} property
\par \{bmct bm3.BMP\}\tab The \strike PersistentId\strike0\{linkID=7620>main\} property
\par \pard\sb25\sa25\tx495 
\par SaveState is called automatically. Do not call it explicitly in your applications.
\par 
\par }
8870
ID_865





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.ApplyState\strike0\{linkID=7950>main\}
\par \strike TInstantObject.RestoreState\strike0\{linkID=8820>main\}
\par }
8880
ID_57
TInstantObject.Store
Store;Store,TInstantObject;TInstantObject,Store



Imported
main

Store;Store_Method;TInstantObject_Store
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Store \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8890\}
\par \pard\sb25\sa85\tx1435\fs18 Stores an object in the database
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Store(ConflictAction: \strike TInstantConflictAction\strike0\{linkID=12030>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Store stores the instance in the database. If the instance has not yet been stored a new instance is added to the database. Otherwise the existing instance is updated. Immediately before and after performing the store of the instance, Store calls the \strike BeforeStore\strike0\{linkID=8140>main\} and \strike AfterStore\strike0\{linkID=7930>main\} methods. If the instance is owned, the owner is requested to Store itself. The ConflictAction argument specifies how the store operation should respond to conflicts.
\par 
\par }
8890
ID_866





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Dispose\strike0\{linkID=8420>main\}
\par }
8900
ID_789
TInstantObject.Unchanged
TInstantObject,Unchanged;Unchanged;Unchanged,TInstantObject



Imported
main

TInstantObject_Unchanged;Unchanged;Unchanged_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Unchanged \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link= ID_170>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Marks the instance as unchanged.
\par \pard\sb25\sa25\b\f1 procedure\b0  Unchanged;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Unchanged marks the instance as unchanged by setting its \strike IsChanged\strike0\{linkID=7450>main\} property to False. It should normally not be necessary to call Unchanged directly since it is called automatically if an instance is no longer changed.
\par 
\par }
8910
ID_790
TInstantObject.VerifyOperation
TInstantObject,VerifyOperation;VerifyOperation;VerifyOperation,TInstantObject



Imported
main

TInstantObject_VerifyOperation;VerifyOperation;VerifyOperation_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.VerifyOperation \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8920\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically to verify that an operation may be carried out.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  VerifyOperation(OperationType: \strike TInstantOperationType\strike0\{linkID=12340>main\}): \strike TInstantVerificationResult\strike0\{linkID=12420>main\}; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 VerifyOperation is called automatically to verify that a specific operation may be carried out. Do not call it explicitly in your applications. The VerifyOperation implemented in \strike TInstantObject\strike0\{linkID=7240>main\} does nothing. Override this method when creating a class that needs to verify operations before they are carried out. The method returns vrOk by default.
\par 
\par }
8920
ID_867





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.IsOperationAllowed\strike0\{linkID=8670>main\}
\par }
8930
ID_719
TInstantObject.OnAfterContentChange
OnAfterContentChange;OnAfterContentChange,TInstantObject;TInstantObject,OnAfterContentChange



Imported
main

OnAfterContentChange;OnAfterContentChange_Event;TInstantObject_OnAfterContentChange
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OnAfterContentChange \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8940\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs after the content of a container has changed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnAfterContentChange: \strike TInstantContentChangeEvent\strike0\{linkID=12070>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnAfterContentChange event handler to take specific action after the content of a container of the instance has changed. The event does not occur if \strike DisableChanges\strike0\{linkID=8390>main\} has been called.
\par 
\par }
8940
ID_869





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterContentChange\strike0\{linkID=7810>main\}
\par }
8950
ID_720
TInstantObject.OnAttributeChanged
OnAttributeChanged;OnAttributeChanged,TInstantObject;TInstantObject,OnAttributeChanged



Imported
main

OnAttributeChanged;OnAttributeChanged_Event;TInstantObject_OnAttributeChanged
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OnAttributeChanged \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{link=ID_170>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the value of an attribute has changed.
\par \pard\sb25\sa25\b\f1 property\b0  OnAttributeChanged: \strike TInstantAttributeChangeEvent\strike0\{linkID=11970>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnAttributeChanged event handler to take specific action immediately after an attribute of the instance has changed. The Sender argument contains a reference to the object which the changed attribute, specified by the Attribute argument, belongs to. The event does not occur if \strike DisableChanges\strike0\{linkID=8390>main\} has been called.
\par 
\par }
8960
ID_721
TInstantObject.OnBeforeContentChange
OnBeforeContentChange;OnBeforeContentChange,TInstantObject;TInstantObject,OnBeforeContentChange



Imported
main

OnBeforeContentChange;OnBeforeContentChange_Event;TInstantObject_OnBeforeContentChange
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OnBeforeContentChange \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8970\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs before the content of a container is changed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnBeforeContentChange: \strike TInstantContentChangeEvent\strike0\{linkID=12070>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnBeforeContentChange event handler to take specific action before the content of a container of the instance is changed. The event does not occur if \strike DisableChanges\strike0\{linkID=8390>main\} has been called.
\par 
\par }
8970
ID_872





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterContentChange\strike0\{linkID=7810>main\}
\par }
8980
ID_722
TInstantObject.OnChange
OnChange;OnChange,TInstantObject;TInstantObject,OnChange



Imported
main

OnChange;OnChange_Event;TInstantObject_OnChange
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OnChange \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=8990\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs when the instance is changed
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnChange: \strike TInstantNotifyEvent\strike0\{linkID=12320>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnChange event handler to take specific action immediately after the instance has changed. The Sender argument contains a reference to the changed instance. The event does not occur if \strike DisableChanges\strike0\{linkID=8390>main\} has been called.
\par 
\par }
8990
ID_873





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Changed\strike0\{linkID=8180>main\}
\par \strike TInstantObject.DisableChanges\strike0\{linkID=8390>main\}
\par }
9000
ID_723
TInstantObject.OnError
OnError;OnError,TInstantObject;TInstantObject,OnError



Imported
main

OnError;OnError_Event;TInstantObject_OnError
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OnError \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantObject\strike0\{linkID=7240>main\}\tab\ul See Also\ulnone\{linkID=9010\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs when the instance encounters an error during a store, dispose or refresh operation.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnError: \strike TInstantErrorEvent\strike0\{linkID=12150>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnError event handler to respond to errors that arise when storing, disposing or refreshing an instance.
\par 
\par }
9010
ID_875





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.HandleError\strike0\{linkID=8590>main\}
\par }
9020
ID_877
TInstantOwnedCollection
TInstantOwnedCollection



Imported
main

TInstantOwnedCollection;TInstantOwnedCollection_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantOwnedCollection \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=9030\}\tab\strike Members\strike0\{linkID=9080>nav\}\tab\strike Methods\strike0\{linkID=9070>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantOwnedCollection is a collection that has an owner.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantOwnedCollection = \b class\b0 (\strike TInstantCollection\strike0\{linkID=2980>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Use TInstantOwnedCollection to either create collection instances that has an owned, or descend from TInstantOwnedCollection to create collection classes that has an owner.
\par 
\par }
9030
ID_878





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TCollection
\par \pard\li95\tx355\tab |
\par \strike TInstantCollection\strike0\{linkID=2980>main\}
\par \tab |
\par \strike TInstantOwnedCollection\strike0\{linkID=9020>main\}
\par 
\par }
9040
ID_881





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantOwnedCollection Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantOwnedCollection\strike0\{linkID=9020>main\}
\par 
\par }
9050
ID_882





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantOwnedCollection Properties\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike TInstantOwnedCollection\strike0\{linkID=9020>main\}
\par 
\par }
9060
ID_883





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantOwnedCollection Events \b0\{keepn\}\cf1\fs16 
\par \strike TInstantOwnedCollection\strike0\{linkID=9020>main\}
\par 
\par }
9070
ID_880





Imported



FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantOwnedCollection Methods \cf1\b0\fs16 
\par \strike TInstantOwnedCollection\strike0\{link=ID_877>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantOwnedCollection
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Owner\strike0\{linkID=9090>main\}
\par \pard\sb55\sa55\b TInstantCollection
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Find\strike0\{linkID=3050>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetItemNames\strike0\{linkID=3060>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function IndexOf(const AName: string): Integer; overload;\strike0\{linkID=3070>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function IndexOf(Item: TInstantCollectionItem): Integer; overload;\strike0\{linkID=3080>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=3090>main\}
\par 
\par }
9080
ID_879





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantOwnedCollection Members \cf1\b0\fs16 
\par \strike TInstantOwnedCollection\strike0\{link=ID_877>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Owner\strike0\{linkID=9090>main\}
\par 
\par }
9090
ID_884
TInstantOwnedCollection.Owner
Owner;Owner,TInstantOwnedCollection;TInstantOwnedCollection,Owner



Imported
main

Owner;Owner_Method;TInstantOwnedCollection_Owner
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantOwnedCollection.Owner \cf1\b0\fs16 
\par \strike TInstantOwnedCollection\strike0\{link= ID_877>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Indicates the owner of the collection.
\par \pard\sb25\sa25\b\f1 function\b0  Owner: TPersistent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Owner to determine the owner of the collection. Although no assumptions can be made, the owner is usually the object that is responsible for creating and destroying the collection.
\par 
\par }
9100
ID_172
TInstantPart
TInstantPart



Imported
main

TInstantPart;TInstantPart_Object
FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantPart \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\tx5755\ul Hierarchy\ulnone\{linkID=9130\}\tab\strike Members\strike0\{linkID=9200>nav\}\tab\strike Methods\strike0\{linkID=9180>nav\}\tab\ul See Also\ulnone\{linkID=9110\}\tab\strike Example 1\strike0\{linkID=9120>example\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 TInstantPart represents a part relationship to a single object.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\f1 TInstantPart = \b class\b0 (\strike TInstantElement\strike0\{linkID=5900>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantPart represents a part relationship to a single object. TInstantPart mainly implements functionality that has been introduced by its abstract ancestors. TInstantPart claims responsibility of an object that is set as its Value. This means that even though the reference to a particular object has been created independently of the part attribute, it is taken over and eventually destroyed by the part attribute if the object is set as the Value of the part attribute.
\par When attempting to get an unassigned Value of a part attribute, an instance of the class type specified by the RequiredClass property is created and returned by the part attribute. This implies that the Value of a part attribute is always assigned.
\par If the part attribute is owned, the owner of the part attribute will become the owner of the part object. When a part object is changed it notifies its owner.
\par Part Objects are retrieved from the database when their owning object is retrieved.
\par \pard\fi-195\li195\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b Note: \b0  Objects that serve as parts should be considered as integrated, replaceable entities of their owner. An object can participate in only one part relationship at the time. If the owner object is stored, disposed or refreshed, it is supposed cascade the store, dispose or refresh operation to its part objects.
\par 
\par }
9110
ID_888





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReference\strike0\{linkID=9370>main\}
\par }
9120
ID_889
TInstantPart, Example 1
TInstantPart, Example 1



Imported
example


FALSE
22
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantPart\strike0\{link=ID_172>main\}\{keepn\} 
\par \pard\keep\f1\fs18 Setting the value of a part attribute. Note that the created Obj instance is
\par only destroyed if an error occurs when setting the value of the part
\par attribute. Otherwise the reference is taken over by the part attribute.
\par 
\par procedure CreatePartObject(AClass: TInstantObjectClass; Part: TInstantPart);
\par var
\par   Obj: \strike TInstantObject\strike0\{linkID=7240>main\};
\par begin
\par   Obj := AClass.Create;
\par   try
\par     Part.Value := Obj;
\par   except
\par     Obj.Free;
\par     raise;
\par   end;
\par end;
\par 
\par }
9130
ID_885





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3200>main\}
\par \tab |
\par \strike TInstantElement\strike0\{linkID=5900>main\}
\par \tab |
\par \strike TInstantPart\strike0\{linkID=9100>main\}
\par 
\par }
9140
ID_890





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantPart Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantPart\strike0\{linkID=9100>main\}
\par 
\par }
9150
ID_891





Imported



FALSE
32
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantPart Properties \cf1\b0\fs16 
\par \strike TInstantPart\strike0\{linkID=9100>main\}\tab\ul Legend\ulnone\{link=ID_892\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantElement
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=6000>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3330>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3350>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
9160
ID_892





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
9170
ID_893





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantPart Events \b0\{keepn\}\cf1\fs16 
\par \strike TInstantPart\strike0\{linkID=9100>main\}
\par 
\par }
9180
ID_887





Imported



FALSE
32
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantPart Methods \cf1\b0\fs16 
\par \strike TInstantPart\strike0\{linkID=9100>main\}\tab\ul Legend\ulnone\{link=ID_896\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantPart
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=9220>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=9230>main\}
\par \pard\sb55\sa55\tx355\b TInstantElement
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=6010>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=6020>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=6030>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike LoadObjectFromStream\strike0\{linkID=6040>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike SaveObjectToStream\strike0\{linkID=6060>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3370>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3380>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3390>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
9190
ID_896





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
9200
ID_886





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantPart Members \cf1\b0\fs16 
\par \strike TInstantPart\strike0\{linkID=9100>main\}\tab\ul Legend\ulnone\{link=ID_897\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=9220>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=9230>main\}
\par 
\par }
9210
ID_897





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
9220
ID_894
TInstantPart.HasValue
HasValue;HasValue,TInstantPart;TInstantPart,HasValue



Imported
main

HasValue;HasValue_Method;TInstantPart_HasValue
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantPart.HasValue \cf1\b0\fs16 
\par \strike TInstantPart\strike0\{link= ID_172>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines if the instance has been instantiated.
\par \pard\sb25\sa25\b\f1 function\b0  HasValue: Boolean; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasValue to determine if the instance associated with the element attribute has been instantiated. If the instance has been instantiated, HasValue returns True.
\par 
\par }
9230
ID_895
TInstantPart.Unchanged
TInstantPart,Unchanged;Unchanged;Unchanged,TInstantPart



Imported
main

TInstantPart_Unchanged;Unchanged;Unchanged_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantPart.Unchanged \cf1\b0\fs16 
\par \strike TInstantPart\strike0\{link= ID_172>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Marks the attribute as unchanged.
\par \pard\sb25\sa25\b\f1 procedure\b0  Unchanged; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Unchanged marks the attribute as unchanged by setting its IsChanged property to False. It should normally not be necessary to call Unchanged directly since it is called automatically if an attribute is no longer changed.
\par 
\par }
9240
ID_176
TInstantParts
TInstantParts



Imported
main

TInstantParts;TInstantParts_Object
FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantParts \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\tx5755\ul Hierarchy\ulnone\{linkID=9270\}\tab\strike Members\strike0\{linkID=9340>nav\}\tab\strike Methods\strike0\{linkID=9320>nav\}\tab\ul See Also\ulnone\{linkID=9250\}\tab\strike Example 1\strike0\{linkID=9260>example\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 TInstantParts represents a part relationship to multiple objects.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\f1 TInstantParts = \b class\b0 (\strike TInstantContainer\strike0\{linkID=4310>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantParts represents a part relationship to multiple object. TInstantParts mainly implements functionality that has been introduced by its abstract ancestors. TInstantParts claims responsibility of an object that is added to its array of objects. This means that even though the reference to a particular object has been created independently of the parts attribute, it is taken over and eventually destroyed by the parts attribute if the object is added to the parts attributes array of objects.
\par If the parts attribute is owned, the owner of the parts attribute will become the owner of the part object. When a part object is changed it notifies its owner.
\par Part Objects are retrieved from the database when their owning object is retrieved.
\par \pard\fi-195\li195\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b Note: \b0  Objects that serve as parts should be considered as integrated, replaceable entities of their owner. An object can participate in only one part relationship at the time. If the owner object is stored, disposed or refreshed, it is supposed cascade the store, dispose or refresh operation to its part objects.
\par 
\par }
9250
ID_901





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReferences\strike0\{linkID=9630>main\}
\par }
9260
ID_902
TInstantParts, Example 1
TInstantParts, Example 1



Imported
example


FALSE
23
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantParts\strike0\{link= ID_176>main\}\{keepn\}
\par \pard\keep\f1\fs18 Adding an object to the parts attributes array of objects. Note that the
\par created Obj instance is only destroyed if an error occurs when adding it to
\par the parts attributes array of objects. Otherwise the reference is taken over
\par by the parts attribute.
\par 
\par procedure CreatePartsObject(AClass: TInstantObjectClass; Parts: TInstantParts);
\par var
\par   Obj: \strike TInstantObject\strike0\{linkID=7240>main\};
\par begin
\par   Obj := AClass.Create;
\par   try
\par     Parts.Add(Obj);
\par   except
\par     Obj.Free;
\par     raise;
\par   end;
\par end;
\par 
\par }
9270
ID_898





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3200>main\}
\par \tab |
\par \strike TInstantContainer\strike0\{linkID=4310>main\}
\par \tab |
\par \strike TInstantParts\strike0\{linkID=9240>main\}
\par 
\par }
9280
ID_903





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantParts Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantParts\strike0\{linkID=9240>main\}
\par 
\par }
9290
ID_904





Imported



FALSE
34
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantParts Properties \cf1\b0\fs16 
\par \strike TInstantParts\strike0\{linkID=9240>main\}\tab\ul Legend\ulnone\{link=ID_905\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantContainer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ChangeCount\strike0\{linkID=4410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Count\strike0\{linkID=4420>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Items\strike0\{linkID=4440>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3330>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3350>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
9300
ID_905





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
9310
ID_906





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantParts Events \b0\{keepn\}\cf1\fs16 
\par \strike TInstantParts\strike0\{linkID=9240>main\}
\par 
\par }
9320
ID_900





Imported



FALSE
40
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantParts Methods \cf1\b0\fs16 
\par \strike TInstantParts\strike0\{linkID=9240>main\}\tab\ul Legend\ulnone\{link=ID_908\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantParts
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=9360>main\}
\par \pard\sb55\sa55\tx355\b TInstantContainer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Add\strike0\{linkID=4460>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=4480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=4490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Delete\strike0\{linkID=4500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=4520>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Exchange\strike0\{linkID=4530>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasItem\strike0\{linkID=4550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOf\strike0\{linkID=4560>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Insert\strike0\{linkID=4570>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadObjectsFromStream\strike0\{linkID=4590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Move\strike0\{linkID=4610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=4630>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveObjectsToStream\strike0\{linkID=4650>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Sort\strike0\{linkID=4670>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3370>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3380>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3390>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
9330
ID_908





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
9340
ID_899





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantParts Members \cf1\b0\fs16 
\par \strike TInstantParts\strike0\{linkID=9240>main\}\tab\ul Legend\ulnone\{link=ID_909\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=9360>main\}
\par 
\par }
9350
ID_909





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
9360
ID_907
TInstantParts.Unchanged
TInstantParts,Unchanged;Unchanged;Unchanged,TInstantParts



Imported
main

TInstantParts_Unchanged;Unchanged;Unchanged_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantParts.Unchanged \cf1\b0\fs16 
\par \strike TInstantParts\strike0\{link= ID_176>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Marks the attribute as unchanged.
\par \pard\sb25\sa25\b\f1 procedure\b0  Unchanged; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Unchanged marks the attribute as unchanged by setting its IsChanged property to False. It should normally not be necessary to call Unchanged directly since it is called automatically if an attribute is no longer changed.
\par 
\par }
9370
ID_174
TInstantReference
TInstantReference



Imported
main

TInstantReference;TInstantReference_Object
FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\tx5755\tx7195\ul Hierarchy\ulnone\{linkID=9400\}\tab\strike Members\strike0\{linkID=9470>nav\}\tab\strike Properties\strike0\{linkID=9420>nav\}\tab\strike Methods\strike0\{linkID=9450>nav\}\tab\ul See Also\ulnone\{linkID=9380\}\tab\strike Example 1\strike0\{linkID=9390>example\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\tx7195\fs18 TInstantReference represents a reference relationship to a single object.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\f1 TInstantReference = \b class\b0 (\strike TInstantElement\strike0\{linkID=5900>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\b0 TInstantReference represents a reference relationship to a single object. Although TInstantReference introduces properties and methods that can be used to reference objects, it mainly implements functionality that has been introduced by its abstract ancestors.
\par TInstantReference takes its own reference to an object that is set as its Value. This means that an object that has been created independently of the reference attribute should also be destroyed independently of the reference attribute even though it has been set as its Value.
\par The Value of a reference attribute may be unassigned.
\par Reference relationships may be heterogeneous. This means that an object may reference objects that are stored in another database. The Connector property of TInstantReference is therefore writeable. To enable this distributed behavior the Connector property should simply be assigned to a Connector object that connects to the right database.
\par Referenced objects are retrieved on demand. This means that the reference attribute will not retrieve the object it references until it is required. If a reference attribute references a non-existing object its Value property is nil.
\par \pard\fi-195\li195\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\b Note: \b0  Referenced Objects should be considered as loosely coupled entities of other objects. No ownership is claimed by the object that defines the reference relationship. This implies that an object can participate in as many reference relationships, as it is required. Referenced objects are neither stored, disposed nor refreshed by the objects they are referenced by. If an object is owned, it cannot participate in a reference relationship.
\par 
\par }
9380
ID_914





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantPart\strike0\{linkID=9100>main\}
\par }
9390
ID_915
TInstantReference, Example 1
TInstantReference, Example 1



Imported
example


FALSE
21
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{link= ID_174>main\}\{keepn\}
\par \pard\keep\f1\fs18 Setting the value of a reference attribute. Note that the created Obj
\par instance is always destroyed. The reference attribute takes its own reference
\par to the object.
\par 
\par procedure CreateReferenceObject(AClass: TInstantObjectClass; Ref: TInstantReference);
\par var
\par   Obj: \strike TInstantObject\strike0\{linkID=7240>main\};
\par begin
\par   Obj := AClass.Create;
\par   try
\par     Ref.Value := Obj;
\par   finally
\par     Obj.Free;
\par   end;
\par end;
\par 
\par }
9400
ID_910





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3200>main\}
\par \tab |
\par \strike TInstantElement\strike0\{linkID=5900>main\}
\par \tab |
\par \strike TInstantReference\strike0\{linkID=9370>main\}
\par 
\par }
9410
ID_916





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReference Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantReference\strike0\{linkID=9370>main\}
\par 
\par }
9420
ID_912





Imported



FALSE
38
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReference Properties \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9370>main\}\tab\ul Legend\ulnone\{link=ID_922\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantReference
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm7.BMP\} \strike AllowOwned\strike0\{linkID=9490>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsBroken\strike0\{linkID=9500>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectClass\strike0\{linkID=9510>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectClassName\strike0\{linkID=9530>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectId\strike0\{linkID=9550>main\}
\par \pard\sb55\sa55\tx355\b TInstantElement
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=6000>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3330>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3350>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
9430
ID_922





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par \{bmct bm7.BMP\} write only
\par 
\par }
9440
ID_923





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantReference Events\b0\{keepn\}\b  \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9370>main\}
\par 
\par }
9450
ID_913





Imported



FALSE
36
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReference Methods \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9370>main\}\tab\ul Legend\ulnone\{link=ID_930\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantReference
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DestroyObject\strike0\{linkID=9570>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasReference\strike0\{linkID=9580>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=9590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure ReferenceObject(AObjectClass: TInstantObjectClass; const AObjectId: string); overload;\strike0\{linkID=9600>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure ReferenceObject(const AObjectClassName: string; const AObjectId: string); overload;\strike0\{linkID=9610>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=9620>main\}
\par \pard\sb55\sa55\tx355\b TInstantElement
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=6010>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=6020>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=6030>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike LoadObjectFromStream\strike0\{linkID=6040>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike SaveObjectToStream\strike0\{linkID=6060>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3370>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3380>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3390>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
9460
ID_930





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
9470
ID_911





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReference Members \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9370>main\}\tab\ul Legend\ulnone\{link=ID_931\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm7.BMP\} \strike AllowOwned\strike0\{linkID=9490>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsBroken\strike0\{linkID=9500>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectClass\strike0\{linkID=9510>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectClassName\strike0\{linkID=9530>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectId\strike0\{linkID=9550>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DestroyObject\strike0\{linkID=9570>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasReference\strike0\{linkID=9580>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=9590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure ReferenceObject(AObjectClass: TInstantObjectClass; const AObjectId: string); overload;\strike0\{linkID=9600>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure ReferenceObject(const AObjectClassName: string; const AObjectId: string); overload;\strike0\{linkID=9610>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=9620>main\}
\par 
\par }
9480
ID_931





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par \{bmct bm7.BMP\} write only
\par 
\par }
9490
ID_917
TInstantReference.AllowOwned
AllowOwned;AllowOwned,TInstantReference;TInstantReference,AllowOwned



Imported
main

AllowOwned;AllowOwned_Property;TInstantReference_AllowOwned
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.AllowOwned \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{link=ID_174>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies whether the attribute should allow owned objects.
\par \pard\sb25\sa25\b\f1 property\b0  AllowOwned;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use AllowOwned to specify if the attribute should allow owned objects. When adding an object that is owned, dependence is created to an object that is internally managed by another instance. The default value of AllowOwned is False.
\par 
\par }
9500
ID_918
TInstantReference.IsBroken
IsBroken;IsBroken,TInstantReference;TInstantReference,IsBroken



Imported
main

IsBroken;IsBroken_Property;TInstantReference_IsBroken
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.IsBroken \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{link= ID_174>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines if the referenced object exists.
\par \pard\sb25\sa25\b\f1 property\b0  IsBroken: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use IsBroken to determine if the referenced object exists. If the object doesn't exist, IsBroken returns True.
\par 
\par }
9510
ID_919
TInstantReference.ObjectClass
ObjectClass;ObjectClass,TInstantReference;TInstantReference,ObjectClass



Imported
main

ObjectClass;ObjectClass_Property;TInstantReference_ObjectClass
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.ObjectClass \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantReference\strike0\{linkID=9370>main\}\tab\ul See Also\ulnone\{linkID=9520\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class type of the referenced object.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClass: TInstantObjectClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use ObjectClass to determine the class type of the referenced object.
\par 
\par }
9520
ID_932





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReference.ObjectClassName\strike0\{linkID=9530>main\}
\par \strike TInstantReference.ObjectId\strike0\{linkID=9550>main\}
\par }
9530
ID_920
TInstantReference.ObjectClassName
ObjectClassName;ObjectClassName,TInstantReference;TInstantReference,ObjectClassName



Imported
main

ObjectClassName;ObjectClassName_Property;TInstantReference_ObjectClassName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.ObjectClassName \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantReference\strike0\{linkID=9370>main\}\tab\ul See Also\ulnone\{linkID=9540\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class name for the referenced object.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClassName: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use ObjectClassName to determine the class name for the referenced object.
\par 
\par }
9540
ID_933





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReference.ObjectClass\strike0\{linkID=9510>main\}
\par \strike TInstantReference.ObjectId\strike0\{linkID=9550>main\}
\par }
9550
ID_921
TInstantReference.ObjectId
ObjectId;ObjectId,TInstantReference;TInstantReference,ObjectId



Imported
main

ObjectId;ObjectId_Property;TInstantReference_ObjectId
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.ObjectId \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantReference\strike0\{linkID=9370>main\}\tab\ul See Also\ulnone\{linkID=9560\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the Id of the referenced object.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectId: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use ObjectId to determine the Id of the referenced object.
\par 
\par }
9560
ID_934





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReference.ObjectClass\strike0\{linkID=9510>main\}
\par \strike TInstantReference.ObjectClassName\strike0\{linkID=9530>main\}
\par }
9570
ID_924
TInstantReference.DestroyObject
DestroyObject;DestroyObject,TInstantReference;TInstantReference,DestroyObject



Imported
main

DestroyObject;DestroyObject_Method;TInstantReference_DestroyObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.DestroyObject \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{link= ID_174>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Destroys the instance.
\par \pard\sb25\sa25\b\f1 procedure\b0  DestroyObject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call DestroyObject to destroy the instance associated with the reference attribute without clearing the reference.
\par 
\par }
9580
ID_925
TInstantReference.HasReference
HasReference;HasReference,TInstantReference;TInstantReference,HasReference



Imported
main

HasReference;HasReference_Method;TInstantReference_HasReference
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.HasReference \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{link= ID_174>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies whether the reference references an object
\par \pard\sb25\sa25\b\f1 function\b0  HasReference: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasReference to determine if the reference references an object. If HasReference is True, the reference references an object. Otherwise the reference doesn't reference an object
\par 
\par }
9590
ID_926
TInstantReference.HasValue
HasValue;HasValue,TInstantReference;TInstantReference,HasValue



Imported
main

HasValue;HasValue_Method;TInstantReference_HasValue
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.HasValue \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{link= ID_174>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines if the instance has been instantiated.
\par \pard\sb25\sa25\b\f1 function\b0  HasValue: Boolean; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasValue to determine if the instance associated with the element attribute has been instantiated. If the instance has been instantiated, HasValue returns True.
\par 
\par }
9600
ID_927
TInstantReference.ReferenceObject
ReferenceObject;ReferenceObject,TInstantReference;TInstantReference,ReferenceObject



Imported
main

ReferenceObject;ReferenceObject_Method;TInstantReference_ReferenceObject
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.ReferenceObject \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{link=ID_174>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Sets the reference of the attribute to point to another object.
\par \pard\sb25\sa25\b\f1 procedure\b0  \strike ReferenceObject\strike0\{linkID=9610>main\}(AObjectClass: TInstantObjectClass; \b const\b0  AObjectId: \b string\b0 ); \b overload\b0 ;
\par \b procedure\b0  \strike ReferenceObject\strike0\{linkID=9610>main\}(\b const\b0  AObjectClassName: \b string\b0 ; \b const\b0  AObjectId: \b string\b0 ); \b overload\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Reference object to make the attribute reference another object.
\par 
\par }
9610
ID_928
TInstantReference.ReferenceObject
ReferenceObject;ReferenceObject,TInstantReference;TInstantReference,ReferenceObject



Imported
main

ReferenceObject;ReferenceObject_Method;TInstantReference_ReferenceObject
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.ReferenceObject \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{link= ID_174>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Sets the reference of the attribute to point to another object.
\par \pard\sb25\sa25\b\f1 procedure\b0  ReferenceObject(AObjectClass: TInstantObjectClass; \b const\b0  AObjectId: \b string\b0 ); \b overload\b0 ;
\par \b procedure\b0  ReferenceObject(\b const\b0  AObjectClassName: \b string\b0 ; \b const\b0  AObjectId: \b string\b0 ); \b overload\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Reference object to make the attribute reference another object.
\par 
\par }
9620
ID_929
TInstantReference.Reset
Reset;Reset,TInstantReference;TInstantReference,Reset



Imported
main

Reset;Reset_Method;TInstantReference_Reset
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.Reset \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{link= ID_174>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Resets the actual value of the attribute to the initialization value.
\par \pard\sb25\sa25\b\f1 procedure\b0  Reset; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Reset to reset the value of the attribute to its initialization value. Reset calls Initialize to do the initialization.
\par 
\par }
9630
ID_178
TInstantReferences
TInstantReferences



Imported
main

TInstantReferences;TInstantReferences_Object
FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReferences \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\tx5755\tx7195\ul Hierarchy\ulnone\{linkID=9660\}\tab\strike Members\strike0\{linkID=9730>nav\}\tab\strike Properties\strike0\{linkID=9680>nav\}\tab\strike Methods\strike0\{linkID=9710>nav\}\tab\ul See Also\ulnone\{linkID=9640\}\tab\strike Example 1\strike0\{linkID=9650>example\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\tx7195\fs18 TInstantReferences represents a reference relationship to multiple objects.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\f1 TInstantReferences = \b class\b0 (\strike TInstantContainer\strike0\{linkID=4310>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\b0 TInstantReferences represents a reference relationship to multiple objects. \strike TInstantReference\strike0\{linkID=9370>main\} mainly implements functionality that has been introduced by its abstract ancestors.
\par TInstantReferences takes its own reference to an object that is added to its array of objects. This means that an object that has been created independently of the references attribute should also be destroyed independently of the references attribute even though it has been added to its array of objects.
\par Reference relationships may be heterogeneous. This means that an object may reference objects that are stored in another database. The Connector property of TInstantReferences is therefore writeable. To enable this distributed behavior the Connector property should simply be assigned to a Connector object that connects to the right database.
\par Referenced objects are retrieved on demand. This means that the references attribute will not retrieve the objects it references until they are required individually. If a references attribute references a non-existing object, the position the object occupies in the attributes array of objects will be nil.
\par \pard\fi-195\li195\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\b Note: \b0  Referenced Objects should be considered as loosely coupled entities of other objects. No ownership is claimed by the object that defines the reference relationship. This implies that an object can participate in as many reference relationships, as it is required. Referenced objects are neither stored, disposed nor refreshed by the objects they are referenced by. If an object is owned, it cannot participate in a reference relationship.
\par 
\par }
9640
ID_939





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantParts\strike0\{linkID=9240>main\}
\par }
9650
ID_940
TInstantReferences, Example 1
TInstantReferences, Example 1



Imported
example


FALSE
21
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantReferences\strike0\{link=ID_178>main\}\{keepn\} 
\par \pard\keep\f1\fs18 Adding an object to the references attributes array of objects. Note that the
\par created Obj instance is always destroyed. The references attribute takes its
\par own reference to the object.
\par 
\par procedure CreateReferencesObject(AClass: TInstantObjectClass; Ref: TInstantReferences);
\par var
\par   Obj: \strike TInstantObject\strike0\{linkID=7240>main\};
\par begin
\par   Obj := AClass.Create;
\par   try
\par     Ref.Add(Obj);
\par   finally
\par     Obj.Free;
\par   end;
\par end;
\par 
\par }
9660
ID_935





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3200>main\}
\par \tab |
\par \strike TInstantContainer\strike0\{linkID=4310>main\}
\par \tab |
\par \strike TInstantReferences\strike0\{linkID=9630>main\}
\par 
\par }
9670
ID_941





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReferences Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantReferences\strike0\{linkID=9630>main\}
\par 
\par }
9680
ID_937





Imported



FALSE
36
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReferences Properties \cf1\b0\fs16 
\par \strike TInstantReferences\strike0\{linkID=9630>main\}\tab\ul Legend\ulnone\{link=ID_943\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantReferences
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm7.BMP\} \strike AllowOwned\strike0\{linkID=9750>main\}
\par \pard\sb55\sa55\tx355\b TInstantContainer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ChangeCount\strike0\{linkID=4410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Count\strike0\{linkID=4420>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Items\strike0\{linkID=4440>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3330>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3350>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
9690
ID_943





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par \{bmct bm7.BMP\} write only
\par 
\par }
9700
ID_944





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantReferences Events \b0\{keepn\}\cf1\fs16 
\par \strike TInstantReferences\strike0\{linkID=9630>main\}
\par 
\par }
9710
ID_938





Imported



FALSE
42
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReferences Methods \cf1\b0\fs16 
\par \strike TInstantReferences\strike0\{linkID=9630>main\}\tab\ul Legend\ulnone\{link=ID_948\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantReferences
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DestroyObject\strike0\{linkID=9760>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadReferencesFromStream\strike0\{linkID=9770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveReferencesToStream\strike0\{linkID=9790>main\}
\par \pard\sb55\sa55\tx355\b TInstantContainer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Add\strike0\{linkID=4460>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=4480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=4490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Delete\strike0\{linkID=4500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=4520>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Exchange\strike0\{linkID=4530>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasItem\strike0\{linkID=4550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOf\strike0\{linkID=4560>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Insert\strike0\{linkID=4570>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadObjectsFromStream\strike0\{linkID=4590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Move\strike0\{linkID=4610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=4630>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveObjectsToStream\strike0\{linkID=4650>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Sort\strike0\{linkID=4670>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3370>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3380>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3390>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
9720
ID_948





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
9730
ID_936





Imported



FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReferences Members \cf1\b0\fs16 
\par \strike TInstantReferences\strike0\{linkID=9630>main\}\tab\ul Legend\ulnone\{link=ID_949\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm7.BMP\} \strike AllowOwned\strike0\{linkID=9750>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DestroyObject\strike0\{linkID=9760>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadReferencesFromStream\strike0\{linkID=9770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveReferencesToStream\strike0\{linkID=9790>main\}
\par 
\par }
9740
ID_949





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par \{bmct bm7.BMP\} write only
\par 
\par }
9750
ID_942
TInstantReferences.AllowOwned
AllowOwned;AllowOwned,TInstantReferences;TInstantReferences,AllowOwned



Imported
main

AllowOwned;AllowOwned_Property;TInstantReferences_AllowOwned
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReferences.AllowOwned \cf1\b0\fs16 
\par \strike TInstantReferences\strike0\{link= ID_178>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies whether the attribute should allow owned objects.
\par \pard\sb25\sa25\b\f1 property\b0  AllowOwned;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use AllowOwned to specify if the attribute should allow owned objects. When adding an object that is owned, dependence is created to an object that is internally managed by another instance. The default value of AllowOwned is False.
\par 
\par }
9760
ID_945
TInstantReferences.DestroyObject
DestroyObject;DestroyObject,TInstantReferences;TInstantReferences,DestroyObject



Imported
main

DestroyObject;DestroyObject_Method;TInstantReferences_DestroyObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReferences.DestroyObject \cf1\b0\fs16 
\par \strike TInstantReferences\strike0\{link= ID_178>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Destroys an instance in the items array.
\par \pard\sb25\sa25\b\f1 procedure\b0  DestroyObject(\b Index\b0 : Integer);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call DestroyObject to destroy the instance at the position specified by the Index argument in the Items array without clearing the reference.
\par 
\par }
9770
ID_946
TInstantReferences.LoadReferencesFromStream
LoadReferencesFromStream;LoadReferencesFromStream,TInstantReferences;TInstantReferences,LoadReferencesFromStream



Imported
main

LoadReferencesFromStream;LoadReferencesFromStream_Method;TInstantReferences_LoadReferencesFromStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReferences.LoadReferencesFromStream \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantReferences\strike0\{linkID=9630>main\}\tab\ul See Also\ulnone\{linkID=9780\}
\par \pard\sb25\sa85\tx1435\fs18 Loads object references from a stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  LoadReferencesFromStream(AStream: TStream);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call LoadReferencesFromStream to load the object references that the instance should contain from a stream.
\par 
\par }
9780
ID_950





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReferences.SaveReferencesToStream\strike0\{linkID=9790>main\}
\par }
9790
ID_947
TInstantReferences.SaveReferencesToStream
SaveReferencesToStream;SaveReferencesToStream,TInstantReferences;TInstantReferences,SaveReferencesToStream



Imported
main

SaveReferencesToStream;SaveReferencesToStream_Method;TInstantReferences_SaveReferencesToStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReferences.SaveReferencesToStream \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantReferences\strike0\{linkID=9630>main\}\tab\ul See Also\ulnone\{linkID=9800\}
\par \pard\sb25\sa85\tx1435\fs18 Saves object references to a stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  SaveReferencesToStream(AStream: TStream);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call SaveReferencesToStream to save the object references that the instance contains to a stream.
\par 
\par }
9800
ID_951





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReferences.LoadReferencesFromStream\strike0\{linkID=9770>main\}
\par }
9810
ID_105
TInstantRelationalConnector
TInstantRelationalConnector



Imported
main

TInstantRelationalConnector;TInstantRelationalConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantRelationalConnector \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=9820\}\tab\strike Members\strike0\{linkID=9890>nav\}\tab\strike Properties\strike0\{linkID=9840>nav\}\tab\strike Events\strike0\{linkID=9860>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\strike\f1 TInstantConnectorClass\strike0\{linkID=12060>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \strike TInstantConnector\strike0\{linkID=3780>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
9820
ID_952





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3780>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9810>main\}
\par 
\par }
9830
ID_956





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantRelationalConnector Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantRelationalConnector\strike0\{linkID=9810>main\}
\par 
\par }
9840
ID_954





Imported



FALSE
24
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantRelationalConnector Properties \cf1\b0\fs16 
\par \strike TInstantRelationalConnector\strike0\{linkID=9810>main\}\tab\ul Legend\ulnone\{link= ID_957\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=9910>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3880>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3900>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3940>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3970>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3990>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4090>main\}
\par 
\par }
9850
ID_957





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
9860
ID_955





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantRelationalConnector Events \cf1\b0\fs16 
\par \strike TInstantRelationalConnector\strike0\{linkID=9810>main\}\tab\ul Legend\ulnone\{link= ID_958\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=9920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=9940>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4300>main\}
\par 
\par }
9870
ID_958





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
9880
ID_959





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantRelationalConnector Methods \cf1\b0\fs16 
\par \strike TInstantRelationalConnector\strike0\{link=ID_105>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4170>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4280>main\}
\par 
\par }
9890
ID_953





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantRelationalConnector Members \cf1\b0\fs16 
\par \strike TInstantRelationalConnector\strike0\{linkID=9810>main\}\tab\ul Legend\ulnone\{link=ID_960\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=9910>main\}
\par \pard\sb55\sa55\tx355\b Events
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=9920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=9940>main\}
\par 
\par }
9900
ID_960





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
9910
ID_112
TInstantRelationalConnector.DBMSName
DBMSName;DBMSName,TInstantRelationalConnector;TInstantRelationalConnector,DBMSName



Imported
main

DBMSName;DBMSName_Property;TInstantRelationalConnector_DBMSName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantRelationalConnector.DBMSName \cf1\b0\fs16 
\par \strike TInstantRelationalConnector\strike0\{link= ID_105>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines the name of the DBMS the connector component connects to.
\par \pard\sb25\sa25\b\f1 property\b0  DBMSName: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use DBMSName to determine the name of the DBMS (Database management system) the connector component connects to.
\par 
\par }
9920
ID_129
TInstantRelationalConnector.OnGetDataSet
OnGetDataSet;OnGetDataSet,TInstantRelationalConnector;TInstantRelationalConnector,OnGetDataSet



Imported
main

OnGetDataSet;OnGetDataSet_Event;TInstantRelationalConnector_OnGetDataSet
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantRelationalConnector.OnGetDataSet \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantRelationalConnector\strike0\{linkID=9810>main\}\tab\ul See Also\ulnone\{linkID=9930\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs when the persistence mechanism request a dataset.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnGetDataSet: \strike TInstantGetDataSetEvent\strike0\{linkID=12260>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnGetDataSet event handler to supply dataset components to the persistence mechanism associated with the connector component.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  This event occurs only for persistence mechanisms that accesses the database through instances of TDataSet descendants.
\par 
\par }
9930
ID_961





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantRelationalConnector.OnInitDataSet\strike0\{linkID=9940>main\}
\par }
9940
ID_130
TInstantRelationalConnector.OnInitDataSet
OnInitDataSet;OnInitDataSet,TInstantRelationalConnector;TInstantRelationalConnector,OnInitDataSet



Imported
main

OnInitDataSet;OnInitDataSet_Event;TInstantRelationalConnector_OnInitDataSet
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantRelationalConnector.OnInitDataSet \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantRelationalConnector\strike0\{linkID=9810>main\}\tab\ul See Also\ulnone\{linkID=9950\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs when the persistence mechanism initializes a dataset.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnInitDataSet: \strike TInstantInitDataSetEvent\strike0\{linkID=12290>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an \strike OnGetDataSet\strike0\{linkID=9920>main\} event handler to initialize dataset components used by the persistence mechanism associated with the connector component.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  This event occurs only for persistence mechanisms that accesses the database through instances of TDataSet descendants.
\par 
\par }
9950
ID_963





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantRelationalConnector.OnGetDataSet\strike0\{linkID=9920>main\}
\par }
9960
ID_965
TInstantResourceStream
TInstantResourceStream



Imported
main

TInstantResourceStream;TInstantResourceStream_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantResourceStream \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=9970\}\tab\strike Members\strike0\{linkID=10020>nav\}\tab\strike Methods\strike0\{linkID=10010>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantResourceStream provides access to a compiled resource in the application.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantResourceStream = \b class\b0 (\strike TInstantStream\strike0\{linkID=10390>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Use TInstantResourceStream to access a resource of a Windows application. Like all \strike TInstantStream\strike0\{linkID=10390>main\} objects, TInstantResourceStream uses a source stream that handles the streaming. The Source stream of TInstantResourceStream is a TResourceStream object.
\par 
\par }
9970
ID_966





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TStream
\par \pard\li95\tx355\tab |
\par \strike TInstantStream\strike0\{linkID=10390>main\}
\par \tab |
\par \strike TInstantResourceStream\strike0\{linkID=9960>main\}
\par 
\par }
9980
ID_969





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantResourceStream Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantResourceStream\strike0\{linkID=9960>main\}
\par 
\par }
9990
ID_970





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantResourceStream Properties \cf1\b0\fs16 
\par \strike TInstantResourceStream\strike0\{link=ID_965>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FreeSource\strike0\{linkID=10460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Source\strike0\{linkID=10470>main\}
\par 
\par }
10000
ID_971





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantResourceStream Events \cf1\b0\fs16 
\par \strike TInstantResourceStream\strike0\{link= ID_965>main\}\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnProcessObject\strike0\{linkID=10670>main\}
\par 
\par }
10010
ID_968





Imported



FALSE
20
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantResourceStream Methods \cf1\b0\fs16 
\par \strike TInstantResourceStream\strike0\{link= ID_965>main\}\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantResourceStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10030>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateFromId\strike0\{linkID=10040>main\}
\par \pard\sb55\sa55\b TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AlignStream\strike0\{linkID=10490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObject\strike0\{linkID=10510>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObjectRes\strike0\{linkID=10530>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResHeader\strike0\{linkID=10550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResourceFileHeader\strike0\{linkID=10570>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObject\strike0\{linkID=10590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObjectRes\strike0\{linkID=10610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceFileHeader\strike0\{linkID=10630>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceHeader\strike0\{linkID=10650>main\}
\par 
\par }
10020
ID_967





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantResourceStream Members \cf1\b0\fs16 
\par \strike TInstantResourceStream\strike0\{link=ID_965>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10030>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateFromId\strike0\{linkID=10040>main\}
\par 
\par }
10030
ID_972
TInstantResourceStream.Create
Create;Create,TInstantResourceStream;TInstantResourceStream,Create



Imported
main

Create;Create_Method;TInstantResourceStream_Create
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantResourceStream.Create \cf1\b0\fs16 
\par \strike TInstantResourceStream\strike0\{link= ID_965>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Creates an instance of \strike TInstantResourceStream\strike0\{linkID=9960>main\} associated with a particular resource.
\par \pard\sb25\sa25\b\f1 constructor\b0  Create(Instance: THandle; \b const\b0  ResName: \b string\b0 ; ResType: PChar);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Create to instantiate a \strike TInstantResourceStream\strike0\{linkID=9960>main\}. The Instance argument specifies the handle associated with the executable or DLL. The Resname argument specifies the name of the resource. The ResType argument specifies the type of the resource. Windows provides a number of predefined resource types. Please refer to the Windows SDK online help for further information.
\par 
\par }
10040
ID_973
TInstantResourceStream.CreateFromId
CreateFromId;CreateFromId,TInstantResourceStream;TInstantResourceStream,CreateFromId



Imported
main

CreateFromId;CreateFromId_Method;TInstantResourceStream_CreateFromId
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantResourceStream.CreateFromId \cf1\b0\fs16 
\par \strike TInstantResourceStream\strike0\{link= ID_965>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Creates an instance of \strike TInstantResourceStream\strike0\{linkID=9960>main\} associated with a particular resource.
\par \pard\sb25\sa25\b\f1 constructor\b0  CreateFromId(Instance: THandle; ResID: Integer; ResType: PChar);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call \strike Create\strike0\{linkID=10030>main\} to instantiate a \strike TInstantResourceStream\strike0\{linkID=9960>main\}. The Instance argument specifies the handle associated with the executable or DLL. The ResId argument specifies the Id of the resource. The ResType argument specifies the type of the resource. Windows provides a number of predefined resource types. Please refer to the Windows SDK online help for further information.
\par 
\par }
10050
ID_417
TInstantSelector
TInstantSelector



Imported
main

TInstantSelector;TInstantSelector_Object
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=10070\}\tab\strike Members\strike0\{linkID=10150>nav\}\tab\strike Properties\strike0\{linkID=10090>nav\}\tab\ul See Also\ulnone\{linkID=10060\}\tab\strike Unit: InstantPresentation\strike0\{linkID=12870>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 TInstantSelector provides dataset-based access to a selection of objects.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantSelector = \b class\b0 (\strike TInstantCustomExposer\strike0\{linkID=4680>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantSelector exposes a selection of objects. The objects are selected by the means of a \strike Command\strike0\{linkID=10180>main\} statement. The selector is independent of the kind of database from which the selection is to be made. The syntax of the \strike Command\strike0\{linkID=10180>main\} statement is therefore also database independent. When peforming the selection, the \strike Command\strike0\{linkID=10180>main\} statement is parsed and translated to a statement that is understandable by the database to which the selector is connected through its \strike Connector\strike0\{linkID=10190>main\} property.
\par The selection of objects may be modified by adding or removing objects to and from the selector components array of objects.
\par 
\par }
10060
ID_977





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantExposer\strike0\{linkID=6300>main\}
\par }
10070
ID_974





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TDataSet
\par \pard\li95\tx355\tab |
\par \strike TInstantCustomExposer\strike0\{linkID=4680>main\}
\par \tab |
\par \strike TInstantSelector\strike0\{linkID=10050>main\}
\par 
\par }
10080
ID_980





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSelector Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantSelector\strike0\{linkID=10050>main\}
\par 
\par }
10090
ID_976





Imported



FALSE
34
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSelector Properties \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{linkID=10050>main\}\tab\ul Legend\ulnone\{link= ID_988\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantSelector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AutoOpen\strike0\{linkID=10170>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Command\strike0\{linkID=10180>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connector\strike0\{linkID=10190>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike MaxCount\strike0\{linkID=10200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ObjectClass\strike0\{linkID=10210>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ObjectClassName\strike0\{linkID=10230>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ParamCheck\strike0\{linkID=10250>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Params\strike0\{linkID=10260>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Query\strike0\{linkID=10270>main\}
\par \pard\sb55\sa55\tx355\b TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Accessor\strike0\{linkID=4790>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ContainerName\strike0\{linkID=4800>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike CurrentObject\strike0\{linkID=4810>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike FieldOptions\strike0\{linkID=4820>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike HasSubject\strike0\{linkID=4840>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsChanged\strike0\{linkID=4850>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Limited\strike0\{linkID=4860>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Mode\strike0\{linkID=4880>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClass\strike0\{linkID=4890>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClassName\strike0\{linkID=4910>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4950>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Options\strike0\{linkID=4970>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ReadOnly\strike0\{linkID=4980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Sorted\strike0\{linkID=4990>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Subject\strike0\{linkID=5010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike TotalCount\strike0\{linkID=5020>main\}
\par 
\par }
10100
ID_988





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
10110
ID_989





Imported



FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSelector Events \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{linkID=10050>main\}\tab\ul Legend\ulnone\{link=ID_990\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCompare\strike0\{linkID=5370>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateObject\strike0\{linkID=5390>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnFieldError\strike0\{linkID=5400>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIncludeField\strike0\{linkID=5420>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitField\strike0\{linkID=5450>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitFieldDef\strike0\{linkID=5470>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnLimit\strike0\{linkID=5490>main\}
\par 
\par }
10120
ID_990





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
10130
ID_991





Imported



FALSE
33
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSelector Methods \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{linkID=10050>main\}\tab\ul Legend\ulnone\{link=ID_992\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddObject\strike0\{linkID=5040>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ApplyChanges\strike0\{linkID=5050>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AssignFieldValue\strike0\{linkID=5060>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ChangesDisabled\strike0\{linkID=5070>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=5090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DeleteObject\strike0\{linkID=5100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DisableChanges\strike0\{linkID=5120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnableChanges\strike0\{linkID=5140>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetFieldStrings\strike0\{linkID=5160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GotoObject\strike0\{linkID=5170>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike HandleFieldError\strike0\{linkID=5180>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike IncludeField\strike0\{linkID=5190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOfObject\strike0\{linkID=5200>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitField\strike0\{linkID=5210>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitFieldDef\strike0\{linkID=5220>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike InsertObject\strike0\{linkID=5230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFields\strike0\{linkID=5240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike PostChanges\strike0\{linkID=5250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshCurrentObject\strike0\{linkID=5260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshData\strike0\{linkID=5270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReleaseObject\strike0\{linkID=5280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remember\strike0\{linkID=5290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RemoveObject\strike0\{linkID=5310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Reset\strike0\{linkID=5330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Revert\strike0\{linkID=5340>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Undo\strike0\{linkID=5360>main\}
\par 
\par }
10140
ID_992





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
10150
ID_975





Imported



FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSelector Members \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{linkID=10050>main\}\tab\ul Legend\ulnone\{link= ID_993\}\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AutoOpen\strike0\{linkID=10170>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Command\strike0\{linkID=10180>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connector\strike0\{linkID=10190>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike MaxCount\strike0\{linkID=10200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ObjectClass\strike0\{linkID=10210>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ObjectClassName\strike0\{linkID=10230>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ParamCheck\strike0\{linkID=10250>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Params\strike0\{linkID=10260>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Query\strike0\{linkID=10270>main\}
\par 
\par }
10160
ID_993





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
10170
ID_981
TInstantSelector.AutoOpen
AutoOpen;AutoOpen,TInstantSelector;TInstantSelector,AutoOpen



Imported
main

AutoOpen;AutoOpen_Property;TInstantSelector_AutoOpen
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.AutoOpen \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{link= ID_417>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies if the selector should be automatically opened.
\par \pard\sb25\sa25\b\f1 property\b0  AutoOpen: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Specifies if the selector should be automatically opened after it has been loaded.
\par 
\par }
10180
ID_978
TInstantSelector.Command
Command;Command,TInstantSelector;TInstantSelector,Command



Imported
main

Command;Command_Property;TInstantSelector_Command
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.Command \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{link=ID_417>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies command to be executed.
\par \pard\sb25\sa25\b\f1 property\b0  Command: TStringList;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Command to specify the command to execute. Command is a textual representation of a command that results in an extend of objects when executed.
\par The Command has the following syntax:
\par \pard\keep\f1 
\par   SELECT [DISTINCT] * | ObjectPath
\par   FROM [ANY] ClassRef
\par   [WHERE Clause]
\par   [ORDER BY Order]
\par \pard\sb25\sa25\f0 
\par 
\par }
10190
ID_979
TInstantSelector.Connector
Connector;Connector,TInstantSelector;TInstantSelector,Connector



Imported
main

Connector;Connector_Property;TInstantSelector_Connector
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.Connector \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{link= ID_417>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies the used connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Connector: \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Connector specifies the used connector component. The connector serves as the conduit between the selector component and the database from which the selection is to be performed.
\par 
\par }
10200
ID_982
TInstantSelector.MaxCount
MaxCount;MaxCount,TInstantSelector;TInstantSelector,MaxCount



Imported
main

MaxCount;MaxCount_Property;TInstantSelector_MaxCount
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.MaxCount \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{link=ID_417>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the maximum number of objects
\par \pard\sb25\sa25\b\f1 property\b0  MaxCount: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Specifies the maximum number of objects for the selectors extend of objects.
\par 
\par }
10210
ID_983
TInstantSelector.ObjectClass
ObjectClass;ObjectClass,TInstantSelector;TInstantSelector,ObjectClass



Imported
main

ObjectClass;ObjectClass_Property;TInstantSelector_ObjectClass
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.ObjectClass \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantSelector\strike0\{linkID=10050>main\}\tab\ul See Also\ulnone\{linkID=10220\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class of objects being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The exposer uses dataset fields to access properties of exposed objects. ObjectClass specifies the common base class of the objects being exposed. By default, the accessor created by the exposer to access the subject will determine the class from the attached subject. TInstantCustomExposer therefore introduces the ObjectClass property as read-only, but descendants may reintroduce this property as writeable, allowing you to override the class determined by the accessor. TInstantExposer is an example hereof.
\par 
\par }
10220
ID_994





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantSelector.ObjectClassName\strike0\{linkID=10230>main\}
\par }
10230
ID_984
TInstantSelector.ObjectClassName
ObjectClassName;ObjectClassName,TInstantSelector;TInstantSelector,ObjectClassName



Imported
main

ObjectClassName;ObjectClassName_Property;TInstantSelector_ObjectClassName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.ObjectClassName \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantSelector\strike0\{linkID=10050>main\}\tab\ul See Also\ulnone\{linkID=10240\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class name of objects being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClassName;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ObjectClassName specifies the name of the common class of the objects being exposed.
\par 
\par }
10240
ID_995





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantSelector.ObjectClass\strike0\{linkID=10210>main\}
\par }
10250
ID_985
TInstantSelector.ParamCheck
ParamCheck;ParamCheck,TInstantSelector;TInstantSelector,ParamCheck



Imported
main

ParamCheck;ParamCheck_Property;TInstantSelector_ParamCheck
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.ParamCheck \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{link= ID_417>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies whether the parameter list is regenerated.
\par \pard\sb25\sa25\b\f1 property\b0  ParamCheck: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use ParamCheck to specify if the \strike Params\strike0\{linkID=10260>main\} property must be cleared and regenerated if an application modifies the Selectors \strike Command\strike0\{linkID=10180>main\} property at runtime. By default ParamCheck is True. An application that does not use parameterized queries may choose to set ParamCheck to False, but otherwise ParamCheck should be True.
\par 
\par }
10260
ID_986
TInstantSelector.Params
Params;Params,TInstantSelector;TInstantSelector,Params



Imported
main

Params;Params_Property;TInstantSelector_Params
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.Params \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{link=ID_417>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Contains the parameters for the command.
\par \pard\sb25\sa25\b\f1 property\b0  Params: TParams;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Params property to specify parameter names, values, and data types at designtime or runtime for the command of the Selector. Params is a zero-based array of TParams parameter records. Index specifies the array element to access.
\par 
\par }
10270
ID_987
TInstantSelector.Query
Query;Query,TInstantSelector;TInstantSelector,Query



Imported
main

Query;Query_Property;TInstantSelector_Query
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.Query \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{link= ID_417>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines the query object that the selector component uses to perform a selection.
\par \pard\sb25\sa25\b\f1 property\b0  Query: TInstantQuery;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Query to gain access to the query object that the selector component uses to perform a selection.
\par 
\par }
10280
ID_240
TInstantSimple
TInstantSimple



Imported
main

TInstantSimple;TInstantSimple_Object
FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSimple \cf1\b0\fs16\{keepn\} 
\par \pard\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=10300\}\tab\ul See Also\ulnone\{linkID=10290\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 The ancestor of all the attribute classes that represent simple types.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantSimple = \b class\b0 (\strike TInstantAttribute\strike0\{linkID=2180>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantSimple is the ancestor of all the attribute classes that represents simple types.
\par TInstantSimple is abstract; so do not create instances of this class. Instead refer to the following concrete descendant classes: 
\par 
\par \ul\b Simple attribute classes\f2                                                       \ulnone\b0\f0 
\par \strike TInstantInteger\strike0\{linkID=6920>main\}
\par \strike TInstantFloat\strike0\{linkID=6690>main\}
\par \strike TInstantBoolean\strike0\{linkID=2870>main\}
\par \strike TInstantString\strike0\{linkID=10850>main\}
\par \strike TInstantDateTime\strike0\{linkID=5520>main\}
\par \strike TInstantBlob\strike0\{linkID=2690>main\}
\par \strike TInstantMemo\strike0\{linkID=7040>main\}
\par }
10290
ID_997





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantComplex\strike0\{linkID=3200>main\}
\par }
10300
ID_996





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10280>main\}
\par 
\par }
10310
ID_998





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSimple Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantSimple\strike0\{linkID=10280>main\}
\par 
\par }
10320
ID_999





Imported



FALSE
25
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSimple Properties \cf1\b0\fs16 
\par \strike TInstantSimple\strike0\{linkID=10280>main\}\tab\ul Legend\ulnone\{link=327SI.Y\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
10330
327SI.Y





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
10340
327SI.P





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantSimple Events \b0\{keepn\}\cf1\fs16 
\par \strike TInstantSimple\strike0\{linkID=10280>main\}
\par 
\par }
10350
327SI.Q





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSimple Methods \cf1\b0\fs16 
\par \strike TInstantSimple\strike0\{linkID=10280>main\}\tab\ul Legend\ulnone\{link=327SI.R\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
10360
327SI.R





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
10370
327SI.S





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSimple Members \b0\{keepn\}\cf1\fs16 
\par \strike TInstantSimple\strike0\{linkID=10280>main\}\tab\ul Legend\ulnone\{linkID=10380\}
\par 
\par }
10380
327SI.T





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
10390
ID_608
TInstantStream
TInstantStream



Imported
main

TInstantStream;TInstantStream_Object
FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\tx5755\ul Hierarchy\ulnone\{linkID=10400\}\tab\strike Members\strike0\{linkID=10450>nav\}\tab\strike Properties\strike0\{linkID=10420>nav\}\tab\strike Methods\strike0\{linkID=10440>nav\}\tab\strike Events\strike0\{linkID=10430>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 TStream is the base class for classes that provide streaming capabilities for various kinds of media.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\f1 TInstantStream = \b class\b0 (TStream)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantStream is the base class for classes that provide streaming capabilities. TInstantStream uses a source stream that handles the streaming. The source stream is specified by the \strike Source\strike0\{linkID=10470>main\} property, or as an argument of the constructor. TInstantStream is not abstract but can be instantiated. If the \strike Source\strike0\{linkID=10470>main\} stream is unassigned, the TInstantStream object automatically creates a TMemoryStream object which it uses as its source stream.
\par TInstantStream implements functionality to:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Manage resource files
\par \{bmct bm3.BMP\}\tab Read and write objects.
\par \pard\sb25\sa25\tx495 
\par 
\par }
10400
327SI.U





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TStream
\par \pard\li95\tx355\tab |
\par \strike TInstantStream\strike0\{linkID=10390>main\}
\par 
\par }
10410
327SI3P





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStream Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantStream\strike0\{linkID=10390>main\}
\par 
\par }
10420
327SI.W





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStream Properties \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{link= ID_608>main\}\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FreeSource\strike0\{linkID=10460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Source\strike0\{linkID=10470>main\}
\par 
\par }
10430
327SI3Y





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStream Events \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{link= ID_608>main\}\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnProcessObject\strike0\{linkID=10670>main\}
\par 
\par }
10440
327SI.X





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStream Methods \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{link= ID_608>main\}\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AlignStream\strike0\{linkID=10490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObject\strike0\{linkID=10510>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObjectRes\strike0\{linkID=10530>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResHeader\strike0\{linkID=10550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResourceFileHeader\strike0\{linkID=10570>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObject\strike0\{linkID=10590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObjectRes\strike0\{linkID=10610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceFileHeader\strike0\{linkID=10630>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceHeader\strike0\{linkID=10650>main\}
\par 
\par }
10450
327SI.V





Imported



FALSE
22
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStream Members \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{link= ID_608>main\}\{keepn\}
\par \pard\sb55\sa55\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FreeSource\strike0\{linkID=10460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Source\strike0\{linkID=10470>main\}
\par \pard\sb55\sa55\b Events
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnProcessObject\strike0\{linkID=10670>main\}
\par \pard\sb55\sa55\b Methods
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AlignStream\strike0\{linkID=10490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObject\strike0\{linkID=10510>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObjectRes\strike0\{linkID=10530>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResHeader\strike0\{linkID=10550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResourceFileHeader\strike0\{linkID=10570>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObject\strike0\{linkID=10590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObjectRes\strike0\{linkID=10610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceFileHeader\strike0\{linkID=10630>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceHeader\strike0\{linkID=10650>main\}
\par 
\par }
10460
ID_610
TInstantStream.FreeSource
FreeSource;FreeSource,TInstantStream;TInstantStream,FreeSource



Imported
main

FreeSource;FreeSource_Property;TInstantStream_FreeSource
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.FreeSource \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{link=ID_608>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if the source stream should be destroyed.
\par \pard\sb25\sa25\b\f1 property\b0  FreeSource: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use FreeSource to specify if the \strike Source\strike0\{linkID=10470>main\} stream should be destroyed when the instance is destroyed.
\par 
\par }
10470
ID_611
TInstantStream.Source
Source;Source,TInstantStream;TInstantStream,Source



Imported
main

Source;Source_Property;TInstantStream_Source
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.Source \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantStream\strike0\{linkID=10390>main\}\tab\ul See Also\ulnone\{linkID=10480\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the source stream.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Source: TStream;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use Source to specify the source stream that the \strike TInstantStream\strike0\{linkID=10390>main\} instance should use for streaming.
\par 
\par }
10480
327SI3Q





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.FreeSource\strike0\{linkID=10460>main\}
\par }
10490
ID_616
TInstantStream.AlignStream
AlignStream;AlignStream,TInstantStream;TInstantStream,AlignStream



Imported
main

AlignStream;AlignStream_Method;TInstantStream_AlignStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.AlignStream \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{link= ID_608>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Aligns the position of the stream to the next 32-bit boundary.
\par \pard\sb25\sa25\b\f1 procedure\b0  AlignStream;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call AlignStream to align the stream to the next 32-bit boundary. The stream is automatically enlarged if required.
\par 
\par }
10500
ID_617
TInstantStream.Create
Create;Create,TInstantStream;TInstantStream,Create



Imported
main

Create;Create_Method;TInstantStream_Create
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.Create \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{link= ID_608>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Creates a \strike TInstantStream\strike0\{linkID=10390>main\} instance
\par \pard\sb25\sa25\b\f1 constructor\b0  Create(ASource: TStream; AFreeSource: Boolean);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Creates a \strike TInstantStream\strike0\{linkID=10390>main\} instance. Use the ASource argument specify the source stream that the \strike TInstantStream\strike0\{linkID=10390>main\} instance should use for streaming, and the AFreeSource argument to specify if the \strike Source\strike0\{linkID=10470>main\} stream should be destroyed when the \strike TInstantStream\strike0\{linkID=10390>main\} instance is destroyed.
\par 
\par }
10510
ID_618
TInstantStream.ReadObject
ReadObject;ReadObject,TInstantStream;TInstantStream,ReadObject



Imported
main

ReadObject;ReadObject_Method;TInstantStream_ReadObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.ReadObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantStream\strike0\{linkID=10390>main\}\tab\ul See Also\ulnone\{linkID=10520\}
\par \pard\sb25\sa85\tx1435\fs18 Reads an object from the stream.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  ReadObject(AObject: TPersistent; Arg: Pointer): TPersistent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use ReadObject to read an object from the stream into the object specified by the AObject argument. If AObject is nil, ReadObject creates an object based on the type information in the stream and returns the newly created object. The Arg argument is an optional argument used if the construction of the object requires an argument.
\par 
\par }
10520
327SI3R





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.WriteObject\strike0\{linkID=10590>main\}
\par }
10530
ID_619
TInstantStream.ReadObjectRes
ReadObjectRes;ReadObjectRes,TInstantStream;TInstantStream,ReadObjectRes



Imported
main

ReadObjectRes;ReadObjectRes_Method;TInstantStream_ReadObjectRes
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.ReadObjectRes \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantStream\strike0\{linkID=10390>main\}\tab\ul See Also\ulnone\{linkID=10540\}
\par \pard\sb25\sa85\tx1435\fs18 Reads an object enclosed in a resource entry from the stream.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  ReadObjectRes(AObject: TPersistent; Arg: Pointer): TPersistent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Reads an object enclosed in a resource entry from the stream into the object specified by the AObject argument. If AObject is nil, \strike ReadObject\strike0\{linkID=10510>main\} creates an object based on the type information in the stream and returns the newly created object. The Arg argument is an optional argument used if the construction of the object requires an argument.
\par 
\par }
10540
327SI3S





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.WriteObjectRes\strike0\{linkID=10610>main\}
\par }
10550
ID_620
TInstantStream.ReadResHeader
ReadResHeader;ReadResHeader,TInstantStream;TInstantStream,ReadResHeader



Imported
main

ReadResHeader;ReadResHeader_Method;TInstantStream_ReadResHeader
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.ReadResHeader \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantStream\strike0\{linkID=10390>main\}\tab\ul See Also\ulnone\{linkID=10560\}
\par \pard\sb25\sa85\tx1435\fs18 Reads a Windows resource-entry header from the stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  ReadResHeader;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ReadResHeader reads a Windows resource-entry header from the stream. After reading the resource-entry header, the position of the stream will be just beyond the header.
\par 
\par }
10560
327SI3T





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.WriteResourceHeader\strike0\{linkID=10650>main\}
\par }
10570
ID_621
TInstantStream.ReadResourceFileHeader
ReadResourceFileHeader;ReadResourceFileHeader,TInstantStream;TInstantStream,ReadResourceFileHeader



Imported
main

ReadResourceFileHeader;ReadResourceFileHeader_Method;TInstantStream_ReadResourceFileHeader
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.ReadResourceFileHeader \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantStream\strike0\{linkID=10390>main\}\tab\ul See Also\ulnone\{linkID=10580\}
\par \pard\sb25\sa85\tx1435\fs18 Reads a Windows resource-file header from the stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  ReadResourceFileHeader;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ReadResourceFileHeader reads a Windows resource-file header from the stream. After reading the resource-file header, the position of the stream will be just beyond the header.
\par 
\par }
10580
327SI3U





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.WriteResourceFileHeader\strike0\{linkID=10630>main\}
\par }
10590
ID_622
TInstantStream.WriteObject
TInstantStream,WriteObject;WriteObject;WriteObject,TInstantStream



Imported
main

TInstantStream_WriteObject;WriteObject;WriteObject_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.WriteObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantStream\strike0\{linkID=10390>main\}\tab\ul See Also\ulnone\{linkID=10600\}
\par \pard\sb25\sa85\tx1435\fs18 Writes an object to the stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  WriteObject(AObject: TPersistent);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use WriteObject to write the object specified by the AObject argument to the stream.
\par 
\par }
10600
327SI3V





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.ReadObject\strike0\{linkID=10510>main\}
\par }
10610
ID_623
TInstantStream.WriteObjectRes
TInstantStream,WriteObjectRes;WriteObjectRes;WriteObjectRes,TInstantStream



Imported
main

TInstantStream_WriteObjectRes;WriteObjectRes;WriteObjectRes_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.WriteObjectRes \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantStream\strike0\{linkID=10390>main\}\tab\ul See Also\ulnone\{linkID=10620\}
\par \pard\sb25\sa85\tx1435\fs18 Writes an object to the stream as a resource entry.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  WriteObjectRes(\b const\b0  ResName: \b string\b0 ; AObject: TPersistent);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Writes the object specified by the AObject argument to the stream as a resource entry with the name specified as the ResName argument.
\par 
\par }
10620
327SI3W





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.ReadObjectRes\strike0\{linkID=10530>main\}
\par }
10630
ID_624
TInstantStream.WriteResourceFileHeader
TInstantStream,WriteResourceFileHeader;WriteResourceFileHeader;WriteResourceFileHeader,TInstantStream



Imported
main

TInstantStream_WriteResourceFileHeader;WriteResourceFileHeader;WriteResourceFileHeader_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.WriteResourceFileHeader \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantStream\strike0\{linkID=10390>main\}\tab\ul See Also\ulnone\{linkID=10640\}
\par \pard\sb25\sa85\tx1435\fs18 Writes a Windows resource-file header to the stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  WriteResourceFileHeader;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call WriteResourceFileHeader to write a Windows resource-file header to the stream.
\par 
\par }
10640
327SI3X





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.ReadResourceFileHeader\strike0\{linkID=10570>main\}
\par }
10650
ID_625
TInstantStream.WriteResourceHeader
TInstantStream,WriteResourceHeader;WriteResourceHeader;WriteResourceHeader,TInstantStream



Imported
main

TInstantStream_WriteResourceHeader;WriteResourceHeader;WriteResourceHeader_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.WriteResourceHeader \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantStream\strike0\{linkID=10390>main\}\tab\ul See Also\ulnone\{linkID=10660\}
\par \pard\sb25\sa85\tx1435\fs18 Writes a Windows resource-entry header to the stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  WriteResourceHeader(\b const\b0  ResName: \b string\b0 ; DataSize: Cardinal);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 WriteResHeader writes a Windows resource-entry header to the stream. The ResName argument specifies the name of the resource, and the DataSize argument specifies the amount of data that the resource contains. After writing the resource-entry header, the position of the stream will be just beyond the header.
\par 
\par }
10660
327SI4Y





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.ReadResHeader\strike0\{linkID=10550>main\}
\par }
10670
ID_613
TInstantStream.OnProcessObject
OnProcessObject;OnProcessObject,TInstantStream;TInstantStream,OnProcessObject



Imported
main

OnProcessObject;OnProcessObject_Event;TInstantStream_OnProcessObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.OnProcessObject \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{link= ID_608>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies an object processing event handler.
\par \pard\sb25\sa25\b\f1 property\b0  OnProcessObject: \strike TInstantProcessObjectEvent\strike0\{linkID=12350>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use OnProcessObject to attach an optional object processing event handler to the stream. When an object is either written to or read from the stream, the OnProcessObject event is triggered.
\par 
\par }
10680
ID_168
TInstantStreamable
TInstantStreamable



Imported
main

TInstantStreamable;TInstantStreamable_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamable \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=10690\}\tab\strike Members\strike0\{linkID=10750>nav\}\tab\strike Methods\strike0\{linkID=10730>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantStreamable is the base class for classes that are streamable.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantStreamable = \b class\b0 (TPersistent)
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantStreamable introduces the ability to read and write instances from and to a stream. Use TInstantStreamable as base class when declaring classes that should be streamable. To enable streaming of a class, override the \strike ReadObject\strike0\{linkID=10800>main\}, \strike WriteObject\strike0\{linkID=10830>main\} and \strike CreateInstance\strike0\{linkID=10770>main\} methods.
\par 
\par }
10690
327SI4Q





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par 
\par }
10700
327SI4T





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStreamable Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantStreamable\strike0\{linkID=10680>main\}
\par 
\par }
10710
327SI4U





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStreamable Properties \b0\{keepn\}\cf1\fs16 
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par 
\par }
10720
327SI4V





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStreamable Events \b0\{keepn\}\cf1\fs16 
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par 
\par }
10730
327SI4S





Imported



FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStreamable Methods \cf1\b0\fs16 
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}\tab\ul Legend\ulnone\{link=327SI4W\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
10740
327SI4W





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
10750
327SI4R





Imported



FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStreamable Members \cf1\b0\fs16 
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}\tab\ul Legend\ulnone\{link=327SI4X\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
10760
327SI4X





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
10770
ID_208
TInstantStreamable.CreateInstance
CreateInstance;CreateInstance,TInstantStreamable;TInstantStreamable,CreateInstance



Imported
main

CreateInstance;CreateInstance_Method;TInstantStreamable_CreateInstance
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamable.CreateInstance \cf1\b0\fs16 
\par \strike TInstantStreamable\strike0\{link= ID_168>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Creates an instance.
\par \pard\sb25\sa25\b\f1 class\b0  \b function\b0  CreateInstance(Arg: Pointer): \strike TInstantStreamable\strike0\{linkID=10680>main\}; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 CreateInstance is called automatically by streaming mechanism when reading an object from a stream requires construction of a new instance. Do not call it explicitly in your applications. The CreateInstance method implemented in \strike TInstantStreamable\strike0\{linkID=10680>main\} calls the default TObject Create constructor. Override this class function when creating a class that needs to read instances from a stream. Use the methods of the reader objects passed as the Reader argument to read the properties of the instance.
\par 
\par }
10780
ID_209
TInstantStreamable.LoadFromStream
LoadFromStream;LoadFromStream,TInstantStreamable;TInstantStreamable,LoadFromStream



Imported
main

LoadFromStream;LoadFromStream_Method;TInstantStreamable_LoadFromStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamable.LoadFromStream \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantStreamable\strike0\{linkID=10680>main\}\tab\ul See Also\ulnone\{linkID=10790\}
\par \pard\sb25\sa85\tx1435\fs18 Loads the object from a stream
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  LoadFromStream(Stream: TStream; ProcessEvent: \strike TInstantProcessObjectEvent\strike0\{linkID=12350>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call LoadFromStream to load the object from a stream specified by the Stream argument. The stream must contain an object in the binary stream format. By setting the ProccessEvent argument, information about the objects being processed can be obtained.
\par 
\par }
10790
327SI5Y





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStreamable.SaveToStream\strike0\{linkID=10820>main\}
\par }
10800
ID_210
TInstantStreamable.ReadObject
ReadObject;ReadObject,TInstantStreamable;TInstantStreamable,ReadObject



Imported
main

ReadObject;ReadObject_Method;TInstantStreamable_ReadObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamable.ReadObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantStreamable\strike0\{linkID=10680>main\}\tab\ul See Also\ulnone\{linkID=10810\}
\par \pard\sb25\sa85\tx1435\fs18 Reads the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  ReadObject(Reader: TInstantReader); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ReadObject is called automatically by streaming mechanism. Do not call it explicitly in your applications. The ReadObject method implemented in \strike TInstantStreamable\strike0\{linkID=10680>main\} does nothing. Override this method when creating a class that needs to read instances from a stream. Use the methods of the reader objects passed as the Reader argument to read the properties of the instance.
\par 
\par }
10810
327SI5P





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStreamable.WriteObject\strike0\{linkID=10830>main\}
\par }
10820
ID_211
TInstantStreamable.SaveToStream
SaveToStream;SaveToStream,TInstantStreamable;TInstantStreamable,SaveToStream



Imported
main

SaveToStream;SaveToStream_Method;TInstantStreamable_SaveToStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamable.SaveToStream \cf1\b0\fs16 
\par \strike TInstantStreamable\strike0\{link=ID_168>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Saves the object to a stream
\par \pard\sb25\sa25\b\f1 procedure\b0  SaveToStream(Stream: TStream; ProcessEvent: \strike TInstantProcessObjectEvent\strike0\{linkID=12350>main\});
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Saves the object to a stream specified by the Stream argument. By setting the ProccessEvent argument, information about the objects being processed can be obtained.
\par 
\par }
10830
ID_212
TInstantStreamable.WriteObject
TInstantStreamable,WriteObject;WriteObject;WriteObject,TInstantStreamable



Imported
main

TInstantStreamable_WriteObject;WriteObject;WriteObject_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamable.WriteObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike TInstantStreamable\strike0\{linkID=10680>main\}\tab\ul See Also\ulnone\{linkID=10840\}
\par \pard\sb25\sa85\tx1435\fs18 Writes the instance
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  WriteObject(Writer: TInstantWriter); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 WriteObject is called automatically by streaming mechanism. Do not call it explicitly in your applications. The WriteObject method implemented in \strike TInstantStreamable\strike0\{linkID=10680>main\} does nothing. Override this method when creating a class that needs to write instances to a stream. Use the methods of the writer objects passed as the Writer argument to write the properties of the instance.
\par 
\par }
10840
327SI5Q





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStreamable.ReadObject\strike0\{linkID=10800>main\}
\par }
10850
ID_177
TInstantString
TInstantString



Imported
main

TInstantString;TInstantString_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantString \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=10860\}\tab\strike Members\strike0\{linkID=10930>nav\}\tab\strike Properties\strike0\{linkID=10880>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantString represents a string value.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantString = \b class\b0 (\strike TInstantSimple\strike0\{linkID=10280>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantString holds a string as its value. A string can be of arbitrary length. Usually databases impose some limitations regarding the length of strings.
\par 
\par }
10860
327SI5R





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10680>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2180>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10280>main\}
\par \tab |
\par \strike TInstantString\strike0\{linkID=10850>main\}
\par 
\par }
10870
327SI5U





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantString Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantString\strike0\{linkID=10850>main\}
\par 
\par }
10880
327SI5T





Imported



FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantString Properties \cf1\b0\fs16 
\par \strike TInstantString\strike0\{linkID=10850>main\}\tab\ul Legend\ulnone\{link=327SI5W\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantString
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=10950>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2370>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2420>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2440>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2490>main\}
\par 
\par }
10890
327SI5W





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
10900
327SI5X





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\f0\fs24\{keepn\}rd\b TInstantString Events \cf1\b0\fs16 
\par \strike TInstantString\strike0\{linkID=10850>main\}
\par 
\par }
10910
327SI6Y





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantString Methods \cf1\b0\fs16 
\par \strike TInstantString\strike0\{linkID=10850>main\}\tab\ul Legend\ulnone\{link=327SI6P\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2510>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2530>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2550>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2560>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10770>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10780>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10820>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10830>main\}
\par 
\par }
10920
327SI6P





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
10930
327SI5S





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantString Members \cf1\b0\fs16 
\par \strike TInstantString\strike0\{linkID=10850>main\}\tab\ul Legend\ulnone\{link=327SI6Q\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=10950>main\}
\par 
\par }
10940
327SI6Q





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
10950
327SI5V
TInstantString.Value
TInstantString,Value;Value;Value,TInstantString



Imported
main

TInstantString_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantString.Value \cf1\b0\fs16 
\par \strike TInstantString\strike0\{link=ID_177>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the string attribute
\par \pard\sb25\sa25\b\f1 property\b0  Value: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the string attribute.
\par 
\par }
10960
327SI6R
TInstantStringStream
TInstantStringStream



Imported
main

TInstantStringStream;TInstantStringStream_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStringStream \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\ul Hierarchy\ulnone\{linkID=10970\}\tab\strike Members\strike0\{linkID=11030>nav\}\tab\strike Properties\strike0\{linkID=10990>nav\}\tab\strike Methods\strike0\{linkID=11020>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 TInstantStringStream provides stream-based access to a string.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantStringStream = \b class\b0 (\strike TInstantStream\strike0\{linkID=10390>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 Use TInstantStringStream to access a string as a stream. TInstantStringStream is useful as an intermediary object since it can hold text as well as binary data. Like all \strike TInstantStream\strike0\{linkID=10390>main\} objects, TInstantStringStream uses a Source stream that handles the streaming. The Source stream of TInstantStringStream is a TStringStream object.
\par 
\par }
10970
327SI6S





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TStream
\par \pard\li95\tx355\tab |
\par \strike TInstantStream\strike0\{linkID=10390>main\}
\par \tab |
\par \strike TInstantStringStream\strike0\{linkID=10960>main\}
\par 
\par }
10980
327SI6W





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStringStream Fields \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx355\strike TInstantStringStream\strike0\{linkID=10960>main\}
\par 
\par }
10990
327SI6U





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStringStream Properties \cf1\b0\fs16 
\par \strike TInstantStringStream\strike0\{linkID=10960>main\}\tab\ul Legend\ulnone\{link=327SI7Y\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantStringStream
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DataString\strike0\{linkID=11050>main\}
\par \pard\sb55\sa55\tx355\b TInstantStream
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FreeSource\strike0\{linkID=10460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Source\strike0\{linkID=10470>main\}
\par 
\par }
11000
327SI7Y





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
11010
327SI7P





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStringStream Events \cf1\b0\fs16 
\par \strike TInstantStringStream\strike0\{link=327SI6R>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnProcessObject\strike0\{linkID=10670>main\}
\par 
\par }
11020
327SI6V





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStringStream Methods \cf1\b0\fs16 
\par \strike TInstantStringStream\strike0\{link=327SI6R>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantStringStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=11060>main\}
\par \pard\sb55\sa55\b TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AlignStream\strike0\{linkID=10490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10500>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObject\strike0\{linkID=10510>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObjectRes\strike0\{linkID=10530>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResHeader\strike0\{linkID=10550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResourceFileHeader\strike0\{linkID=10570>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObject\strike0\{linkID=10590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObjectRes\strike0\{linkID=10610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceFileHeader\strike0\{linkID=10630>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceHeader\strike0\{linkID=10650>main\}
\par 
\par }
11030
327SI6T





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStringStream Members \cf1\b0\fs16 
\par \strike TInstantStringStream\strike0\{linkID=10960>main\}\tab\ul Legend\ulnone\{link=327SI7R\}\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DataString\strike0\{linkID=11050>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=11060>main\}
\par 
\par }
11040
327SI7R





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
11050
327SI6X
TInstantStringStream.DataString
DataString;DataString,TInstantStringStream;TInstantStringStream,DataString



Imported
main

DataString;DataString_Property;TInstantStringStream_DataString
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStringStream.DataString \cf1\b0\fs16 
\par \strike TInstantStringStream\strike0\{link=327SI6R>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Provides access to the string represented by the \strike TInstantStringStream\strike0\{linkID=10960>main\} instance.
\par \pard\sb25\sa25\b\f1 property\b0  DataString: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use DataString to access the stream as a string. DataString represents the data that the stream manages.
\par 
\par }
11060
327SI7Q
TInstantStringStream.Create
Create;Create,TInstantStringStream;TInstantStringStream,Create



Imported
main

Create;Create_Method;TInstantStringStream_Create
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStringStream.Create \cf1\b0\fs16 
\par \strike TInstantStringStream\strike0\{link=327SI6R>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Creates an instance of \strike TInstantStringStream\strike0\{linkID=10960>main\}.
\par \pard\sb25\sa25\b\f1 constructor\b0  Create(AString: \b string\b0 );
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Create to create a \strike TInstantStringStream\strike0\{linkID=10960>main\} object. Create initializes the \strike DataString\strike0\{linkID=11050>main\} property to the AString parameter.
\par 
\par }
11070
327SI7S
InstantCharSetToStr
InstantCharSetToStr



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantCharSetToStr \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul See Also\ulnone\{linkID=11080\}\tab\strike Example 1\strike0\{linkID=11090>example\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Coverts a set of char to a string.
\par \pard\sb25\sa25\tx1435\tx2875\b\f1 function\b0  InstantCharSetToStr(C: TChars): \b string\b0 ;
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Use InstantCharSetToStr to convert a set of char to a string. The resulting string is condensed to be as short as possible using ".." to denote ranges.
\par 
\par }
11080
327SI7T





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantStrToCharSet\strike0\{linkID=11710>main\}
\par }
11090
327SI7U
InstantCharSetToStr, Example 1
InstantCharSetToStr, Example 1



Imported
example


FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike InstantCharSetToStr\strike0\{link=327SI7S>main\}\{keepn\} 
\par \pard\keep\f1\fs18   InstantCharSetToStr(['a','b','c']);  //'abc'
\par   InstantCharSetToStr(['a','b','c','d']);  //'a..d'
\par   InstantCharSetToStr(['4','a','1','c','3','b','2','d']);  //'1..4a..d'
\par 
\par }
11100
327SI7X
InstantCheckConnection
InstantCheckConnection



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 InstantCheckConnection \b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Checks the assignment of a connection
\par \pard\sb25\sa25\b\f1 procedure\b0  InstantCheckConnection(Connection: TCustomConnection);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 InstantCheckConnection checks if a connection is assigned. If the connection is unassigned an exception is raised.
\par 
\par }
11110
327SI8Y
InstantCheckConnector
InstantCheckConnector



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantCheckConnector \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11120\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Checks the assignment of a connector
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantCheckConnector(\b var\b0  Connector: \strike TInstantConnector\strike0\{linkID=3780>main\}): \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantCheckConnector checks if a connector is assigned. If the Connector argument is unassigned, the function checks if a default connector exists. If a default connector exists and the argument is unassigned, the argument as well as the result of the function is assigned to the default connector. If neither the argument is assigned nor a default Connector exists, an exception is raised.
\par 
\par }
11120
327SI8P





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantDefaultConnector\strike0\{linkID=11220>main\}
\par }
11130
327SI8R
InstantClassNameToName
InstantClassNameToName



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantClassNameToName \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11140\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Converts a class name to a name.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantClassNameToName(\b const\b0  ClassName: \b string\b0 ): \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantClassNameToName converts a class name to a displayable name by removing the class prefix.
\par 
\par }
11140
327SI8S





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantNameToClassName\strike0\{linkID=11490>main\}
\par }
11150
327SI8U
InstantCompareObjects
InstantCompareObjects



Imported
main


FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantCompareObjects \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{link=327SI7V>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Compares two objects by comparing a named published property.
\par \pard\sb25\sa25\b\f1 function\b0  InstantCompareObjects(Obj1: TObject; Obj2: TObject; PropName: \b string\b0 ; Options: \strike TInstantCompareOptions\strike0\{linkID=12020>main\}): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InstantCompareObjects a compare two objects by a single published property named as the PropName argument. The Options argument applies to string property comparisons and specifies if a case insensitive comparison should be performed and if a partial match is sufficient.
\par \trowd\trleft-1\trqc\cellx939\cellx1439\pard\intbl The result of the comparison renders the following return values: \b Comparison\cell Return value\cell\row
\trowd\trleft-1\trqc\cellx939\cellx1439\pard\intbl\b0 Obj1 < Obj2\cell -1\cell\row
\intbl Obj1 = Obj2\cell 0\cell\row
\intbl Obj1 > Obj2\cell 1\cell\row
\pard 
\par 
\par }
11160
327SI8W
InstantCompareObjects
InstantCompareObjects



Imported
main


FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantCompareObjects \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{link=327SI7V>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Compares two objects by comparing mulpiple named published properties.
\par \pard\sb25\sa25\b\f1 function\b0  \strike InstantCompareObjects\strike0\{linkID=11150>main\}(Obj1: TObject; Obj2: TObject; PropNames: TStrings; Options: \strike TInstantCompareOptions\strike0\{linkID=12020>main\}): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use \strike InstantCompareObjects\strike0\{linkID=11150>main\} a compare two objects by multiple published properties listed in the PropNames argument. The Options argument applies to string property comparisons and specifies if a case insensitive comparison should be performed and if a partial match is sufficient.
\par \trowd\trleft-1\trqc\cellx939\cellx1439\pard\intbl The result of the comparison renders the following return values: \b Comparison\cell Return value\cell\row
\trowd\trleft-1\trqc\cellx939\cellx1439\pard\intbl\b0 Obj1 < Obj2\cell -1\cell\row
\intbl Obj1 = Obj2\cell 0\cell\row
\intbl Obj1 > Obj2\cell 1\cell\row
\pard 
\par 
\par }
11170
327SI8X
InstantCompareText
InstantCompareText



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantCompareText \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{link=327SI7V>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Compares two strings by ordinal value.
\par \pard\sb25\sa25\b\f1 function\b0  InstantCompareText(\b const\b0  S1: \b string\b0 ; \b const\b0  S2: \b string\b0 ; IgnoreCase: Boolean): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 CompareText compares S1 and S2 and returns 0 if they are equal. If S1 is greater than S2, CompareText returns an integer greater than 0. If S1 is less than S2, CompareText returns an integer less than 0. If the IgnoreCase argument is true, a case insensitive comparison is performed.
\par 
\par }
11180
327SI9Y
InstantCompareValues
InstantCompareValues



Imported
main


FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantCompareValues \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{link=327SI7V>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Compares the values of two variants.
\par \pard\sb25\sa25\b\f1 function\b0  InstantCompareValues(V1: Variant; V2: Variant; Options: \strike TInstantCompareOptions\strike0\{linkID=12020>main\}): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use IntantCompareValues to compare the values of two variants. The Options argument applies to string value comparisons and specifies if a case insensitive comparison should be performed and if a partial match is sufficient.
\par \trowd\trleft-1\trqc\cellx839\cellx1439\pard\intbl The result of the comparison renders the following return values \b Comparison\cell Return value\cell\row
\trowd\trleft-1\trqc\cellx839\cellx1439\pard\intbl\b0 V1 < V2\cell -1\cell\row
\intbl V1 = V2\cell 0\cell\row
\intbl V1 > V2\cell 1\cell\row
\pard 
\par 
\par }
11190
327SI9P
InstantConstArrayToVariant
InstantConstArrayToVariant



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantConstArrayToVariant \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{link=327SI7V>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Converts an array of constants to a variant array.
\par \pard\sb25\sa25\b\f1 function\b0  InstantConstArrayToVariant(AValues: \b array\b0  \b of\b0  \b const\b0 ): Variant;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InstantConstArrayToVariant to convert an array of constants to a variant array.
\par 
\par }
11200
327SI9Q
InstantDateTimeToStr
InstantDateTimeToStr



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDateTimeToStr \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11210\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\fs18 Converts a TDatetime value to a string.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantDateTimeToStr(DateTime: TDateTime): \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantDateTimeToStr to convert a TDateTimeValue to a string using the datetime format specified by the \strike InstantDateTimeFormat\strike0\{linkID=12490>main\} string.
\par 
\par }
11210
327SI9R





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantStrToDateTime\strike0\{linkID=11760>main\}
\par }
11220
327SI8Q
InstantDefaultConnector
InstantDefaultConnector



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDefaultConnector \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns the default connector instance.
\par \pard\sb25\sa25\b\f1 function\b0  InstantDefaultConnector: \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 InstantDefaultConnector returns the connector instance marked as default. The default connector is used whenever a connector is required and no connector has been specified.
\par 
\par }
11230
327SI9U
InstantDisableNotifiers
InstantDisableNotifiers



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDisableNotifiers \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11240\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Disables all notifiers
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantDisableNotifiers;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantDisableNotifiers when all notifiers in the application should be disabled. This is especially important when performing object updates that should not be reflected in the user interface while these are ongoing.
\par 
\par }
11240
327SI9V





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantEnableNotifiers\strike0\{linkID=11250>main\}
\par }
11250
327SI9W
InstantEnableNotifiers
InstantEnableNotifiers



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantEnableNotifiers \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11260\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Enables all notifiers
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantEnableNotifiers;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantEnableNotifiers to re-enable all notifiers in the applications.
\par 
\par }
11260
327SI9X





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantDisableNotifiers\strike0\{linkID=11230>main\}
\par }
11270
327SI0Y
InstantExploreObject
InstantExploreObject



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantExploreObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11280\}\tab\strike Unit: InstantExplorer\strike0\{linkID=12740>main\}
\par \pard\sb25\sa85\tx1435\fs18 Explores an object
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantExploreObject(AObject: TObject);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantExploreObject creates an instance of \strike TInstantExplorer\strike0\{linkID=6080>main\} and uses this instance to explore the object specified as the AObject argument.
\par 
\par }
11280
327SI0P





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantExplorer\strike0\{linkID=6080>main\}
\par }
11290
327SI0Q
InstantFileVersion
InstantFileVersion



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantFileVersion \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11300\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\fs18 Returns the version of a file as a record
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantFileVersion(\b const\b0  FileName: \b string\b0 ): \strike TInstantVersion\strike0\{linkID=11920>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantFileVersion returns the version of the file specified by the FileName argument as a \strike TInstantVersion\strike0\{linkID=11920>main\} record.
\par 
\par }
11300
327SI0R





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantFileVersionStr\strike0\{linkID=11310>main\}
\par }
11310
327SI0T
InstantFileVersionStr
InstantFileVersionStr



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantFileVersionStr \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11320\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\fs18 Returns the version of a file as a string
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantFileVersionStr(\b const\b0  FileName: \b string\b0 ): \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0\strike InstantFileVersion\strike0\{linkID=11290>main\} returns the version of the file specified by the FileName argument in the format; [Major].[Minor].[Release].[Build]
\par 
\par }
11320
327SI0U





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantFileVersion\strike0\{linkID=11290>main\}
\par }
11330
327SI0V
InstantFindAccessorClass
InstantFindAccessorClass



Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantFindAccessorClass \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11340\}\tab\strike Unit: InstantPresentation\strike0\{linkID=12870>main\}
\par \pard\sb25\sa85\tx1435\fs18 Finds and returns a class derived from TInstantAccessor.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantFindAccessorClass(ObjectClass: TClass): TInstantAccessorClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantFindAccessorClass to locate a class derived from TInstantAccessor by its association to another class. InstantFindAccessorClass searches the classes that have been registered using the registration procedures.
\par If the requested class cannot be found, InstantFindAccessorClass raises an exception.
\par 
\par }
11340
327SI0W





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantGetAccessorClass\strike0\{linkID=11380>main\}
\par \strike InstantRegisterAccessorClass\strike0\{linkID=11630>main\}
\par }
11350
3OA4HS5
InstantFindClass
InstantFindClass



Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantFindClass \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11360\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Finds and returns a class derived from \strike TInstantObject\strike0\{linkID=7240>main\}.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantFindClass(\b const\b0  ClassName: \b string\b0 ): TInstantObjectClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantFindClass to locate a class derived from \strike TInstantObject\strike0\{linkID=7240>main\} by name. InstantFindClass searches the classes that have been registered using the registration procedures.
\par If the requested class cannot be found, InstantFindClass raises an exception.
\par 
\par }
11360
3OA4HS6





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantGetClass\strike0\{linkID=11400>main\}
\par \strike InstantRegisterClass\strike0\{linkID=11650>main\}
\par }
11370
ID_831
InstantGenerateId
InstantGenerateId



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantGenerateId \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{link=327SI7V>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Generates an unique Id.
\par \pard\sb25\sa25\b\f1 function\b0  InstantGenerateId: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 InstantGenerateId generates an unique 128-bit Integer value and returns its hexadecimal representation. To a very high degree of certainty, the Id returned by this function should be unique on the same machine or any other system (networked or not).
\par 
\par }
11380
327SI0X
InstantGetAccessorClass
InstantGetAccessorClass



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantGetAccessorClass \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11390\}\tab\strike Unit: InstantPresentation\strike0\{linkID=12870>main\}
\par \pard\sb25\sa85\tx1435\fs18 Finds and returns a class derived from TInstantAccessor.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantGetAccessorClass(ObjectClass: TClass): TInstantAccessorClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantGetAccessorClass to locate a class derived from TInstantAccessor by its association to another class. InstantGetAccessorClass searches the classes that have been registered using the registration procedures.
\par 
\par }
11390
3OA4HS9





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantFindAccessorClass\strike0\{linkID=11330>main\}
\par \strike InstantRegisterAccessorClass\strike0\{linkID=11630>main\}
\par }
11400
3OA4HS7
InstantGetClass
InstantGetClass



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantGetClass \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11410\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Finds and returns a class derived from \strike TInstantObject\strike0\{linkID=7240>main\}.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantGetClass(\b const\b0  ClassName: \b string\b0 ): TInstantObjectClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantGetClass to locate a class derived from \strike TInstantObject\strike0\{linkID=7240>main\} by name. InstantGetClass searches the classes that have been registered using the registration procedures.
\par 
\par }
11410
3OA4HS0





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantFindClass\strike0\{linkID=11350>main\}
\par \strike InstantRegisterClass\strike0\{linkID=11650>main\}
\par }
11420
75DEFG5
InstantGetClasses
InstantGetClasses



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantGetClasses \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Extracts a list of registered classes.
\par \pard\sb25\sa25\b\f1 procedure\b0  InstantGetClasses(Classes: TList; BaseClass: TInstantObjectClass);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InstantGetClasses to extract registered classes into the list specified by the Classes parameter. Optionally the base class from which the extracted classes must descend can be specified by setting the BaseClass parameter.
\par 
\par }
11430
3OA4HS.
InstantIsIdentifier
InstantIsIdentifier



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantIsIdentifier \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{link=327SI7V>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if a string is a valid identifier
\par \pard\sb25\sa25\b\f1 function\b0  InstantIsIdentifier(Str: \b string\b0 ): Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InstantIsIdentifier to determine if the string specified as the S argument is a valid identifier. If S is valid, the function returns True.
\par 
\par }
11440
ID_832
InstantIsValidObjectId
InstantIsValidObjectId



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantIsValidObjectId \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Tests for a valid Object Id.
\par \pard\sb25\sa25\b\f1 function\b0  InstantIsValidObjectId(\b const\b0  AObjectId: \b string\b0 ): Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InstantIsValidObjectId to test if a string contains a valid Id for an object.
\par 
\par }
11450
3OA4HS_
InstantMatchObject
InstantMatchObject



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantMatchObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11460\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\fs18 Compares a value to the value of an objects property
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantMatchObject(Obj: TObject; PropName: \b string\b0 ; \b const\b0  KeyValue: Variant; Options: \strike TInstantCompareOptions\strike0\{linkID=12020>main\}): Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantMatchObject to compare a value specified as the KeyValue argument to the value of a property named PropName for the object specified as the AObject argument. The Options argument applies to string property comparisons and specifies if a case insensitive comparison should be performed and if a partial match is sufficient.
\par 
\par }
11460
75DE_H8





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantMatchObject\strike0\{linkID=11450>main\}
\par }
11470
75DE_GZ
InstantMatchObject
InstantMatchObject



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantMatchObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11480\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\fs18 Compares multiple values to the values of an objects properties
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  \strike InstantMatchObject\strike0\{linkID=11450>main\}(Obj: TObject; PropNames: TStrings; \b const\b0  KeyValues: Variant; Options: \strike TInstantCompareOptions\strike0\{linkID=12020>main\}): Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call \strike InstantMatchObject\strike0\{linkID=11450>main\} to compare values specified as the KeyValues variant array argument to the value of the properties contained in PropNames TStrings object for the object specified as the AObject argument. The Options argument applies to string property comparisons and specifies if a case insensitive comparison should be performed and if a partial match is sufficient.
\par 
\par }
11480
8DW2.KP





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantMatchObject\strike0\{linkID=11450>main\}
\par }
11490
327SI8T
InstantNameToClassName
InstantNameToClassName



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantNameToClassName \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11500\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Converts a name to a class name.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantNameToClassName(\b const\b0  \b Name\b0 : \b string\b0 ): \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantNameToClassName converts a displayable name to a class name by adding the class prefix.
\par 
\par }
11500
75DE_H1





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantClassNameToName\strike0\{linkID=11130>main\}
\par }
11510
75DE_H2
InstantObjectBinaryToText
InstantObjectBinaryToText



Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantObjectBinaryToText \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11520\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\fs18 Converts the binary representation of an object to a textual representation.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantObjectBinaryToText(Input: TStream; Output: TStream);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantObjectBinaryToText to convert the binary representation of an object to a readable textual format. The Input stream contains the binary representation, and the textual representation is written to the Output stream.
\par InstantObjectBinaryToText is only capable of converting the binary representation of a \strike TInstantObject\strike0\{linkID=7240>main\} instance to a textual representation.
\par 
\par }
11520
75DE_H3





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantObjectTextToBinary\strike0\{linkID=11530>main\}
\par }
11530
75DE_H4
InstantObjectTextToBinary
InstantObjectTextToBinary



Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantObjectTextToBinary \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11540\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\fs18 Converts the textual representation of an object to a binary representation.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantObjectTextToBinary(Input: TStream; Output: TStream);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantObjectTextToBinary to convert the textual representation of an object to a binary representation. The Input stream contains the textual representation, and the binary representation is written to the Output stream.
\par \strike InstantObjectBinaryToText\strike0\{linkID=11510>main\} is only capable of converting the textual representation of a \strike TInstantObject\strike0\{linkID=7240>main\} instance to a binary representation.
\par 
\par }
11540
75DE_H5





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantObjectBinaryToText\strike0\{linkID=11510>main\}
\par }
11550
75DE_H6
InstantPartStr
InstantPartStr



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantPartStr \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike Example 1\strike0\{linkID=11560>example\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\fs18 Extracts a part of a delimited string.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantPartStr(Str: \b string\b0 ; \b Index\b0 : Integer; Delimiter: Char): \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantPartStr to extract a part of a string separated by a Delimiter. The Index is one-based and denotes which part of the string should be returned.
\par 
\par }
11560
75DE_H7
InstantPartStr, Example 1
InstantPartStr, Example 1



Imported
example


FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike InstantPartStr\strike0\{link=75DE_H6>main\}\{keepn\} 
\par \pard\keep\f1\fs18   InstantPartString('Part1.Part2', 1, '.'); //'Part1'
\par   InstantPartString('Part3.Part4', 2, '.'); //'Part4'
\par 
\par }
11570
7RMQ.VH
InstantReadObject
InstantReadObject



Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 InstantReadObject \b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11580\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\fs18 Reads an object from a stream
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantReadObject(Stream: TStream; Format: \strike TInstantStreamFormat\strike0\{linkID=12400>main\}; AObject: TPersistent): TPersistent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantReadObject to read the object specified by the AObject argument from the stream specified by the Stream argument. If the AObject argument is nil, InstantReadObject creates an object and returns this object as the function result. The Format argument specifies the format of the stream.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  The sfXML format can only be used for instances of \strike TInstantObject\strike0\{linkID=7240>main\} descendants
\par 
\par }
11580
8DW2.BO





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantWriteObject\strike0\{linkID=11880>main\}
\par }
11590
7RMQ.VB
InstantReadObjects
InstantReadObjects



Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantReadObjects \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11600\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\fs18 Reads objects from a stream
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantReadObjects(Stream: TStream; Format: \strike TInstantStreamFormat\strike0\{linkID=12400>main\}; Objects: TList);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantReadObjects to read objects from the stream specified by the Stream argument into the list specified by the Objects argument. The Format argument specifies the format of the stream.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  The sfXML format can only be used for instances of \strike TInstantObject\strike0\{linkID=7240>main\} descendants
\par 
\par }
11600
7RMQ.VC





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantWriteObjects\strike0\{linkID=11900>main\}
\par }
11610
7RMQ.VE
InstantRefreshObjects
InstantRefreshObjects



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantRefreshObjects \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11620\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Refreshes all instances of an array of classes
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantRefreshObjects(Classes: \b array\b0  \b of\b0  TInstantObjectClass; Progress: \strike TInstantProgressEvent\strike0\{linkID=12360>main\}; Connector: \strike TInstantConnector\strike0\{linkID=3780>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantRefreshObjects to refresh all instances of the Classes in the array using the specified Connector. Assign the progress argument to receive progress information.
\par 
\par }
11620
7RMQ.VF





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Refresh\strike0\{linkID=8740>main\}
\par \strike TInstantObject.RefreshAll\strike0\{linkID=8760>main\}
\par }
11630
53SLGW3
InstantRegisterAccessorClass
InstantRegisterAccessorClass



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantRegisterAccessorClass \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11640\}\tab\strike Unit: InstantPresentation\strike0\{linkID=12870>main\}
\par \pard\sb25\sa85\tx1435\fs18 Registers a class derived from TInstantAccessor.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantRegisterAccessorClass(AClass: TInstantAccessorClass);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantRegisterAccessorClass to register an accessor class. The class registration is required to enable access to contained objects in instances of the class associated with a registered accessor class.
\par 
\par }
11640
7RMQ.VG





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantUnregisterAccessorClass\strike0\{linkID=11820>main\}
\par }
11650
3OA4HS8
InstantRegisterClass
InstantRegisterClass



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantRegisterClass \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11660\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Registers a class derived from \strike TInstantObject\strike0\{linkID=7240>main\}.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantRegisterClass(AClass: TInstantObjectClass);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantRegisterClass to register a class. The class registration is required to enable streaming and persistence of instances of the registered class.
\par 
\par }
11660
8DW2.CO





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantUnregisterClass\strike0\{linkID=11840>main\}
\par \strike InstantRegisterClasses\strike0\{linkID=11670>main\}
\par \strike TInstantObject\strike0\{linkID=7240>main\}
\par }
11670
7RMQ.WA
InstantRegisterClasses
InstantRegisterClasses



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantRegisterClasses \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11680\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Registers an array of classes derived from \strike TInstantObject\strike0\{linkID=7240>main\}.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantRegisterClasses(AClasses: \b array\b0  \b of\b0  TInstantObjectClass);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use RegisterClasses to conveniently register an array of classes instead of registering classes individually.
\par 
\par }
11680
7RMQ.WB





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantUnregisterClasses\strike0\{linkID=11860>main\}
\par \strike InstantRegisterClass\strike0\{linkID=11650>main\}
\par \strike TInstantObject\strike0\{linkID=7240>main\}
\par }
11690
7RMQ.WD
InstantRightPos
InstantRightPos



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantRightPos \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike Example 1\strike0\{linkID=11700>example\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\fs18 Returns the starting position of the last occurrence of a substring in a given string.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantRightPos(\b const\b0  SubStr: \b string\b0 ; \b const\b0  Str: \b string\b0 ; IgnoreCase: Boolean): Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantRightPos searches for a substring in a given string. It returns the one-based index of the first character of the last occurrence of the substring in the given string. InstantRightPos is case-sensitive. If the substring is not found, InstantRightPos returns zero. Use the IgnoreCase argument to specify if an case insensitive comparison should be made.
\par 
\par }
11700
7RMQ.WE
InstantRightPos, Example 1
InstantRightPos, Example 1



Imported
example


FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike InstantRightPos\strike0\{link=7RMQ.WD>main\}\{keepn\} 
\par \pard\keep\f1\fs18 var
\par   Pos: Integer;
\par begin
\par   Pos := InstantRightPos('Inst', 'Install InstantObjects Instantaneously');
\par   ShowMessage(IntToStr(Pos)); //Pos equals 24
\par end;
\par 
\par }
11710
327SI7W
InstantStrToCharSet
InstantStrToCharSet



Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 InstantStrToCharSet \b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\ul See Also\ulnone\{linkID=11720\}\tab\strike Example 1\strike0\{linkID=11730>example\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Coverts a string to a set of char.
\par \pard\sb25\sa25\tx1435\tx2875\b\f1 function\b0  InstantStrToCharSet(\b const\b0  Str: \b string\b0 ): TChars;
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Use InstantStrToCharSet to convert a string to a set of char. The string may be condensed using ".." to denote ranges.
\par 
\par }
11720
7RMQ.WF





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantCharSetToStr\strike0\{linkID=11070>main\}
\par }
11730
7RMQ.WG
InstantStrToCharSet, Example 1
InstantStrToCharSet, Example 1



Imported
example


FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike InstantStrToCharSet\strike0\{link=327SI7W>main\}\{keepn\} 
\par \pard\keep\f1\fs18   InstantStrToCharSet('abc');  //['a'..'c']
\par   InstantStrToCharSet('a..d');  //['a'..'d']
\par   InstantStrToCharSet('1..4a..d');  //['1'..'4','a'..'d']
\par 
\par }
11740
75DE_A8
InstantStrToDate
InstantStrToDate



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 InstantStrToDate \b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11750\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\fs18 Converts a string to a TDateTime value.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantStrToDate(\b const\b0  Str: \b string\b0 ): TDateTime;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantStrToDate to convert a date value encoded in a string to a TDateTime value. The date string must conform to the date format of ISO 8601.
\par 
\par }
11750
8DW2.DO





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantDateFormat\strike0\{linkID=12470>main\}
\par \strike InstantStrToTime\strike0\{linkID=11800>main\}
\par \strike InstantStrToDateTime\strike0\{linkID=11760>main\}
\par }
11760
327SI9T
InstantStrToDateTime
InstantStrToDateTime



Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantStrToDateTime \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11770\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\fs18 Converts a string to a TDateTime value.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantStrToDateTime(\b const\b0  Str: \b string\b0 ): TDateTime;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantStrToDateTime to convert a date and time encoded in a string to a TDateTime value. The date-time string must conform to the date and time format of ISO 8601.
\par If S does not contain a valid date, InstantStrToDateTime raises an EInstantConvertionError exception.
\par 
\par }
11770
75DE_A2





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantDateTimeFormat\strike0\{linkID=12490>main\}
\par \strike InstantStrToDate\strike0\{linkID=11740>main\}
\par \strike InstantStrToTime\strike0\{linkID=11800>main\}
\par }
11780
75DE_A3
InstantStrToList
InstantStrToList



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantStrToList \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike Example 1\strike0\{linkID=11790>example\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\fs18 Adds the individual strings of a delimited string to a TStrings object.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantStrToList(\b const\b0  Str: \b string\b0 ; List: TStrings; Delimiters: TChars);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantStrToList converts a delimited string to individual strings and adds these strings to a TStrings object.
\par 
\par }
11790
75DE_A4
InstantStrToList, Example 1
InstantStrToList, Example 1



Imported
example


FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike InstantStrToList\strike0\{link=75DE_A3>main\}\{keepn\} 
\par \pard\keep\f1\fs18 var
\par   S: string;
\par   StringList: TStringList;
\par begin
\par   S := 'String1:String2.String3<String4';
\par   StringList := TStringList.Create;
\par   try
\par     InstantStrToList(S, StringList, [':','.','<','x']);
\par     ShowMessage(IntToStr(StringList.Count)); //StringList.Count equals 4
\par   finally
\par     StringList.Free;
\par   end;
\par end;
\par 
\par }
11800
75DE_A1
InstantStrToTime
InstantStrToTime



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 InstantStrToTime \b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11810\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\fs18 Converts a string to a TDateTime value.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantStrToTime(\b const\b0  Str: \b string\b0 ): TDateTime;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use \strike InstantStrToDate\strike0\{linkID=11740>main\} to convert a time value encoded in a string to a TDateTime value. The time string must conform to the time format of ISO 8601.
\par 
\par }
11810
75DE_A5





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantTimeFormat\strike0\{linkID=12510>main\}
\par \strike InstantStrToDate\strike0\{linkID=11740>main\}
\par \strike InstantStrToDateTime\strike0\{linkID=11760>main\}
\par }
11820
7RMQ.WH
InstantUnregisterAccessorClass
InstantUnregisterAccessorClass



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantUnregisterAccessorClass \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11830\}\tab\strike Unit: InstantPresentation\strike0\{linkID=12870>main\}
\par \pard\sb25\sa85\tx1435\fs18 Unregisters a class derived from TInstantAccessor
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantUnregisterAccessorClass(AClass: TInstantAccessorClass);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantUnregisterAccessorClass to unregister an accessor class that is no longer required.
\par 
\par }
11830
75DE_A7





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantRegisterAccessorClass\strike0\{linkID=11630>main\}
\par }
11840
8DW2.CP
InstantUnregisterClass
InstantUnregisterClass



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantUnregisterClass \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11850\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Unregisters a class derived from \strike TInstantObject\strike0\{linkID=7240>main\}
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantUnregisterClass(AClass: TInstantObjectClass);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantUnregisterClass to unregister a class derived from \strike TInstantObject\strike0\{linkID=7240>main\} that is no longer required.
\par 
\par }
11850
75DE_B8





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantRegisterClass\strike0\{linkID=11650>main\}
\par }
11860
7RMQ.WC
InstantUnregisterClasses
InstantUnregisterClasses



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantUnregisterClasses \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11870\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Unregisters an array of classes derived from \strike TInstantObject\strike0\{linkID=7240>main\}
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantUnregisterClasses(AClasses: \b array\b0  \b of\b0  TInstantObjectClass);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantUnregisterClasses to conveniently unregister an array of classes that are no longer required, instead of unregistering the classes individually.
\par 
\par }
11870
75DE_AZ





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantRegisterClasses\strike0\{linkID=11670>main\}
\par }
11880
7RMQ.VA
InstantWriteObject
InstantWriteObject



Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantWriteObject \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11890\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\fs18 Writes an object to a stream
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantWriteObject(Stream: TStream; Format: \strike TInstantStreamFormat\strike0\{linkID=12400>main\}; AObject: TPersistent);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantWriteObject to write the object specified by the AObject argument to the stream specified by the Stream argument. The Format argument specifies the format of the output.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  The sfXML format can only be used for instances of \strike TInstantObject\strike0\{linkID=7240>main\} descendants
\par 
\par }
11890
8DW2.EP





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantReadObject\strike0\{linkID=11570>main\}
\par }
11900
7RMQ.VD
InstantWriteObjects
InstantWriteObjects



Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantWriteObjects \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11910\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}
\par \pard\sb25\sa85\tx1435\fs18 Writes objects to a stream
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantWriteObjects(Stream: TStream; Format: \strike TInstantStreamFormat\strike0\{linkID=12400>main\}; Objects: TList);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantWriteObjects to write the objects in the list specified by the Objects argument to the stream specified by the Stream argument. The Format argument specifies the format of the output.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  The sfXML format can only be used for instances of \strike TInstantObject\strike0\{linkID=7240>main\} descendants
\par 
\par }
11910
75DE_B1





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantReadObjects\strike0\{linkID=11590>main\}
\par }
11920
327SI0S
TInstantVersion
TInstantVersion



Imported
main


FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantVersion \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=11930\}\tab\strike Unit: InstantUtils\strike0\{linkID=12910>main\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the version of a file.
\par \pard\sb25\sa25\tx1435\f1 TInstantVersion = \b record\b0 
\par   Build: Word;
\par   Major: Word;
\par   Minor: Word;
\par   Release: Word;
\par   \b end\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Specifies as a record the version of a file.
\par 
\par }
11930
75DE_B2





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantFileVersion\strike0\{linkID=11290>main\}
\par }
11940
ID_169
PInstantAttribute
PInstantAttribute



Imported
main


FALSE
24
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 PInstantAttribute \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The common ancestor of all the attribute classes.
\par \pard\sb25\sa25\strike\f1 TInstantAttribute\strike0\{linkID=2180>main\} = \b class\b0 (\strike TInstantStreamable\strike0\{linkID=10680>main\})
\par PInstantAttribute = ^\strike TInstantAttribute\strike0\{linkID=2180>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantAttribute is the ancestor of all attribute classes. It introduces common properties and methods that mainly fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Convert the value of the attribute to another data type.
\par \{bmct bm3.BMP\}\tab Validate the value of the attribute.
\par \{bmct bm3.BMP\}\tab Define how the value of the attribute is displayed or edited.
\par \pard\sb25\sa25\tx495 Although no presumptions are made about the use of TInstantAttribute descendants, their main purpose is to serve as logical placeholders for attributes of classes descending from \strike TInstantObject\strike0\{linkID=7240>main\}. Attributes may have metadata. The metadata contains the definition of the attribute such as the attributes name, data type, and size. Furthermore the metadata may specify features of the attribute such as masks and default value. If the attribute is owned by an instance of a \strike TInstantObject\strike0\{linkID=7240>main\} descendant, it has been created on the basis of attribute metadata specified as part of the class of the owning instance. TInstantAttribute descendants allocate memory to hold the value of the attribute they represent.
\par \trowd\trleft-1\trqc\cellx809\cellx1439\pard\intbl TInstantAttribute is abstract; so do not create instances of this class. Instead refer to the following concrete descendant classes: \b Simple attribute classes\cell Complex attribute classes\cell\row
\trowd\trleft-1\trqc\cellx809\cellx1439\pard\intbl\b0\strike TInstantInteger\strike0\{linkID=6920>main\}\cell\strike TInstantPart\strike0\{linkID=9100>main\}\cell\row
\strike\trowd\trleft-1\trqc\cellx809\cellx1439\intbl TInstantFloat\strike0\{linkID=6690>main\}\cell\strike TInstantReference\strike0\{linkID=9370>main\}\cell\row
\strike\trowd\trleft-1\trqc\cellx809\cellx1439\intbl TInstantBoolean\strike0\{linkID=2870>main\}\cell\strike TInstantParts\strike0\{linkID=9240>main\}\cell\row
\strike\trowd\trleft-1\trqc\cellx809\cellx1439\intbl TInstantString\strike0\{linkID=10850>main\}\cell\strike TInstantReferences\strike0\{linkID=9630>main\}\cell\row
\strike\trowd\trleft-1\trqc\cellx809\cellx1439\intbl TInstantDateTime\strike0\{linkID=5520>main\}\cell\cell\row
\strike\trowd\trleft-1\trqc\cellx809\cellx1439\intbl TInstantBlob\strike0\{linkID=2690>main\}\cell\cell\row
\strike\trowd\trleft-1\trqc\cellx809\cellx1439\intbl TInstantMemo\strike0\{linkID=7040>main\}\cell\cell\row
\pard 
\par 
\par }
11950
ID_473
TInstantAccessMode
TInstantAccessMode



Imported
main


FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAccessMode \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{link=ID_413>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines how an object is being accessed.
\par \pard\sb25\sa25\f1 TInstantAccessMode = (amObject, amContent);
\par \pard\sb55\sa25\b\f0 Description
\par \trowd\trleft-1\trqc\cellx319\cellx1439\pard\intbl\b0 Specifies how objects are accessed. Either the object itself or objects contained in the object can be accessed. \b Value\cell Meaning\cell\row
\trowd\trleft-1\trqc\cellx319\cellx1439\pard\intbl\b0 amObject\cell The object itself is accessed.\cell\row
\intbl amContent\cell The contained objects are accessed.\cell\row
\pard 
\par 
\par }
11960
ID_149
TInstantADOProviderType
TInstantADOProviderType



Imported
main


FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADOProviderType \cf1\b0\fs16 
\par \strike Unit: InstantADO\strike0\{link=ID_102>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The ADO provider type
\par \pard\sb25\sa25\f1 TInstantADOProviderType = (ptUnknown, ptMSJet, ptMSSQLServer, ptOracle, ptMySQL, ptIBMDB2);
\par \pard\sb55\sa25\b\f0 Description
\par \trowd\trleft-1\trqc\cellx319\cellx1439\pard\intbl\b0 TInstantADOProviderType enumerates the types of ADO providers recognized by InstantObjects \b Value\cell Meaning\cell\row
\trowd\trleft-1\trqc\cellx319\cellx1439\pard\intbl\b0 ptUnknown\cell The provider is not recognized\cell\row
\intbl ptJet\cell Microsoft Jet OLE DB Provider\cell\row
\intbl ptMSSQLServer\cell Microsoft OLE DB Provider for SQL Server\cell\row
\intbl ptOracle\cell Oracle OLE DB Provider\cell\row
\pard 
\par 
\par }
11970
ID_871
TInstantAttributeChangeEvent
TInstantAttributeChangeEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttributeChangeEvent \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for attribute change notification events.
\par \pard\sb25\sa25\f1 TInstantAttributeChangeEvent = \b procedure\b0  (Sender: \strike TInstantObject\strike0\{linkID=7240>main\}; Attribute: \strike TInstantAttribute\strike0\{linkID=2180>main\}) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantAttributeChangeEvent is the event type for attribute change notification events. The Sender argument contains a reference to the object that the attribute, specified by the Attribute argument, belongs to.
\par 
\par }
11980
ID_219
TInstantAttributeType
TInstantAttributeType



Imported
main


FALSE
23
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttributeType \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the type of an attribute.
\par \pard\sb25\sa25\f1 TInstantAttributeType = (atUnknown, atInteger, atFloat, atBoolean, atString, atDateTime, atBlob, atMemo, atPart, atReference, atParts, atReferences);
\par \pard\sb55\sa25\b\f0 Description
\par \trowd\trleft-1\trqc\cellx319\cellx1439\pard\intbl\b0 TInstantAttributeType specifies the type of an attribute. \b Value\cell Description\cell\row
\trowd\trleft-1\trqc\cellx319\cellx1439\pard\intbl\b0 atUnknown\cell Unknown or undetermined\cell\row
\intbl atInteger\cell 32-Bit integer attribute\cell\row
\intbl atFloat\cell Floating-point numeric attribute\cell\row
\intbl atBoolean\cell Boolean attribute\cell\row
\intbl atString\cell Character or string attribute\cell\row
\intbl atDateTime\cell Date and time attribute\cell\row
\intbl atBlob\cell Binary Large Object attribute\cell\row
\intbl atMemo\cell Text memo attribute\cell\row
\intbl atPart\cell Single object embedding attribute\cell\row
\intbl atReference\cell Single object reference attribute\cell\row
\intbl atParts\cell Multiple objects embedding attribute\cell\row
\intbl atReferences\cell Multiple objects reference attribute\cell\row
\pard 
\par 
\par }
11990
ID_234
TInstantBDEDriverType
TInstantBDEDriverType



Imported
main


FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBDEDriverType \cf1\b0\fs16 
\par \strike Unit: InstantBDE\strike0\{link=ID_225>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The BDE driver type
\par \pard\sb25\sa25\f1 TInstantBDEDriverType = (dtUnknown, dtStandard, dtInterBase, dtMSAccess, dtMSSQLServer, dtOracle, dtDB2);
\par \pard\sb55\sa25\b\f0 Description
\par \trowd\trleft-1\trqc\cellx499\cellx1439\pard\intbl\b0 TInstantBDEDriverType enumerates the types of BDE drivers recognized by InstantObjects \b Value\cell Meaning\cell\row
\trowd\trleft-1\trqc\cellx499\cellx1439\pard\intbl\b0 dtUnknown\cell The driver is not recognized\cell\row
\intbl dtStandard\cell STANDARD driver\cell\row
\intbl dtInterBase\cell INTRBASE driver\cell\row
\intbl dtMSAccess\cell MSACCESS driver\cell\row
\intbl dtMSSQLServer\cell MSSQL driver\cell\row
\intbl dtOracle);\cell ORACLE driver\cell\row
\pard 
\par 
\par }
12000
ID_489
TInstantCompareObjectsEvent
TInstantCompareObjectsEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCompareObjectsEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{link=ID_413>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for object comparison events.
\par \pard\sb25\sa25\f1 TInstantCompareObjectsEvent = \b procedure\b0  (Sender: TObject; AObject1, AObject2: TObject; \b var\b0  Compare: Integer) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use TInstantCompareObjectsEvent as the event type for object comparison events. The AObject1 and AObject2 arguments specify the objects that are to be compared. Set the Compare argument to a value less than 0 if AObject1 is less than AObject2. Set Compare to 0 if AObject1 is equivalent to AObject2, and set Compare to a value greater than 0 if AObject1 is greater than AObject2.
\par 
\par }
12010
75DE_B3
TInstantCompareOption
TInstantCompareOption



Imported
main


FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCompareOption \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{link=327SI7V>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies options for a comparison.
\par \pard\sb25\sa25\f1 TInstantCompareOption = (coCaseInsensitive, coPartial);
\par \strike TInstantCompareOptions\strike0\{linkID=12020>main\} = \b set\b0  \b of\b0  TInstantCompareOption;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantCompareOption specifies the options that apply to a comparison.
\par 
\par \trowd\trleft-1\trqc\cellx369\cellx1439\pard\intbl\b Value\cell Description\cell\row
\trowd\trleft-1\trqc\cellx369\cellx1439\pard\intbl\b0 coCaseInsensitive\cell A case insensitive comparison is performed.\cell\row
\intbl coPartial\cell A partial match is sufficient.\cell\row
\pard 
\par 
\par }
12020
327SI8V
TInstantCompareOptions
TInstantCompareOptions



Imported
main


FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCompareOptions \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{link=327SI7V>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies options for a comparison.
\par \pard\sb25\sa25\strike\f1 TInstantCompareOption\strike0\{linkID=12010>main\} = (coCaseInsensitive, coPartial);
\par TInstantCompareOptions = \b set\b0  \b of\b0  \strike TInstantCompareOption\strike0\{linkID=12010>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantCompareOption specifies the options that apply to a comparison.
\par 
\par \trowd\trleft-1\trqc\cellx369\cellx1439\pard\intbl\b Value\cell Description\cell\row
\trowd\trleft-1\trqc\cellx369\cellx1439\pard\intbl\b0 coCaseInsensitive\cell A case insensitive comparison is performed.\cell\row
\intbl coPartial\cell A partial match is sufficient.\cell\row
\pard 
\par 
\par }
12030
ID_843
TInstantConflictAction
TInstantConflictAction



Imported
main


FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConflictAction \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies how conflicts should be resolved.
\par \pard\sb25\sa25\f1 TInstantConflictAction = (caIgnore, caFail);
\par \pard\sb55\sa25\b\f0 Description
\par \trowd\trleft-1\trqc\cellx249\cellx1439\pard\intbl\b0 TInstantConflictAction specifies how conflicting updates to an object should be handled. \b Value\cell Description\cell\row
\trowd\trleft-1\trqc\cellx249\cellx1439\pard\intbl\b0 caIgnore\cell Conflicts are ignored. The operation is forcefully executed.\cell\row
\intbl caFail\cell Conflicts result in an error.\cell\row
\pard 
\par 
\par }
12040
75DE_B4
TInstantConnectionManagerActionType
TInstantConnectionManagerActionType



Imported
main


FALSE
21
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManagerActionType \cf1\b0\fs16 
\par \strike Unit: InstantConnectionManager\strike0\{link=ID_322>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Connection manager action types.
\par \pard\sb25\sa25\f1 TInstantConnectionManagerActionType = (atNew, atEdit, atDelete, atRename, atConnect, atDisconnect, atBuild);
\par \strike TInstantConnectionManagerActionTypes\strike0\{linkID=12050>main\} = \b set\b0  \b of\b0  TInstantConnectionManagerActionType;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Defines the actions that can appear in a connection manager.
\par 
\par \trowd\trleft-1\trqc\cellx259\cellx1439\pard\intbl\b Value\cell Meaning\cell\row
\trowd\trleft-1\trqc\cellx259\cellx1439\pard\intbl\b0 atNew\cell Allow creating new connections\cell\row
\intbl atEdit\cell Allow editing existing connections\cell\row
\intbl atDelete\cell Allow deleting connections\cell\row
\intbl atRename\cell Allow renaming connections\cell\row
\intbl atConnect\cell Allow connecting from within the manager\cell\row
\intbl atDisconnect\cell Allow disconnecting from within the manager\cell\row
\intbl atBuild\cell Allow building the database via a connection\cell\row
\pard 
\par 
\par }
12050
ID_343
TInstantConnectionManagerActionTypes
TInstantConnectionManagerActionTypes



Imported
main


FALSE
21
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManagerActionTypes \cf1\b0\fs16 
\par \strike Unit: InstantConnectionManager\strike0\{link=ID_322>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Connection manager action types.
\par \pard\sb25\sa25\strike\f1 TInstantConnectionManagerActionType\strike0\{linkID=12040>main\} = (atNew, atEdit, atDelete, atRename, atConnect, atDisconnect, atBuild);
\par TInstantConnectionManagerActionTypes = \b set\b0  \b of\b0  \strike TInstantConnectionManagerActionType\strike0\{linkID=12040>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Defines the actions that can appear in a connection manager.
\par 
\par \trowd\trleft-1\trqc\cellx259\cellx1439\pard\intbl\b Value\cell Meaning\cell\row
\trowd\trleft-1\trqc\cellx259\cellx1439\pard\intbl\b0 atNew\cell Allow creating new connections\cell\row
\intbl atEdit\cell Allow editing existing connections\cell\row
\intbl atDelete\cell Allow deleting connections\cell\row
\intbl atRename\cell Allow renaming connections\cell\row
\intbl atConnect\cell Allow connecting from within the manager\cell\row
\intbl atDisconnect\cell Allow disconnecting from within the manager\cell\row
\intbl atBuild\cell Allow building the database via a connection\cell\row
\pard 
\par 
\par }
12060
ID_103
TInstantConnectorClass
TInstantConnectorClass



Imported
main


FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectorClass \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Provides access to a database.
\par \pard\sb25\sa25\f1 TInstantConnectorClass = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3780>main\};
\par \strike TInstantConnector\strike0\{linkID=3780>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
12070
ID_870
TInstantContentChangeEvent
TInstantContentChangeEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContentChangeEvent \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=12080\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 The event type for content change notification events.
\par \pard\sb25\sa25\tx1435\f1 TInstantContentChangeEvent = \b procedure\b0  (Sender: \strike TInstantObject\strike0\{linkID=7240>main\}; Container: \strike TInstantContainer\strike0\{linkID=4310>main\}; ChangeType: \strike TInstantContentChangeType\strike0\{linkID=12090>main\}; \b Index\b0 : Integer; AObject: \strike TInstantObject\strike0\{linkID=7240>main\}) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantContentChangeEvent is the event type for container attribute content change notification events. The Sender argument contains a reference to the object which the changed container, specified by the Container argument, belongs to. The ChangeType specifies the type of change that occurred. The Index argument specifies the index in the containers array of objects where the change occurred. The AObject argument holds a reference to the object for which the change occurred. Please note that this reference may be unassigned.
\par 
\par }
12080
75DE_B5





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.OnBeforeContentChange\strike0\{linkID=8960>main\}
\par \strike TInstantObject.OnAfterContentChange\strike0\{linkID=8930>main\}
\par }
12090
ID_812
TInstantContentChangeType
TInstantContentChangeType



Imported
main


FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContentChangeType \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=12100\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 The types of possible changes that may occur to a container.
\par \pard\sb25\sa25\tx1435\f1 TInstantContentChangeType = (ctAdd, ctRemove, ctReplace, ctClear);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \trowd\trleft-1\trqc\cellx259\cellx1439\pard\intbl\b0 TInstantContentChangeType specifies the possible change type that can occur to a container. \b Value\cell Meaning\cell\row
\trowd\trleft-1\trqc\cellx259\cellx1439\pard\intbl\b0 ctAdd\cell An object has been added or inserted\cell\row
\intbl ctRemove\cell An object has been deleted or removed\cell\row
\intbl ctClear\cell The container was cleared\cell\row
\pard 
\par 
\par }
12100
75DE_B6





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContentChangeEvent\strike0\{linkID=12070>main\}
\par }
12110
ID_490
TInstantCreateObjectEvent
TInstantCreateObjectEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCreateObjectEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{link=ID_413>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type used for object creation events.
\par \pard\sb25\sa25\f1 TInstantCreateObjectEvent = \b procedure\b0  (Sender: TObject; \b var\b0  AObject: TObject) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantCreateObjectEvent is the event type for object creation events. The Sender argument contains the object that request an object to be created, and the AObject argument should be assigned to hold the created object.
\par 
\par }
12120
75DE_B7
TInstantDataType
TInstantDataType



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDataType \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the datatype of fields in tables
\par \pard\sb25\sa25\f1 TInstantDataType = (dtInteger, dtFloat, dtBoolean, dtString, dtMemo, dtDateTime, dtBlob);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantDataType specifies the datatype of fields in tables.
\par 
\par }
12130
ID_853
TInstantErrorAction
TInstantErrorAction



Imported
main


FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantErrorAction \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=12140\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Defines actions used in error handlers.
\par \pard\sb25\sa25\tx1435\f1 TInstantErrorAction = (eaRetry, eaIgnore, eaError, eaRevert, eaCancel);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The TInstantErrorAction type defines the possible values for actions used in error handlers.
\par \trowd\trleft-1\trqc\cellx359\cellx1439\pard\intbl Although the exact interpretation of the value depends on what kind of operation is performed, their general meaning is described in the following table: \b Value\cell Description\cell\row
\trowd\trleft-1\trqc\cellx359\cellx1439\pard\intbl\b0 eaRetry\cell Retry the operation.\cell\row
\intbl eaIgnore\cell Retry the operation and ignore errors.\cell\row
\intbl eaError\cell Fail.\cell\row
\intbl eaRevert\cell Revert the operation.\cell\row
\intbl eaCancel\cell Cancel the operation.\cell\row
\pard 
\par 
\par }
12140
75DE_C8





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.OnError\strike0\{linkID=9000>main\}
\par \strike TInstantObject.HandleError\strike0\{linkID=8590>main\}
\par }
12150
ID_876
TInstantErrorEvent
TInstantErrorEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantErrorEvent \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for error events.
\par \pard\sb25\sa25\f1 TInstantErrorEvent = \b procedure\b0  (Sender: TObject; OperationType: \strike TInstantOperationType\strike0\{linkID=12340>main\}; E: Exception; \b var\b0  Action: \strike TInstantErrorAction\strike0\{linkID=12130>main\}) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantErrorEvent is the event type for error events. The Sender argument contains a reference to the object for which the operation failed. The OperationType argument specifies during which kind of operation the error occurred. The E argument contains the causing Exception object. Use the Action argument to specify what kind of action should be performed in response to the Error.
\par 
\par }
12160
ID_582
TInstantExplorerLayout
TInstantExplorerLayout



Imported
main


FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorerLayout \cf1\b0\fs16 
\par \strike Unit: InstantExplorer\strike0\{link=ID_564>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the layout of the explorer.
\par \pard\sb25\sa25\f1 TInstantExplorerLayout = (loTreeOnly, loDetailOnly, loVertical, loHorizontal);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Layout is used to specify the extent and arrangement of the explorer.
\par 
\par \trowd\trleft-1\trqc\cellx449\cellx1439\pard\intbl\b Value\cell Meaning\cell\row
\trowd\trleft-1\trqc\cellx449\cellx1439\pard\intbl\b0 loTreeOnly\cell Show tree only\cell\row
\intbl loVertical\cell Show tree on top of details\cell\row
\intbl loHorizontal\cell Show tree left to details\cell\row
\pard 
\par 
\par }
12170
75DE_BZ
TInstantExplorerNodeType
TInstantExplorerNodeType



Imported
main


FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorerNodeType \cf1\b0\fs16 
\par \strike Unit: InstantExplorer\strike0\{link=ID_564>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Defines node types of an explorer.
\par \pard\sb25\sa25\f1 TInstantExplorerNodeType = (ntProperty, ntObject, ntContainer);
\par \strike TInstantExplorerNodeTypes\strike0\{linkID=12180>main\} = \b set\b0  \b of\b0  TInstantExplorerNodeType;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Defines the various node types used by \strike TInstantExplorer\strike0\{linkID=6080>main\}.
\par 
\par \trowd\trleft-1\trqc\cellx319\cellx1439\pard\intbl\b Value\cell Meaning\cell\row
\trowd\trleft-1\trqc\cellx319\cellx1439\pard\intbl\b0 ntProperty\cell Node represents a property of an object\cell\row
\intbl ntObject\cell Node represents an object\cell\row
\intbl ntContainer\cell Node represents a container attribute\cell\row
\pard 
\par 
\par }
12180
ID_583
TInstantExplorerNodeTypes
TInstantExplorerNodeTypes



Imported
main


FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorerNodeTypes \cf1\b0\fs16 
\par \strike Unit: InstantExplorer\strike0\{link=ID_564>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Defines node types of an explorer.
\par \pard\sb25\sa25\strike\f1 TInstantExplorerNodeType\strike0\{linkID=12170>main\} = (ntProperty, ntObject, ntContainer);
\par TInstantExplorerNodeTypes = \b set\b0  \b of\b0  \strike TInstantExplorerNodeType\strike0\{linkID=12170>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Defines the various node types used by \strike TInstantExplorer\strike0\{linkID=6080>main\}.
\par 
\par \trowd\trleft-1\trqc\cellx319\cellx1439\pard\intbl\b Value\cell Meaning\cell\row
\trowd\trleft-1\trqc\cellx319\cellx1439\pard\intbl\b0 ntProperty\cell Node represents a property of an object\cell\row
\intbl ntObject\cell Node represents an object\cell\row
\intbl ntContainer\cell Node represents a container attribute\cell\row
\pard 
\par 
\par }
12190
8DW2.FP
TInstantExposerOption
TInstantExposerOption



Imported
main


FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposerOption \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=12200\}\tab\strike Unit: InstantPresentation\strike0\{linkID=12870>main\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies options for an exposer.
\par \pard\sb25\sa25\tx1435\f1 TInstantExposerOption = (eoAutoApply, eoDeferInsert, eoSyncEdit);
\par \strike TInstantExposerOptions\strike0\{linkID=12210>main\} = \b set\b0  \b of\b0  TInstantExposerOption;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantExposerOption specifies options for exposers.
\par 
\par \trowd\trleft-1\trqc\cellx259\cellx1439\pard\intbl\b Value\cell Description\cell\row
\trowd\trleft-1\trqc\cellx259\cellx1439\pard\intbl\b0 eoAutoApply\cell Changes are automatically applied to the Subject.\cell\row
\intbl eoDeferInsert\cell Insertion of the object in the of the container of the Subject is defered.\cell\row
\pard 
\par 
\par }
12200
75DE_C1





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.Options\strike0\{linkID=4970>main\}
\par }
12210
ID_478
TInstantExposerOptions
TInstantExposerOptions



Imported
main


FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposerOptions \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=12220\}\tab\strike Unit: InstantPresentation\strike0\{linkID=12870>main\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies options for an exposer.
\par \pard\sb25\sa25\tx1435\strike\f1 TInstantExposerOption\strike0\{linkID=12190>main\} = (eoAutoApply, eoDeferInsert, eoSyncEdit);
\par TInstantExposerOptions = \b set\b0  \b of\b0  \strike TInstantExposerOption\strike0\{linkID=12190>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantExposerOption specifies options for exposers.
\par 
\par \trowd\trleft-1\trqc\cellx259\cellx1439\pard\intbl\b Value\cell Description\cell\row
\trowd\trleft-1\trqc\cellx259\cellx1439\pard\intbl\b0 eoAutoApply\cell Changes are automatically applied to the Subject.\cell\row
\intbl eoDeferInsert\cell Insertion of the object in the of the container of the Subject is defered.\cell\row
\pard 
\par 
\par }
12220
75DE_C2





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.Options\strike0\{linkID=4970>main\}
\par }
12230
ID_499
TInstantFieldDefEvent
TInstantFieldDefEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFieldDefEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{link=ID_413>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for field definition initialization events.
\par \pard\sb25\sa25\f1 TInstantFieldDefEvent = \b procedure\b0  (Sender: TObject; FieldDef: TFieldDef) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use TInstantFieldDefEvent as the event type for field definition initialization events. The Sender argument specifies the holder of the TFieldDef object specified by the FieldDef argument that should be initialized.
\par 
\par }
12240
ID_492
TInstantFieldErrorEvent
TInstantFieldErrorEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFieldErrorEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{link=ID_413>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for field errors.
\par \pard\sb25\sa25\f1 TInstantFieldErrorEvent = \b procedure\b0  (Sender: TObject; E: Exception; Field: TField; Value: Variant; \b Write\b0 : Boolean; \b var\b0  Handled: Boolean) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use TInstantFieldErrorEvent as the event type for field error events. The Sender argument specifies the holder of the field specified by the Field argument for which the error occurred. The E argument specifies the causing exception. The Value argument specifies the erroneous value that is either read from or written to the field. If the error is caused by writing the value to the field, the Write argument is True. Otherwise the Write argument is false.
\par 
\par }
12250
ID_497
TInstantFieldEvent
TInstantFieldEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFieldEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{link=ID_413>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for field events.
\par \pard\sb25\sa25\f1 TInstantFieldEvent = \b procedure\b0  (Sender: TObject; Field: TField) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use TInstantFieldEvent as the event type for field events. The Sender argument specifies the holder of the field specified by the Field argument.
\par 
\par }
12260
ID_962
TInstantGetDataSetEvent
TInstantGetDataSetEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantGetDataSetEvent \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=12270\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 The event type for dataset request events.
\par \pard\sb25\sa25\tx1435\f1 TInstantGetDataSetEvent = \b procedure\b0  (Sender: TObject; \b const\b0  CommandText: \b string\b0 ; \b var\b0  DataSet: TDataset) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0\strike TInstantInitDataSetEvent\strike0\{linkID=12290>main\} is the event type for dataset request events. The Sender argument contains a reference to the object requesting a TDataSet. The dataset must be assigned to the DataSet argument. The TableName specifies the name of the table which the dataset object is associated.
\par 
\par }
12270
75DE_C3





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantInitDataSetEvent\strike0\{linkID=12290>main\}
\par }
12280
ID_495
TInstantIncludeFieldEvent
TInstantIncludeFieldEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantIncludeFieldEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{link=ID_413>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for field inclusion events.
\par \pard\sb25\sa25\f1 TInstantIncludeFieldEvent = \b procedure\b0  (Sender: TObject; \b const\b0  FieldName: \b string\b0 ; \b var\b0  Include: Boolean) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantIncludeFieldEvent is the event type for field inclusion events. The Sender argument specifies the holder of a field with the name specified by the FieldName argument for which it should be determined whether it is to be included. If the field should be included set the Include argument to True. Otherwise set the Include argument to False.
\par 
\par }
12290
ID_964
TInstantInitDataSetEvent
TInstantInitDataSetEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantInitDataSetEvent \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=12300\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 The event type for dataset initialization events.
\par \pard\sb25\sa25\tx1435\f1 TInstantInitDataSetEvent = \b procedure\b0  (Sender: TObject; \b const\b0  CommandText: \b string\b0 ; DataSet: TDataSet) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantInitDataSetEvent is the event type for dataset initialization events. The Sender argument contains a reference to the object requesting a TDataSet object specified by the DataSet argument to be initialized. The TableName specifies the name of the table which the dataset object is associated.
\par 
\par }
12300
75DE_C4





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantGetDataSetEvent\strike0\{linkID=12260>main\}
\par }
12310
ID_502
TInstantLimitObjectsEvent
TInstantLimitObjectsEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantLimitObjectsEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{link=ID_413>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for object limitation events.
\par \pard\sb25\sa25\f1 TInstantLimitObjectsEvent = \b procedure\b0  (Sender: TObject; AObject: TObject; \b var\b0  Accept: Boolean) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantLimitObjectsEvent is the event type for object limitation events. The Sender argument specifies the obejct for which it should be determined whether it should accept or reject the object specified by the AObject argument. If It is to be accepted, set the Accept argument to True. Otherwise set the Accept argument to False.
\par 
\par }
12320
ID_874
TInstantNotifyEvent
TInstantNotifyEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantNotifyEvent \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 TInstantNotifyEvent is the event type for simple notification events.
\par \pard\sb25\sa25\f1 TInstantNotifyEvent = \b procedure\b0  (Sender: \strike TInstantObject\strike0\{linkID=7240>main\}) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantNotifyEvent is the type for events that require no specific arguments except a reference to the object to which the event occurred. This object is specified by the Sender argument.
\par 
\par }
12330
75DE_C5
TInstantObjectNotifyEvent
TInstantObjectNotifyEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObjectNotifyEvent \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 TInstantObjectNotifyEvent is used for notification.
\par \pard\sb25\sa25\f1 TInstantObjectNotifyEvent = \b procedure\b0  (Sender: \strike TInstantObject\strike0\{linkID=7240>main\}; Notification: TInstantObjectNotification) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The TInstantObjectNotifyEventis the type for events that are used to notify about object events.
\par 
\par }
12340
ID_852
TInstantOperationType
TInstantOperationType



Imported
main


FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantOperationType \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Indicates the type an operation.
\par \pard\sb25\sa25\f1 TInstantOperationType = (otNone, otCreate, otStore, otRetrieve, otRefresh, otDispose);
\par \pard\sb55\sa25\b\f0 Description
\par \trowd\trleft-1\trqc\cellx429\cellx1439\pard\intbl\b0 TInstantOperationType indicates the type operation that occurred to an object. \b Operation Type\cell Operation\cell\row
\trowd\trleft-1\trqc\cellx429\cellx1439\pard\intbl\b0 otNone\cell No operation\cell\row
\intbl otCreate\cell The object was created\cell\row
\intbl otStore\cell The object was stored\cell\row
\intbl otRetrieve\cell The object was retrieved\cell\row
\intbl otRefresh\cell The object was refreshed\cell\row
\intbl otDispose\cell The object was disposed\cell\row
\pard 
\par 
\par }
12350
327SI4P
TInstantProcessObjectEvent
TInstantProcessObjectEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantProcessObjectEvent \cf1\b0\fs16 
\par \strike Unit: InstantClasses\strike0\{link=ID_36>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for object processing events.
\par \pard\sb25\sa25\f1 TInstantProcessObjectEvent = \b procedure\b0  (Sender: TObject; AObject: TPersistent) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantProcessObjectEvent is the event type for object processing events. The Sender argument contains a reference to the processing object. The AObject argument contains a reference to the object being processed.
\par 
\par }
12360
ID_860
TInstantProgressEvent
TInstantProgressEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantProgressEvent \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for progress events.
\par \pard\sb25\sa25\f1 TInstantProgressEvent = \b procedure\b0  (Sender: TObject; Count: Integer; \b var\b0  Continue: Boolean) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantProgressEvent is the event type for progress events. The Sender argument specifies the obejct to which the progress occurs. The Count argument specifies the progress in percent. Use the Continue argument to specify if the process triggering the event should continue.
\par 
\par }
12370
ID_369
TInstantSchemeEvent
TInstantSchemeEvent



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSchemeEvent \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for database-build related events.
\par \pard\sb25\sa25\f1 TInstantSchemeEvent = \b procedure\b0  (Sender: TObject; Scheme: TInstantScheme) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0\strike TInstantAttributeChangeEvent\strike0\{linkID=11970>main\} is the event type for database-build related events. The Sender argument contains a reference to the object which attempts to build a database and the Scheme argument specifies the database scheme that is used.
\par 
\par }
12380
ID_406
TInstantSortCompare
TInstantSortCompare



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSortCompare \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=12390\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Prototype of function used to Compares objects
\par \pard\sb25\sa25\tx1435\f1 TInstantSortCompare = \b function\b0  (Holder, Obj1, Obj2: \strike TInstantObject\strike0\{linkID=7240>main\}): Integer \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Implement a function compatible with TInstantSortCompare to use for comparison of objects. The function is expected to return < 0 if Obj1 is less and Obj2, 0 if they are equal and > 0 if Obj1 is greater than Obj2. The Holder argument specifies the context of the comparison in terms of another object.
\par 
\par }
12390
75DE_C6





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Sort\strike0\{linkID=4670>main\}
\par }
12400
8DW2.BP
TInstantStreamFormat
TInstantStreamFormat



Imported
main


FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}{\f3\fmodern\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamFormat\cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12410\}\tab\strike Unit: InstantClasses\strike0\{linkID=12610>main\}\cf0\b\fs24  \cf1\b0\fs16\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 The possible stream formats
\par \pard\sb25\sa25\tx1435\f1 TInstantStreamFormat = (sfBinary, sfXML);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \b0 TInstantStreamFormat specifies the possible stream formats.
\par \b Value\f2\tab\f0 Meaning
\par \b0\f1 sfBinary\f3\tab The stream contains data in binary format\b\f0 
\par \b0\f1 sfXML\f3\tab The stream contains data in the XML format\f0 
\par }
12410
75DE_C7





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantWriteObject\strike0\{linkID=11880>main\}
\par \strike InstantReadObject\strike0\{linkID=11570>main\}
\par }
12420
ID_868
TInstantVerificationResult
TInstantVerificationResult



Imported
main


FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantVerificationResult \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=12430\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 Defines result of a verification operation.
\par \pard\sb25\sa25\tx1435\f1 TInstantVerificationResult = (vrOk, vrCancel, vrAbort, vrError);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The TInstantVerificationResult type defines the possible values for verification of operations.
\par \trowd\trleft-1\trqc\cellx249\cellx1439\pard\intbl Although the exact interpretation of the value depends on what kind of operation is performed, their general meaning is described in the following table: \b Value\cell Description\cell\row
\trowd\trleft-1\trqc\cellx249\cellx1439\pard\intbl\b0 vrOk\cell The operation may be performed\cell\row
\intbl vrCancel\cell The operation must be canceled\cell\row
\intbl vrAbort\cell The operation must be aborted\cell\row
\intbl vrError\cell The operation must be terminated with an exception\cell\row
\pard 
\par 
\par }
12430
75DE_D8





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.VerifyOperation\strike0\{linkID=8910>main\}
\par }
12440
75DE_CZ
InstantAttributePrefix
InstantAttributePrefix



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantAttributePrefix \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=12450\}\tab\strike Unit: InstantPersistence\strike0\{linkID=12820>main\}
\par \pard\sb25\sa85\tx1435\fs18 The prefix used for attribute fields.
\par \pard\sb25\sa25\tx1435\f1 InstantAttributePrefix: \b string\b0   = '_';
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantAttributePrefix is the prefix used for attribute fields. The value can be changed if another prefix is required.
\par 
\par }
12450
8DW2.GP





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AttributeByName\strike0\{linkID=7990>main\}
\par }
12460
75DE_D1
InstantClassPrefix
InstantClassPrefix



Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantClassPrefix \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The prefix used for classes.
\par \pard\sb25\sa25\f1 InstantClassPrefix: \b string\b0   = 'T';
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 InstantClassPrefix is the prefix used for classes. The value can be changed if another prefix is required.
\par 
\par }
12470
8DW2.DP
InstantDateFormat
InstantDateFormat



Imported
main


FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDateFormat \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=12480\}\tab\strike Unit: InstantConsts\strike0\{linkID=12680>main\}
\par \pard\sb25\sa25\tx1435\f1\fs18 InstantDateFormat = 'yyyymmdd';
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantDateFormat is the date format string. It complies with the date format of ISO 8601.
\par 
\par }
12480
75DE_D2





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantTimeFormat\strike0\{linkID=12510>main\}
\par \strike InstantDateTimeFormat\strike0\{linkID=12490>main\}
\par }
12490
327SI9S
InstantDateTimeFormat
InstantDateTimeFormat



Imported
main


FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDateTimeFormat \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=12500\}\tab\strike Unit: InstantConsts\strike0\{linkID=12680>main\}
\par \pard\sb25\sa25\tx1435\f1\fs18 InstantDateTimeFormat = \strike InstantDateFormat\strike0\{linkID=12470>main\} + \strike InstantTimeFormat\strike0\{linkID=12510>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantDateTimeFormat is the date and time format string. It complies with the date and time format of ISO 8601. InstantDateTimeFormat is use to convert TDateTime values to strings.
\par 
\par }
12500
75DE_D4





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantDateFormat\strike0\{linkID=12470>main\}
\par \strike InstantTimeFormat\strike0\{linkID=12510>main\}
\par \strike InstantDateTimeToStr\strike0\{linkID=11200>main\}
\par }
12510
75DE_A6
InstantTimeFormat
InstantTimeFormat



Imported
main


FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantTimeFormat \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\ul See Also\ulnone\{linkID=12520\}\tab\strike Unit: InstantConsts\strike0\{linkID=12680>main\}
\par \pard\sb25\sa25\tx1435\f1\fs18 InstantTimeFormat = 'hhnnsszzz';
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantTimeFormat is the time format string. It complies with the time format of ISO 8601.
\par 
\par }
12520
75DE_D5





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantDateFormat\strike0\{linkID=12470>main\}
\par \strike InstantDateTimeFormat\strike0\{linkID=12490>main\}
\par }
12530
ID_102
InstantADO.pas
InstantADO.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantADO.pas \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike Classes\strike0\{linkID=12540>nav\}\tab\strike Types\strike0\{linkID=12550>nav\}
\par \pard\sb25\sa25\tx1435\fs18 InstantObjects ADO support.
\par 
\par }
12540
75DE_D6





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantADO\strike0\{link=ID_102>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantADO
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantADOConnector\strike0\{linkID=1910>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
12550
75DE_D7





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantADO\strike0\{link=ID_102>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantADO
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantADOProviderType\strike0\{linkID=11960>main\}
\par \pard\li195\sb15\sa25\fs16 The ADO provider type
\par 
\par }
12560
ID_155
InstantADS.pas
InstantADS.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantADS.pas \cf1\b0\fs16 
\par \strike Classes\strike0\{link=75DE_E8>nav\}\{keepn\} 
\par \pard\sb25\sa25\fs18 InstantObjects Advantage Database Server support.
\par 
\par }
12570
75DE_E8





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantADS\strike0\{link=ID_155>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantADS
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantADSConnector\strike0\{linkID=2050>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
12580
ID_225
InstantBDE.pas
InstantBDE.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantBDE.pas \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike Classes\strike0\{linkID=12590>nav\}\tab\strike Types\strike0\{linkID=12600>nav\}
\par \pard\sb25\sa25\tx1435\fs18 InstantObjects BDE support.
\par 
\par }
12590
75DE_DZ





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantBDE\strike0\{link=ID_225>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantBDE
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantBDEConnector\strike0\{linkID=2570>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
12600
8DW2.HP





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantBDE\strike0\{link=ID_225>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantBDE
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantBDEDriverType\strike0\{linkID=11990>main\}
\par \pard\li195\sb15\sa25\fs16 The BDE driver type
\par 
\par }
12610
ID_36
InstantClasses.pas
InstantClasses.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantClasses.pas \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\strike Classes\strike0\{linkID=12620>nav\}\tab\strike Functions\strike0\{linkID=12630>nav\}\tab\strike Types\strike0\{linkID=12640>nav\}
\par \pard\sb25\sa25\tx1435\tx2875\fs18 InstantObjects Classes.
\par 
\par }
12620
75DE_E1





Imported



FALSE
33
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantClasses\strike0\{link=ID_36>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantClasses
\par \pard\keep\li95\sb25\sa25\b0\strike EInstantConversionError\strike0\{linkID=1230>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for conversion errors.
\par \pard\keep\li95\sb25\sa25\strike\fs18 EInstantError\strike0\{linkID=1350>main\}
\par \pard\li195\sb15\sa25\fs16 The common ancestor of exception classes.
\par \pard\keep\li95\sb25\sa25\strike\fs18 EInstantRangeError\strike0\{linkID=1600>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for too large or too small integer values.
\par \pard\keep\li95\sb25\sa25\strike\fs18 EInstantStreamError\strike0\{linkID=1700>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for streaming errors.
\par \pard\keep\li95\sb25\sa25\strike\fs18 EInstantValidationError\strike0\{linkID=1800>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for validation errors.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantCollection\strike0\{linkID=2980>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantCollection is a container for \strike TInstantCollectionItem\strike0\{linkID=3100>main\} objects.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantCollectionItem\strike0\{linkID=3100>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantCollectionItem is the ancestor for collection item classes.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantFileStream\strike0\{linkID=6510>main\}
\par \pard\li195\sb15\sa25\fs16 Provides stream-based access to data stored in a file.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantOwnedCollection\strike0\{linkID=9020>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantOwnedCollection is a collection that has an owner.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantResourceStream\strike0\{linkID=9960>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantResourceStream provides access to a compiled resource in the application.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantStream\strike0\{linkID=10390>main\}
\par \pard\li195\sb15\sa25\fs16 TStream is the base class for classes that provide streaming capabilities for various kinds of media.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantStreamable\strike0\{linkID=10680>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantStreamable is the base class for classes that are streamable.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantStringStream\strike0\{linkID=10960>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantStringStream provides stream-based access to a string.
\par 
\par }
12630
75DE_E2





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantClasses\strike0\{link=ID_36>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Functions in Unit InstantClasses
\par \pard\keep\li95\sb25\sa25\b0\strike InstantObjectBinaryToText\strike0\{linkID=11510>main\}
\par \pard\li195\sb15\sa25\fs16 Converts the binary representation of an object to a textual representation.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantObjectTextToBinary\strike0\{linkID=11530>main\}
\par \pard\li195\sb15\sa25\fs16 Converts the textual representation of an object to a binary representation.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantReadObject\strike0\{linkID=11570>main\}
\par \pard\li195\sb15\sa25\fs16 Reads an object from a stream
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantReadObjects\strike0\{linkID=11590>main\}
\par \pard\li195\sb15\sa25\fs16 Reads objects from a stream
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantWriteObject\strike0\{linkID=11880>main\}
\par \pard\li195\sb15\sa25\fs16 Writes an object to a stream
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantWriteObjects\strike0\{linkID=11900>main\}
\par \pard\li195\sb15\sa25\fs16 Writes objects to a stream
\par 
\par }
12640
75DE_E3





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantClasses\strike0\{link=ID_36>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantClasses
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantProcessObjectEvent\strike0\{linkID=12350>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for object processing events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantStreamFormat\strike0\{linkID=12400>main\}
\par \pard\li195\sb15\sa25\fs16 The possible stream formats
\par 
\par }
12650
ID_322
InstantConnectionManager.pas
InstantConnectionManager.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantConnectionManager.pas \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\strike Classes\strike0\{linkID=12660>nav\}\tab\strike Types\strike0\{linkID=12670>nav\}
\par \pard\sb25\sa25\tx1435\fs18 InstantObjects Connection Manager.
\par 
\par }
12660
75DE_E4





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantConnectionManager\strike0\{link=ID_322>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantConnectionManager
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantConnectionManager\strike0\{linkID=3530>main\}
\par \pard\li195\sb15\sa25\fs16 Allows the user to manage connections to various databases.
\par 
\par }
12670
75DE_E5





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantConnectionManager\strike0\{link=ID_322>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantConnectionManager
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantConnectionManagerActionType\strike0\{linkID=12040>main\}
\par \pard\li195\sb15\sa25\fs16 Connection manager action types.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantConnectionManagerActionTypes\strike0\{linkID=12050>main\}
\par \pard\li195\sb15\sa25\fs16 Connection manager action types.
\par 
\par }
12680
75DE_D3
InstantConsts.pas
InstantConsts.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantConsts.pas \cf1\b0\fs16 
\par \strike Constants\strike0\{link=75DE_E6>nav\}\{keepn\} 
\par \pard\sb25\sa25\fs18 InstantObjects Constants.
\par 
\par }
12690
75DE_E6





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantConsts\strike0\{link=75DE_D3>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Constants in Unit InstantConsts
\par \pard\keep\li95\sb25\sa25\b0\strike InstantDateFormat\strike0\{linkID=12470>main\}
\par \strike InstantDateTimeFormat\strike0\{linkID=12490>main\}
\par \strike InstantTimeFormat\strike0\{linkID=12510>main\}
\par 
\par }
12700
ID_518
InstantDBISAM.pas
InstantDBISAM.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDBISAM.pas \cf1\b0\fs16 
\par \strike Classes\strike0\{link=75DE_E7>nav\}\{keepn\} 
\par \pard\sb25\sa25\fs18 InstantObjects DBISAM support.
\par 
\par }
12710
75DE_E7





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantDBISAM\strike0\{link=ID_518>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantDBISAM
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantDBISAMConnector\strike0\{linkID=5630>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
12720
ID_533
InstantDBX.pas
InstantDBX.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDBX.pas \cf1\b0\fs16 
\par \strike Classes\strike0\{link=75DE_F8>nav\}\{keepn\} 
\par \pard\sb25\sa25\fs18 InstantObjects dbExpress support.
\par 
\par }
12730
75DE_F8





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantDBX\strike0\{link=ID_533>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantDBX
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantDBXConnector\strike0\{linkID=5800>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
12740
ID_564
InstantExplorer.pas
InstantExplorer.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantExplorer.pas \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\strike Classes\strike0\{linkID=12750>nav\}\tab\strike Functions\strike0\{linkID=12760>nav\}\tab\strike Types\strike0\{linkID=12770>nav\}
\par \pard\sb25\sa25\tx1435\tx2875\fs18 InstantObjects Object Explorer.
\par 
\par }
12750
75DE_EZ





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantExplorer\strike0\{link=ID_564>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantExplorer
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantExplorer\strike0\{linkID=6080>main\}
\par \pard\li195\sb15\sa25\fs16 Allows navigation of objects within a tree.
\par 
\par }
12760
8DW2.IP





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantExplorer\strike0\{link=ID_564>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Functions in Unit InstantExplorer
\par \pard\keep\li95\sb25\sa25\b0\strike InstantExploreObject\strike0\{linkID=11270>main\}
\par \pard\li195\sb15\sa25\fs16 Explores an object
\par 
\par }
12770
75DE_F1





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantExplorer\strike0\{link=ID_564>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantExplorer
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantExplorerLayout\strike0\{linkID=12160>main\}
\par \pard\li195\sb15\sa25\fs16 Determines the layout of the explorer.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantExplorerNodeType\strike0\{linkID=12170>main\}
\par \pard\li195\sb15\sa25\fs16 Defines node types of an explorer.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantExplorerNodeTypes\strike0\{linkID=12180>main\}
\par \pard\li195\sb15\sa25\fs16 Defines node types of an explorer.
\par 
\par }
12780
ID_628
InstantFlashFiler.pas
InstantFlashFiler.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantFlashFiler.pas \cf1\b0\fs16 
\par \strike Classes\strike0\{link=75DE_F2>nav\}\{keepn\} 
\par \pard\sb25\sa25\fs18 InstantObjects FlashFiler support.
\par 
\par }
12790
75DE_F2





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantFlashFiler\strike0\{link=ID_628>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantFlashFiler
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantFlashFilerConnector\strike0\{linkID=6590>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
12800
ID_653
InstantIBX.pas
InstantIBX.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantIBX.pas \cf1\b0\fs16 
\par \strike Classes\strike0\{link=75DE_F3>nav\}\{keepn\} 
\par \pard\sb25\sa25\fs18 InstantObjects InterBase Express support.
\par 
\par }
12810
75DE_F3





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantIBX\strike0\{link=ID_653>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantIBX
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantIBXConnector\strike0\{linkID=6810>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
12820
ID_5
InstantPersistence.pas
InstantPersistence.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantPersistence.pas \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\tx4315\strike Classes\strike0\{linkID=12830>nav\}\tab\strike Functions\strike0\{linkID=12840>nav\}\tab\strike Types\strike0\{linkID=12850>nav\}\tab\strike Constants\strike0\{linkID=12860>nav\}
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\fs18 InstantObjects Core Classes
\par 
\par }
12830
75DE_F4





Imported



FALSE
55
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantPersistence
\par \pard\keep\li95\sb25\sa25\b0\strike EInstantAccessError\strike0\{linkID=1000>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for access errors.
\par \pard\keep\li95\sb25\sa25\strike\fs18 EInstantConflict\strike0\{linkID=1120>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for conflict errors.
\par \pard\keep\li95\sb25\sa25\strike\fs18 EInstantKeyViolation\strike0\{linkID=1490>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for key violations.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantAttribute\strike0\{linkID=2180>main\}
\par \pard\li195\sb15\sa25\fs16 The common ancestor of all the attribute classes.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantBlob\strike0\{linkID=2690>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantBlob represents a binary large object (BLOB).
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantBoolean\strike0\{linkID=2870>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantBoolean represents a Boolean value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantComplex\strike0\{linkID=3200>main\}
\par \pard\li195\sb15\sa25\fs16 The ancestor of all the attribute classes that represent objects.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantConnectionBasedConnector\strike0\{linkID=3410>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantConnector\strike0\{linkID=3780>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantContainer\strike0\{linkID=4310>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantContainer is the ancestor of attribute classes that represent a relationship with multiple objects.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantDateTime\strike0\{linkID=5520>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantDateTime represents a TDateTime value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantElement\strike0\{linkID=5900>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantElement is the ancestor of attribute classes that represent a relationship with a single object.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantFloat\strike0\{linkID=6690>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantFloat represents a Double value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantInteger\strike0\{linkID=6920>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantInteger represents a 32-bit Integer value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantMemo\strike0\{linkID=7040>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantMemo represents a memo.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantNumeric\strike0\{linkID=7140>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantNumeric is the ancestor of attribute classes that represent a numeric value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantObject\strike0\{linkID=7240>main\}
\par \pard\li195\sb15\sa25\fs16 The ancestor for classes with persistence capabilities.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantPart\strike0\{linkID=9100>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantPart represents a part relationship to a single object.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantParts\strike0\{linkID=9240>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantParts represents a part relationship to multiple objects.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantReference\strike0\{linkID=9370>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantReference represents a reference relationship to a single object.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantReferences\strike0\{linkID=9630>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantReferences represents a reference relationship to multiple objects.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantRelationalConnector\strike0\{linkID=9810>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantSimple\strike0\{linkID=10280>main\}
\par \pard\li195\sb15\sa25\fs16 The ancestor of all the attribute classes that represent simple types.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantString\strike0\{linkID=10850>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantString represents a string value.
\par 
\par }
12840
75DE_F5





Imported



FALSE
39
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Functions in Unit InstantPersistence
\par \pard\keep\li95\sb25\sa25\b0\strike InstantCheckConnection\strike0\{linkID=11100>main\}
\par \pard\li195\sb15\sa25\fs16 Checks the assignment of a connection
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantCheckConnector\strike0\{linkID=11110>main\}
\par \pard\li195\sb15\sa25\fs16 Checks the assignment of a connector
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantClassNameToName\strike0\{linkID=11130>main\}
\par \pard\li195\sb15\sa25\fs16 Converts a class name to a name.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantDefaultConnector\strike0\{linkID=11220>main\}
\par \pard\li195\sb15\sa25\fs16 Returns the default connector instance.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantDisableNotifiers\strike0\{linkID=11230>main\}
\par \pard\li195\sb15\sa25\fs16 Disables all notifiers
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantEnableNotifiers\strike0\{linkID=11250>main\}
\par \pard\li195\sb15\sa25\fs16 Enables all notifiers
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantFindClass\strike0\{linkID=11350>main\}
\par \pard\li195\sb15\sa25\fs16 Finds and returns a class derived from \strike TInstantObject\strike0\{linkID=7240>main\}.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantGetClass\strike0\{linkID=11400>main\}
\par \pard\li195\sb15\sa25\fs16 Finds and returns a class derived from \strike TInstantObject\strike0\{linkID=7240>main\}.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantGetClasses\strike0\{linkID=11420>main\}
\par \pard\li195\sb15\sa25\fs16 Extracts a list of registered classes.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantIsValidObjectId\strike0\{linkID=11440>main\}
\par \pard\li195\sb15\sa25\fs16 Tests for a valid Object Id.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantNameToClassName\strike0\{linkID=11490>main\}
\par \pard\li195\sb15\sa25\fs16 Converts a name to a class name.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantRefreshObjects\strike0\{linkID=11610>main\}
\par \pard\li195\sb15\sa25\fs16 Refreshes all instances of an array of classes
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantRegisterClass\strike0\{linkID=11650>main\}
\par \pard\li195\sb15\sa25\fs16 Registers a class derived from \strike TInstantObject\strike0\{linkID=7240>main\}.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantRegisterClasses\strike0\{linkID=11670>main\}
\par \pard\li195\sb15\sa25\fs16 Registers an array of classes derived from \strike TInstantObject\strike0\{linkID=7240>main\}.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantUnregisterClass\strike0\{linkID=11840>main\}
\par \pard\li195\sb15\sa25\fs16 Unregisters a class derived from \strike TInstantObject\strike0\{linkID=7240>main\}
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantUnregisterClasses\strike0\{linkID=11860>main\}
\par \pard\li195\sb15\sa25\fs16 Unregisters an array of classes derived from \strike TInstantObject\strike0\{linkID=7240>main\}
\par 
\par }
12850
75DE_F6





Imported



FALSE
45
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantPersistence
\par \pard\keep\li95\sb25\sa25\b0\strike PInstantAttribute\strike0\{linkID=11940>main\}
\par \pard\li195\sb15\sa25\fs16 The common ancestor of all the attribute classes.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantAttributeChangeEvent\strike0\{linkID=11970>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for attribute change notification events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantAttributeType\strike0\{linkID=11980>main\}
\par \pard\li195\sb15\sa25\fs16 Specifies the type of an attribute.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantConflictAction\strike0\{linkID=12030>main\}
\par \pard\li195\sb15\sa25\fs16 Specifies how conflicts should be resolved.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantConnectorClass\strike0\{linkID=12060>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantContentChangeEvent\strike0\{linkID=12070>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for content change notification events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantContentChangeType\strike0\{linkID=12090>main\}
\par \pard\li195\sb15\sa25\fs16 The types of possible changes that may occur to a container.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantDataType\strike0\{linkID=12120>main\}
\par \pard\li195\sb15\sa25\fs16 Specifies the datatype of fields in tables
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantErrorAction\strike0\{linkID=12130>main\}
\par \pard\li195\sb15\sa25\fs16 Defines actions used in error handlers.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantErrorEvent\strike0\{linkID=12150>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for error events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantGetDataSetEvent\strike0\{linkID=12260>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for dataset request events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantInitDataSetEvent\strike0\{linkID=12290>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for dataset initialization events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantNotifyEvent\strike0\{linkID=12320>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantNotifyEvent is the event type for simple notification events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantObjectNotifyEvent\strike0\{linkID=12330>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantObjectNotifyEvent is used for notification.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantOperationType\strike0\{linkID=12340>main\}
\par \pard\li195\sb15\sa25\fs16 Indicates the type an operation.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantProgressEvent\strike0\{linkID=12360>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for progress events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantSchemeEvent\strike0\{linkID=12370>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for database-build related events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantSortCompare\strike0\{linkID=12380>main\}
\par \pard\li195\sb15\sa25\fs16 Prototype of function used to Compares objects
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantVerificationResult\strike0\{linkID=12420>main\}
\par \pard\li195\sb15\sa25\fs16 Defines result of a verification operation.
\par 
\par }
12860
75DE_F7





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantPersistence\strike0\{link=ID_5>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Constants in Unit InstantPersistence
\par \pard\keep\li95\sb25\sa25\b0\strike InstantAttributePrefix\strike0\{linkID=12440>main\}
\par \pard\li195\sb15\sa25\fs16 The prefix used for attribute fields.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantClassPrefix\strike0\{linkID=12460>main\}
\par \pard\li195\sb15\sa25\fs16 The prefix used for classes.
\par 
\par }
12870
ID_413
InstantPresentation.pas
InstantPresentation.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantPresentation.pas \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\strike Classes\strike0\{linkID=12880>nav\}\tab\strike Functions\strike0\{linkID=12890>nav\}\tab\strike Types\strike0\{linkID=12900>nav\}
\par \pard\sb25\sa25\tx1435\tx2875\fs18 InstantObjects Presentation Classes.
\par 
\par }
12880
75DE_G8





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantPresentation\strike0\{link=ID_413>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantPresentation
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantCustomExposer\strike0\{linkID=4680>main\}
\par \pard\li195\sb15\sa25\fs16 The ancestor of components that make objects accessible via data-aware controls.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantExposer\strike0\{linkID=6300>main\}
\par \pard\li195\sb15\sa25\fs16 Provides dataset-based access to objects.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantSelector\strike0\{linkID=10050>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantSelector provides dataset-based access to a selection of objects.
\par 
\par }
12890
75DE_FZ





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantPresentation\strike0\{link=ID_413>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Functions in Unit InstantPresentation
\par \pard\keep\li95\sb25\sa25\b0\strike InstantFindAccessorClass\strike0\{linkID=11330>main\}
\par \pard\li195\sb15\sa25\fs16 Finds and returns a class derived from TInstantAccessor.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantGetAccessorClass\strike0\{linkID=11380>main\}
\par \pard\li195\sb15\sa25\fs16 Finds and returns a class derived from TInstantAccessor.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantRegisterAccessorClass\strike0\{linkID=11630>main\}
\par \pard\li195\sb15\sa25\fs16 Registers a class derived from TInstantAccessor.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantUnregisterAccessorClass\strike0\{linkID=11820>main\}
\par \pard\li195\sb15\sa25\fs16 Unregisters a class derived from TInstantAccessor
\par 
\par }
12900
8DW2.JP





Imported



FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantPresentation\strike0\{link=ID_413>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantPresentation
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantAccessMode\strike0\{linkID=11950>main\}
\par \pard\li195\sb15\sa25\fs16 Determines how an object is being accessed.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantCompareObjectsEvent\strike0\{linkID=12000>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for object comparison events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantCreateObjectEvent\strike0\{linkID=12110>main\}
\par \pard\li195\sb15\sa25\fs16 The event type used for object creation events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantExposerOption\strike0\{linkID=12190>main\}
\par \pard\li195\sb15\sa25\fs16 Specifies options for an exposer.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantExposerOptions\strike0\{linkID=12210>main\}
\par \pard\li195\sb15\sa25\fs16 Specifies options for an exposer.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantFieldDefEvent\strike0\{linkID=12230>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for field definition initialization events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantFieldErrorEvent\strike0\{linkID=12240>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for field errors.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantFieldEvent\strike0\{linkID=12250>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for field events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantIncludeFieldEvent\strike0\{linkID=12280>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for field inclusion events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantLimitObjectsEvent\strike0\{linkID=12310>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for object limitation events.
\par 
\par }
12910
327SI7V
InstantUtils.pas
InstantUtils.pas



Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantUtils.pas \cf1\b0\fs16\{keepn\} 
\par \pard\keepn\sb25\tx1435\tx2875\strike Classes\strike0\{linkID=12920>nav\}\tab\strike Functions\strike0\{linkID=12930>nav\}\tab\strike Types\strike0\{linkID=12940>nav\}
\par \pard\sb25\sa25\tx1435\tx2875\fs18 InstantObjects Utilities
\par 
\par }
12920
75DE_G1





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantUtils\strike0\{link=327SI7V>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantUtils
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantVersion\strike0\{linkID=11920>main\}
\par \pard\li195\sb15\sa25\fs16 Specifies the version of a file.
\par 
\par }
12930
75DE_G2





Imported



FALSE
47
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantUtils\strike0\{link=327SI7V>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Functions in Unit InstantUtils
\par \pard\keep\li95\sb25\sa25\b0\strike InstantCharSetToStr\strike0\{linkID=11070>main\}
\par \pard\li195\sb15\sa25\fs16 Coverts a set of char to a string.
\par \pard\keep\li95\sb25\sa25\strike\fs18 function InstantCompareObjects(Obj1: TObject; Obj2: TObject; PropNames: TStrings; Options: TInstantCompareOptions): Integer;\strike0\{linkID=11160>main\}
\par \pard\li195\sb15\sa25\fs16 Compares two objects by comparing mulpiple named published properties.
\par \pard\keep\li95\sb25\sa25\strike\fs18 function InstantCompareObjects(Obj1: TObject; Obj2: TObject; PropName: string; Options: TInstantCompareOptions): Integer;\strike0\{linkID=11150>main\}
\par \pard\li195\sb15\sa25\fs16 Compares two objects by comparing a named published property.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantCompareText\strike0\{linkID=11170>main\}
\par \pard\li195\sb15\sa25\fs16 Compares two strings by ordinal value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantCompareValues\strike0\{linkID=11180>main\}
\par \pard\li195\sb15\sa25\fs16 Compares the values of two variants.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantConstArrayToVariant\strike0\{linkID=11190>main\}
\par \pard\li195\sb15\sa25\fs16 Converts an array of constants to a variant array.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantDateTimeToStr\strike0\{linkID=11200>main\}
\par \pard\li195\sb15\sa25\fs16 Converts a TDatetime value to a string.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantFileVersion\strike0\{linkID=11290>main\}
\par \pard\li195\sb15\sa25\fs16 Returns the version of a file as a record
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantFileVersionStr\strike0\{linkID=11310>main\}
\par \pard\li195\sb15\sa25\fs16 Returns the version of a file as a string
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantGenerateId\strike0\{linkID=11370>main\}
\par \pard\li195\sb15\sa25\fs16 Generates an unique Id.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantIsIdentifier\strike0\{linkID=11430>main\}
\par \pard\li195\sb15\sa25\fs16 Determines if a string is a valid identifier
\par \pard\keep\li95\sb25\sa25\strike\fs18 function InstantMatchObject(Obj: TObject; PropNames: TStrings; const KeyValues: Variant; Options: TInstantCompareOptions): Boolean;\strike0\{linkID=11470>main\}
\par \pard\li195\sb15\sa25\fs16 Compares multiple values to the values of an objects properties
\par \pard\keep\li95\sb25\sa25\strike\fs18 function InstantMatchObject(Obj: TObject; PropName: string; const KeyValue: Variant; Options: TInstantCompareOptions): Boolean;\strike0\{linkID=11450>main\}
\par \pard\li195\sb15\sa25\fs16 Compares a value to the value of an objects property
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantPartStr\strike0\{linkID=11550>main\}
\par \pard\li195\sb15\sa25\fs16 Extracts a part of a delimited string.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantRightPos\strike0\{linkID=11690>main\}
\par \pard\li195\sb15\sa25\fs16 Returns the starting position of the last occurrence of a substring in a given string.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantStrToCharSet\strike0\{linkID=11710>main\}
\par \pard\li195\sb15\sa25\fs16 Coverts a string to a set of char.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantStrToDate\strike0\{linkID=11740>main\}
\par \pard\li195\sb15\sa25\fs16 Converts a string to a TDateTime value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantStrToDateTime\strike0\{linkID=11760>main\}
\par \pard\li195\sb15\sa25\fs16 Converts a string to a TDateTime value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantStrToList\strike0\{linkID=11780>main\}
\par \pard\li195\sb15\sa25\fs16 Adds the individual strings of a delimited string to a TStrings object.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantStrToTime\strike0\{linkID=11800>main\}
\par \pard\li195\sb15\sa25\fs16 Converts a string to a TDateTime value.
\par 
\par }
12940
75DE_G3





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantUtils\strike0\{link=327SI7V>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantUtils
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantCompareOption\strike0\{linkID=12010>main\}
\par \pard\li195\sb15\sa25\fs16 Specifies options for a comparison.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantCompareOptions\strike0\{linkID=12020>main\}
\par \pard\li195\sb15\sa25\fs16 Specifies options for a comparison.
\par 
\par }
3
main="InstantObjects Guide 2.0",(420,410,563,503),0,(255,255,255),(255,255,255),0
example="InstantObjects Guide",(420,45,563,366),0,(255,255,255),(255,255,255),0
nav="InstantObjects Guide",(200,410,220,503),0,(255,255,255),(255,255,255),0
0
0
201
1 Welcome=id_0
1 InstantObjects overview
2 Using InstantObjects=75DE_G6
2 Installing InstantObjects=Scribble30
2 License Agreement=327SA3X
2 Creating the Business Model
3 Creating the Business Model=327SA3P
3 The Model Explorer=327SA3S
3 Defining Classes=327SA3T
3 Defining Attributes=327SA3U
3 External Storage of attributes=Scribble100
3 Adding Business Rules=327SA3V
3 Building/Evolving the Business Model=327SA3W
2 Creating the User Interface
3 Creating the User Interface=75DE_G4
3 Persistence by RAD=327SA.P
3 The Connector=327SA.Q
3 The Exposer=327SA.R
3 The Selector=327SA.S
2 Programming with Persistent Objects
3 Programming with Persistent Objects=327SA.T
3 Creating New Objects=327SA.W
3 Retrieving Existing Objects=327SA.X
3 Associating Objects=327SA3Y
3 Using the InstantQuery=Scribble300
2 The Primer demo
3 Learning the Primer demo=Scribble320
3 Introduction=Scribble330
3 The Business Model=Scribble340
3 The User Interface=Scribble350
3 Persisting Objects=Scribble360
3 Mapping Scheme=Scribble370
3 Streaming=Scribble380
3 Exposing Objects=Scribble390
3 Selecting Objects=Scribble400
3 Filtering=Scribble410
3 Sorting=Scribble420
3 Object Explorer=Scribble430
3 Connection Manager=Scribble440
1 InstantObjects Symbol Reference
2 Classes
3 EInstantAccessError=id_1>MAIN
3 EInstantConflict=id_22>MAIN
3 EInstantConversionError=id_8>MAIN
3 EInstantError=id_6>MAIN
3 EInstantKeyViolation=id_54>MAIN
3 EInstantRangeError=id_66>MAIN
3 EInstantStreamError=id_76>MAIN
3 EInstantValidationError=id_86>MAIN
3 TInstantADOConnector=id_97>MAIN
3 TInstantADSConnector=id_150>MAIN
3 TInstantAttribute=id_7>MAIN
3 TInstantBDEConnector=id_221>MAIN
3 TInstantBlob=id_179>MAIN
3 TInstantBoolean=id_175>MAIN
3 TInstantCollection=id_263>MAIN
3 TInstantCollectionItem=id_267>MAIN
3 TInstantComplex=id_285>MAIN
3 TInstantConnectionBasedConnector=id_106>MAIN
3 TInstantConnectionManager=id_317>MAIN
3 TInstantConnector=id_104>MAIN
3 TInstantContainer=id_306>MAIN
3 TInstantCustomExposer=id_407>MAIN
3 TInstantDateTime=id_9>MAIN
3 TInstantDBISAMConnector=id_513>MAIN
3 TInstantDBXConnector=id_531>MAIN
3 TInstantElement=id_305>MAIN
3 TInstantExplorer=id_559>MAIN
3 TInstantExposer=id_416>MAIN
3 TInstantFileStream=id_604>MAIN
3 TInstantFlashFilerConnector=id_626>MAIN
3 TInstantFloat=id_173>MAIN
3 TInstantIBXConnector=id_649>MAIN
3 TInstantInteger=id_171>MAIN
3 TInstantMemo=id_180>MAIN
3 TInstantNumeric=id_641>MAIN
3 TInstantObject=id_170>MAIN
3 TInstantOwnedCollection=id_877>MAIN
3 TInstantPart=id_172>MAIN
3 TInstantParts=id_176>MAIN
3 TInstantReference=id_174>MAIN
3 TInstantReferences=id_178>MAIN
3 TInstantRelationalConnector=id_105>MAIN
3 TInstantResourceStream=id_965>MAIN
3 TInstantSelector=id_417>MAIN
3 TInstantSimple=id_240>MAIN
3 TInstantStream=id_608>MAIN
3 TInstantStreamable=id_168>MAIN
3 TInstantString=id_177>MAIN
3 TInstantStringStream=327SI6R>MAIN
2 Records / Structs
3 TInstantVersion=327SI0S>MAIN
2 Functions
3 InstantCharSetToStr=327SI7S>MAIN
3 InstantCheckConnection=327SI7X>MAIN
3 InstantCheckConnector=327SI7X>MAIN
3 InstantClassNameToName=327SI8R>MAIN
3 InstantCompareObjects=327SI8U>MAIN
3 InstantCompareText=327SI8X>MAIN
3 InstantCompareValues=327SI9Y>MAIN
3 InstantConstArrayToVariant=327SI9P>MAIN
3 InstantDateTimeToStr=327SI9Q>MAIN
3 InstantDefaultConnector=InstantDefaultConnector>MAIN
3 InstantDisableNotifiers=327SI9U>MAIN
3 InstantEnableNotifiers=327SI9W>MAIN
3 InstantExploreObject=327SI0Y>MAIN
3 InstantFileVersion=327SI0Q>MAIN
3 InstantFileVersionStr=327SI0T>MAIN
3 InstantFindAccessorClass=327SI0V>MAIN
3 InstantFindClass=3OA4HS5>MAIN
3 InstantGenerateId=id_831>MAIN
3 InstantGetAccessorClass=327SI0X>MAIN
3 InstantGetClass=3OA4HS7>MAIN
3 InstantGetClasses=75DEFG5>MAIN
3 InstantIsIdentifier=3OA4HS.>MAIN
3 InstantIsValidObjectId=id_832>MAIN
3 InstantMatchObject=InstantMatchObject>MAIN
3 InstantMatchObject=75DE_GZ>MAIN
3 InstantNameToClassName=327SI8T>MAIN
3 InstantObjectBinaryToText=75DE_H2>MAIN
3 InstantObjectTextToBinary=75DE_H4>MAIN
3 InstantPartStr=75DE_H6>MAIN
3 InstantReadObject=7RMQ.VH>MAIN
3 InstantReadObjects=7RMQ.VB>MAIN
3 InstantRefreshObjects=7RMQ.VE>MAIN
3 InstantRegisterAccessorClass=53SLGW3>MAIN
3 InstantRegisterClass=3OA4HS8>MAIN
3 InstantRegisterClasses=7RMQ.WA>MAIN
3 InstantRightPos=7RMQ.WD>MAIN
3 InstantStrToCharSet=327SI7W>MAIN
3 InstantStrToDate=75DE_A8>MAIN
3 InstantStrToDateTime=327SI9T>MAIN
3 InstantStrToList=75DE_A3>MAIN
3 InstantStrToTime=75DE_A1>MAIN
3 InstantUnregisterAccessorClass=7RMQ.WH>MAIN
3 InstantUnregisterClass=8DW2.CP>MAIN
3 InstantUnregisterClasses=7RMQ.WC>MAIN
3 InstantWriteObject=7RMQ.VA>MAIN
3 InstantWriteObjects=7RMQ.VD>MAIN
2 Types
3 PInstantAttribute=id_169>MAIN
3 TInstantAccessMode=id_473>MAIN
3 TInstantADOProviderType=id_149>MAIN
3 TInstantAttributeChangeEvent=id_871>MAIN
3 TInstantAttributeType=id_219>MAIN
3 TInstantBDEDriverType=id_234>MAIN
3 TInstantCompareObjectsEvent=id_489>MAIN
3 TInstantCompareOption=75DE_B3>MAIN
3 TInstantCompareOptions=327SI8V>MAIN
3 TInstantConflictAction=id_843>MAIN
3 TInstantConnectionManagerActionType=75DE_B4>MAIN
3 TInstantConnectionManagerActionTypes=id_343>MAIN
3 TInstantConnectorClass=id_103>MAIN
3 TInstantContentChangeEvent=id_870>MAIN
3 TInstantContentChangeType=id_812>MAIN
3 TInstantCreateObjectEvent=id_490>MAIN
3 TInstantDataType=75DE_B7>MAIN
3 TInstantErrorAction=id_853>MAIN
3 TInstantErrorEvent=id_876>MAIN
3 TInstantExplorerLayout=id_582>MAIN
3 TInstantExplorerNodeType=75DE_BZ>MAIN
3 TInstantExplorerNodeTypes=id_583>MAIN
3 TInstantExposerOption=8DW2.FP>MAIN
3 TInstantExposerOptions=id_478>MAIN
3 TInstantFieldDefEvent=id_499>MAIN
3 TInstantFieldErrorEvent=id_492>MAIN
3 TInstantFieldEvent=id_497>MAIN
3 TInstantGetDataSetEvent=id_962>MAIN
3 TInstantIncludeFieldEvent=id_495>MAIN
3 TInstantInitDataSetEvent=id_964>MAIN
3 TInstantLimitObjectsEvent=id_502>MAIN
3 TInstantNotifyEvent=id_874>MAIN
3 TInstantObjectNotifyEvent=75DE_C5>MAIN
3 TInstantOperationType=id_852>MAIN
3 TInstantProcessObjectEvent=327SI4P>MAIN
3 TInstantProgressEvent=id_860>MAIN
3 TInstantSchemeEvent=id_369>MAIN
3 TInstantSortCompare=id_406>MAIN
3 TInstantStreamFormat=8DW2.BP>MAIN
3 TInstantVerificationResult=id_868>MAIN
2 Constants
3 InstantAttributePrefix=75DE_CZ>MAIN
3 InstantClassPrefix=75DE_D1>MAIN
3 InstantDateFormat=8DW2.DP>MAIN
3 InstantDateTimeFormat=327SI9S>MAIN
3 InstantTimeFormat=InstantTimeFormat>MAIN
2 Units
3 InstantADO.pas=id_102>MAIN
3 InstantADS.pas=id_155>MAIN
3 InstantBDE.pas=id_225>MAIN
3 InstantClasses.pas=id_36>MAIN
3 InstantConnectionManager.pas=id_322>MAIN
3 InstantConsts.pas=75DE_D3>MAIN
3 InstantDBISAM.pas=id_518>MAIN
3 InstantDBX.pas=id_533>MAIN
3 InstantExplorer.pas=id_564>MAIN
3 InstantFlashFiler.pas=id_628>MAIN
3 InstantIBX.pas=id_653>MAIN
3 InstantPersistence.pas=id_5>MAIN
3 InstantPresentation.pas=id_413>MAIN
3 InstantUtils.pas=id_1057>MAIN
8
*InternetLink
16711680
Courier New
0
10
1
....
0
0
0
0
0
0
*ParagraphTitle
-16777208
Arial
0
11
1
B...
0
0
0
0
0
0
*PopupLink
-16777208
Arial
0
8
1
....
0
0
0
0
0
0
*PopupTopicTitle
16711680
Arial
0
10
1
B...
0
0
0
0
0
0
*TopicText
-16777208
Arial
0
10
1
....
0
0
0
0
0
0
*TopicTitle
16711680
Arial
0
16
1
B...
0
0
0
0
0
0
<new macro>
0
Arial
0
9
1
....
0
0
0
0
0
0
<new macro>
0
Arial
0
9
1
....
0
0
0
0
0
0
