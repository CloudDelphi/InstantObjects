HelpScribble project file.
14
`grira Zvgpuryy-0Q4954
0
1
InstantObjects Help



TRUE
0x0409   English (U.S.)
D:\SELEQT\InstantObjectsCVS\Help,D:\L\InstantObjects\Help
1
BrowseButtons()
0
FALSE

FALSE
TRUE
16777215
0
16711680
8388736
255
FALSE
FALSE
FALSE
FALSE
1
FALSE
FALSE
Contents
%s Contents
Index
%s Index
Previous
Next
FALSE

1279
10
Scribble10
InstantObjects Welcome



main:000010
Done



FALSE
14
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Arial;}{\f3\fnil\fcharset0 Courier New;}{\f4\fnil Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue255;}
\viewkind4\uc1\pard\sb25\sa25\cf1\lang1040\b\f0\fs24 InstantObjects Welcome\f1 
\par \cf2\lang1033\b0\strike\f2\fs16 Glossary\cf3\strike0\{linkID=20>main\}\lang1040\{keepn\}\cf1\b\f0 
\par \b0\fs18 Welcome to InstantObjects, the integrated framework for developing object-oriented business solutions in Delphi.
\par 
\par InstantObjects is a RAD technology that enables creation of applications based on persistent business objects. It simplifies the process of realizing ideas into products; shortens time-to-marke\lang1033\f1 t\lang1040\f0 , and helps keep business focus.
\par 
\par Even though it is still a bolted\lang1033\f1 -\lang1040\f0 on technology, InstantObjects integrates with the Delphi IDE and Object Pascal in a simple, flexible and intuitive manner. There are no sophisticated environments that have to be comprehended before application development can begin.
\par 
\par \f1 You can find more information about this Open-Source project at:  \cf4\strike\f3\fs20 www.instantobjects.org\cf3\strike0\f4\{link=*! ExecFile("http://www.instantobjects.org/")\}\cf1\f0\fs18 
\par \cf3 
\par \{bmc instantobjects_logo.gif\}\cf1 
\par }
20
Scribble20
Glossary
Glossary



Added



FALSE
25
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fnil\fcharset0 Arial;}{\f1\fnil Arial;}{\f2\fswiss Arial;}{\f3\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1033\b\fs24 Glossary
\par \cf1\lang1040\b0\strike\f1\fs16 InstantObjects Welcome\cf2\strike0\{linkID=10>main\}\lang1033\{keepn\}\cf3\lang3081\fs18 
\par \lang1033\f0 The following definitions are provided to enhance the clarity, consistency and understanding of some of the terms used in this document.
\par \f1\fs10 
\par \b\f0\fs18 Attribute\b0  - means InstantObjects Attribute. A business class property with persistence provided by the InstantObjects framework.\cf0\b\f1\fs22 
\par \cf3\f0\fs18 Business Class\b0  - is a class that models an object in the business domain. The class is derived from TInstantObject to provide persistence through the InstantObjects framework.\b 
\par Class\b0  - is a blueprint from which objects are created.\b 
\par Column\b0  - see Field.
\par \b Connection\b0  - is a component used to gain access to a specific database.
\par \b Container Attribute\b0  - has an attribute type of either Parts or References.\b 
\par Evolving a database\b0  - the process of restructuring a database to accommodate a modified model in such a way that existing data is preserved.
\par \b Field\b0  - the smallest structure in a database. It represents an attribute of a business class and actually stores the attribute value within the database.
\par \b Broker\b0  - is used by InstantObjects to manage objects persistently, and is database specific.\b 
\par \pard\sb25\sa25 InstantObjects\b0  - \lang1040\f2 the integrated framework for developing object-oriented \lang1033\f3 persistent \lang1040\f2 business solutions in Delphi.\lang1033\b\f0 
\par \pard Model\b0  - means an InstantObjects Model that is a collection of classes and their metadata representing a business domain and the information needed to provide data persistence.\b 
\par Object\b0  - is an instance of a class.
\par \b Persistence\b0  - the issue of how to save objects to permanent storage. Persistence provides the ability for objects to exist between executions of a system or application.
\par \lang1040\b\f2 RAD\lang1033\f3  -\b0  Rapid Application Development.\f0 
\par \b Record\b0  - A structure that is composed of a set of values for every field within a table and represents the attribute values for a unique instance of the table's business class.\lang3081\f1 
\par \lang1033\b\f0 Relational Attribute\b0  - has an attribute type of either Part, Reference, Parts or References.\b 
\par Table\b0  - the chief structure in a database. It is composed of fields and records and usually represents the collection of attribute values for instances of a single, specific business class.\b 
\par 
\par }
30
Scribble30
License Agreement
License Agreement;


main:000020
Done



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fnil Arial;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue255;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 License Agreement \cf1\b0\fs16 
\par \cf2\strike\f1 InstantObjects Welcome\cf3\strike0\{linkID=10>main\}\cf1\f0\{keepn\}
\par \pard\sb25\sa25\cf3\b\fs18\{bm\f2 l\f0  Powered by InstantObjects 150x38.gif\}
\par \cf1 
\par \b0\f2 InstantObjects source files are released under the Mozilla Public License Version 1.1. \f0 You may obtain a copy of the License at\f2  \cf4\strike\f3\fs20 www.mozilla.org/MPL/MPL-1.1.html\cf3\strike0\{link=*! ExecFile("http://www.mozilla.org/MPL/MPL-1.1.html")\}\cf1\f2\fs18 .\f0 
\par 
\par \cf4\strike\f3\fs20 www.instantobjects.org\cf3\strike0\{link=*! ExecFile("http://www.instantobjects.org")\}\cf1\f0\fs18 
\par \b 
\par }
40
Scribble40
Installing InstantObjects
Installing InstantObjects;InstantObjects,Installing;


main:000030
Modified



FALSE
21
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fswiss\fcharset0 Arial;}{\f1\fswiss Arial;}{\f2\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Installing \f1 InstantObjects\cf1\b0\fs16 
\par \pard\sb25\tx1435\cf2\strike\f2 InstantObjects Welcome\cf3\strike0\{linkID=10>main\}\cf1\f1\{keepn\} 
\par \f0\fs18 To cover the needs of most developers, we offer two different approaches to install InstantObjects.
\par 
\par The \b\i first one\b0\i0  is oriented to proficient developers, and is the method used during the development of InstantObjects (that is, on the constantly changing SVN source materials).
\par This method is very flexible, as you can choose which parts of InstantObjects you will install and when. It will require a good knowledge about package compile, build and install.
\par 
\par You will find detailed instructions in the \b Install.txt\b0  file located in:
\par \b     <installdir>/Docs\b0 
\par     
\par The \b\i second one\b0\i0  is more oriented to normal developers that would prefer installing some more features even if they know they will never use it, but by means of an easier procedure that does most of the job for them.
\par \pard\sb25\f2\fs10 
\par \pard\sb25\tx1435\f0\fs18 You will find detailed instructions in the \b Install.txt\b0  file located in:
\par \b     <installdir>/Source/PackageGroups
\par \pard\sb25\b0\f2\fs10 
\par \pard\sb25\tx1435\f0\fs18 IMPORTANT NOTE:
\par One aspect to consider when choosing an installation approach. With the second approach, the PackageGroups files will be kept up to date \i only\i0  for official releases (that is Alpha, Beta, RC and final), so it will \i not \i0 often contain the latest SVN source materials. If you foresee downloading the "bleeding edge" of InstantObjects from SVN quite often, we advise you to go for the first approach and continue to use it for subsequent updates.
\par 
\par }
50
Scribble50
User Guide for InstantObjects 2.0
Using InstantObjects;InstantObjects,Using,Guide;


main:000040
Done



FALSE
14
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Arial;}{\f3\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 User Guide for InstantObjects 2.0 \cf1\b0\fs16 
\par \pard\keep\li95\sb25\sa25\cf2\strike Group Topics\cf3\strike0\{linkID=60>nav\}\{keepn\}\cf1 
\par \pard\sb25\sa25\fs18 This user guide contains \f1 practical\f0  guidelines for building InstantObjects\lang1033\f1  \lang1040\f0 based applications. The intention is to give an overview o\f1 f\f0  the classes, components and tools that make up the InstantObjects framework. Although the guide is very detailed, it has not been the intention to cover all aspects of the framework. If more information is needed, \lang1033\f1 please\lang1040\f0  refer to the Symbol Reference.
\par Th\lang1033\f1 is\lang1040\f0  guide \lang1033\f1 contains\lang1040\f0  three parts \lang1033\f1 that\lang1040\f0  constitute almost any InstantObjects based development process.
\par \f2\fs10 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\keep\fi-200\li295\sb25\sa25\tx280\lang1033\f1\fs18  \cf2\lang1040\strike\f0 Creating the Business Model\cf3\strike0\{linkID=70>main\}\cf1 
\par \lang1033\f1{\pntext\f3\'B7\tab} \cf2\lang1040\strike\f0 Creating the User Interface\cf3\strike0\{linkID=280>main\}\cf1 
\par \lang1033\f1{\pntext\f3\'B7\tab} \cf2\lang1040\strike\f0 Programming with Persistent Objects\cf3\strike0\{linkID=340>main\}\cf1 
\par \pard\sb25\sa25\f2\fs10 
\par \pard\keep\li95\sb25\sa25\lang1033\f1\fs18 There is also a section on \cf2\lang1040\strike Learning the Primer Demo\cf3\strike0\{linkID=460>main\}\cf1\lang1033 .\lang1040\f0 
\par \pard\sb25\sa25 
\par }
60
Scribble60





Done



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Us\lang1033\f1 er Guide\lang1040\f0  \cf1\b0\fs16 
\par \cf2\strike Using InstantObjects\cf3\strike0\fs18\{linkID=50>main\}\{keepn\}\cf1\fs16 
\par \pard\keep\li95\sb25\sa25\cf2\strike\fs18 Creating the Business Model\cf3\strike0\{linkID=70>main\}\cf1 
\par \cf2\strike Creating the User Interface\cf3\strike0\{linkID=280>main\}\cf1 
\par \cf2\strike Programming with Persistent Objects\cf3\strike0\{linkID=340>main\}\cf1 
\par \cf2\strike\f1 Learning the Primer Demo\cf3\strike0\{linkID=460>main\}\cf1\strike\f0 
\par \strike0 
\par }
70
Scribble70
Creating the Business Model
Creating the Business Model;Business Model,Creating;


creatingbusinessmodel:000010
Done



FALSE
33
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Creating the Business Model\cf1\b0\fs16 
\par \pard\sb25\tx1435\cf2\strike Group Topics\cf3\strike0\{linkID=80>nav\}\cf1\tab\cf2\strike Using InstantObjects\cf3\strike0\{linkID=50>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\tx1435\fs18 Object Oriented applications are based on models. This section covers the definition of the InstantObjects business\lang1033\f1  \lang1040\f0 model, which is \lang1033\f1  \lang1040\f0 the initial step in the creation of an InstantObjects based application. The InstantObjects Model Explorer is the central tool in this process.
\par \lang1033\f1 T\lang1040\f0 he InstantObjects business\lang1033\f1  \lang1040\f0 model\lang1033\f1  consists of a collection of user designed classes, many of which are related through inheritance or association. Most if not all of the data controlled by these classes is required to be persisted or stored in such a way that the relationships among this data are retained.  In addition to the simple class attribute types, which provide persistence for the \lang1040\f0 Object Pascal equivalent simple type\lang1033\f1 s (eg string or integer)\lang1040\f0  \lang1033\f1 , the InstantObjects framework provides several class attribute types to facilitate the persistence of instances of related classes. These attribute types are known as relational or complex attributes.
\par \pard\sb25\sa25\f2\fs10 
\par \cf3\fs18\{target=RelationalAttributeTypes\}\cf0\b\fs22 Re\lang1040 lational \lang1033 Attribute T\lang1040 ypes\cf1\b0\f0\fs18 
\par The relational types are\lang1033\f1 :\lang1040\f0  Reference, Part, References and Parts.\lang1033\f1  It is important to understand the nature of the relationship that each of these attribute types provides so that the desired behaviour is reflected within the \lang1040\f0 business\lang1033\f1  \lang1040\f0 model\lang1033\f1 .
\par \f2\fs10 
\par \lang1040\b\f1\fs18 Container attributes \b0 is the collective name for the subset of relational types consisting of Parts and References type attributes.\lang1033\b 
\par \b0\f2\fs10 
\par \lang1040\b\f0\fs18 Reference\b0 
\par Reference is the simplest object relation supported by InstantObjects. A reference defines a unidirectional relation from one object to another. The object referred to lives outside the referring object and knows nothing about the relation itself.
\par See \cf2\strike TInstantReference\cf3\strike0\{linkID=9520>main\}\cf1  for more information.
\par \f2\fs10 
\par \b\f0\fs18 Part\f1 
\par \b0\f0 Objects in Part relations are tied together more closely. A Part relation is bi-directional, meaning the object at each end of the relation knows about the object at the other end. The object referred to in a Part relation is considered to be a part of the owning object and as such can only be reached via the owning object. In addition, an object referred to in a part relation is disposed along with its owner.
\par See \cf2\strike TInstantPart\cf3\strike0\{linkID=9250>main\}\cf1  for more information.
\par \f2\fs10 
\par \b\f0\fs18 References\b0 
\par Like its singular counterpart, Reference, the References relation is unidirectional. But instead of just referring to a single object, a References relation can refer to any number of objects and thereby defining a one-to-many relation to objects outside of the referring object.
\par See \cf2\strike TInstantReferences\cf3\strike0\{linkID=9780>main\}\cf1  for more information.
\par \f2\fs10 
\par \b\f0\fs18 Parts\f1 
\par \b0\f0 Parts is the one-to-many counterpart of the equivalent one-to-one relation type, Part. A Parts relation can refer to any number of objects that are all considered to be part of the referring object.
\par See \cf2\strike TInstantParts\cf3\strike0\{linkID=9390>main\}\cf1  for more information.
\par Parts and References are known as container attributes. When defining an attribute of one of these types, a corresponding array property and optional methods to access the container attribute \lang1033\f1 are\lang1040\f0  added to the class. For any of the relational types, the class of the related object(s) must be specified as the Object Class of the attribute.
\par \f2\fs10 
\par \f1\fs18 Notes:
\par \pard\sb25\sa25\tx200 For \i "External Storage support"\i0  of the Part, Parts and References attribute, refer to \cf2\strike External Storage of Attributes\cf3\strike0\{linkID=220\f0 >main\f1\}\cf1 .
\par \pard\sb25\sa25\tx1435\f0 
\par }
80
Scribble80





Modified



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Creating the Business Model \cf1\b0\fs16 
\par \cf2\strike Creating the Business Model\cf3\strike0\{LinkID=70>main\}\{keepn\}\cf1  
\par \pard\keep\li95\sb25\sa25\cf2\strike\fs18 The \lang1033\f1 InstantObjects \lang1040\f0 Model Explorer\cf3\strike0\{linkID=90>main\}
\par \cf2\lang1033\strike\f1 Declaring Model Units\cf3\strike0\{linkID=110>main\}\cf1\lang1040\f0 
\par \cf2\strike Defining Classes\cf3\strike0\{linkID=120>main\}\cf1 
\par \cf2\strike Adding Business Rules\cf3\strike0\{linkID=240>main\}
\par \cf2\strike Building/Evolving the Business Model\cf3\strike0\{linkID=270>main\}
\par \cf1 
\par }
90
Scribble90
The InstantObjects Model Explorer
InstantObjects Model Explorer;Model Explorer;


creatingbusinessmodel:000020
Modified



FALSE
27
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Arial;}{\f3\fnil\fcharset0 Arial;}{\f4\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 The InstantObjects Model Explorer \cf1\b0\fs16 
\par \cf2\strike Creating the Business Model\cf3\strike0\{LinkID=70>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\fs18 The first step in building an application with InstantObjects is to define the classes and relations that make up the business model. The business model\lang1033\f1  for the application\lang1040\f0  is created\lang1033\f1  and managed\lang1040\f0  in the \lang1033\f1 InstantObjects \lang1040\f0 Model Explorer, which can be opened via the View\lang1033\f1  \lang1040\f0 menu in the Delphi IDE.\lang1033\f1  T\lang1040\f0 he \lang1033\f1 InstantObjects \lang1040\f0 Model Explorer\lang1033\f1  window is non-modal and can be docked, if desired, in the Delphi IDE. This allows the \lang1040\f0 Explorer\lang1033\f1  window to remain open while working in other areas of the IDE.
\par \lang1040\f2\fs10 
\par \cf0\b\fs22 Th\lang1033\f3 e \lang1040\f2 InstantObjects Model Explorer \lang1033\f3 (\lang1040\f2 with \f3 "\f2 Inheritance\f3 "\f2  view of classes\lang1033\f3 )\cf3\lang1040\b0\f0\fs18 
\par \{bmc ModelExplorerInheritance.gif\}
\par \cf1\f2\fs10 
\par \lang1033\f1\fs18 T\lang1040\f0 he \lang1033\f1 InstantObjects \lang1040\f0 Model Explorer\lang1033\f1  window has two main areas of interest.
\par \f2\fs10 
\par \pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\f1\fs18 The toolbar that holds the action speed buttons. \f3 The speed buttons display mouse-over, pop-up hints. These speed buttons provide access to the configuration aspects for model code units, persistence broker connections and type of class view presented in the tree view pane;\cf0\lang1040\b\f2\fs22 
\par \pard\sb25\sa25\cf1\b0\fs10 
\par \pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\lang1033\f1\fs18 The tree view pane that displays the model's classes.\cf0\b\f3\fs22  \cf1\b0\fs18 The tree view pane has a mouse right button click, \cf2\strike pop-up menu\cf3\strike0\{linkID=100>main\}\cf1  that is used to access the procedures for managing the model.\cf0\lang1040\b\f2\fs22 
\par \pard\sb25\sa25\cf1\b0\fs10 
\par \cf0\lang1033\b\fs22 Class Views
\par \cf1\b0\fs18 A\f3  useful feature of the \f1 InstantObjects \lang1040\f0 Model Explorer\lang1033\f1  when creating or managing the class model is the ability to toggle \f3 the tree view pane \f1 between inheritance and relational  type views. This is done using the 'View [Type]' speed button on the toolbar. The button has a context sensitive glyph, \cf3\{bmc ModelExplorerViewRelationsButton.gif\} \cf0 or\cf1  \cf3\{bmc ModelExplorerViewInheritanceButton.gif\}\cf0 ,\cf1  and pop-up hint.
\par \f2\fs10 
\par \pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\f3\fs18 Inheritance View - The tree view is based on the class inheritance structure;
\par \pard\sb25\sa25\f2\fs10 
\par \pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\f3\fs18 Relations View - The tree view is based on the relationships between the classes.
\par \pard\sb25\sa25\f2\fs10 
\par \f1\fs18 The Relations view for the above example Inheritance view is shown below.\cf0\lang1040\b\f2\fs22 
\par The InstantObjects Model Explorer \lang1033\f3 (\lang1040\f2 with \f3 "Relations"\f2  view of classes\lang1033\f3 )\cf3\lang1040\b0\f0\fs18 
\par \{bmc ModelExplorerRelations.gif\}\cf1 
\par 
\par }
100
Scribble100





Added



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fnil\fcharset0 Arial;}{\f1\fnil Arial;}}
{\colortbl ;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1033\b\fs24 The InstantObjects Model Explorer Pop-up Menu
\par 
\par \cf1\b0\f1\fs18\{bmc ModelExplorerPop-upMenu.gif\}\cf2\lang3081 
\par 
\par 
\par }
110
Scribble110
Declaring Model Units
Declaring Model Units;Model Units,Declaring;


creatingbusinessmodel:000030
Modified



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fnil Arial;}{\f1\fswiss Arial;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Declaring Model Units
\par \cf1\lang1040\b0\strike\f1\fs16 Creating the Business Model\cf2\strike0\{LinkID=70>main\}\{keepn\}\cf3  
\par \pard\sb25\sa25\lang1033\f2\fs18 It is good practice to keep an application's business classes encapsulated and separated from other classes such as the user interface classes. The convention when using InstantObjects is to create separate code units within the application's IDE project solely for the purpose of containing the \lang1040\f1 business \lang1033\f2 classes that constitute an InstantObjects model. \lang1040\f1 Th\lang1033\f2 is\lang1040\f1  model can be placed in one or more \lang1033\f2 code \lang1040\f1 units in the project. These units are referred to as model units.
\par \f0\fs10 
\par \lang1033\f2\fs18 The InstantObjects Model Explorer needs to know which of the application project's units are intended to be model units. This is done using\lang1040\f1  the \cf2\{bmc ModelExplorerSelectUnitsButton.gif\}\cf3 Select Units button on the toolbar of the InstantObjects Model Explorer. \lang1033\f2 T\lang1040\f1 he Select Units button\lang1033\f2  \lang1040\f1 will open a dialog showing all the units of the current project. The left side of the dialog shows the model units and the right side shows the other units included in the project. Use the buttons between the two lists to move one or more units from one side to the other. \lang1033\f2  Select the OK or Cancel button to close the dialog and save or cancel, respectively, any changes. \lang1040\f1 When \lang1033\f2 the \lang1040\f1 model unit(s)\lang1033\f2  has been declared \lang1040\f1 the business model\lang1033\f2  can be created or maintained using the \f3 tree view pane's right button click, \cf1\strike pop-up menu\cf2\strike0\{linkID=100>main\}\cf3  \lang1040\f1 .
\par \f0\fs10 
\par \cf2\f1\fs18\{bmc ModelUnitSelector.gif\}\cf3 
\par \pard\lang3081\f0 
\par }
120
Scribble120
Defining Classes
Defining Classes;Classes,Defining;


creatingbusinessmodel:000040
Modified



FALSE
13
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Arial;}{\f3\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Defining Classes \cf1\b0\fs16 
\par \cf2\strike Creating the Business Model\cf3\strike0\{LinkID=70>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\fs18 Classes can be added\lang1033\f1 , deleted\lang1040\f0  and edited\lang1033\f1  as follows (note that keyboard short cuts are also available):
\par \lang1040\f0\fs10 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\fs18 Add a new class to the model by right-clicking in the empty area of the \lang1033\f1 tree view pane in InstantObjects \lang1040\f0 Model Explorer\lang1033\f1 . This will launch the \cf2\strike pop-up menu\cf3\strike0\{linkID=100>main\}\cf1\lang1040\f0 . Select New Class from the menu\lang1033\f1  to\lang1040\f0  bring up the Class Editor with an empty class definition\lang1033\f1 ;\lang1040\f0 
\par \pard\sb25\sa25\f2\fs10 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\lang1033\f1\fs18 Delete a class selected in the tree view pane \lang1040\f0 by right-clicking\lang1033\f1  on it and selecting Delete Class from the \cf2\strike pop-up menu\cf3\strike0\{linkID=100>main\}\cf0 .  As expected, confirmation dialog is launched before the delete action is accepted;\cf1\lang1040\f0 
\par \pard\sb25\sa25\f2\fs10 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\lang1033\f1\fs18 Edit a class selected in the tree view pane \lang1040\f0 by right-clicking\lang1033\f1  on it and selecting Edit Class from the \cf2\strike pop-up menu\cf3\strike0\{linkID=100>main\}\cf0 . This will \cf1\lang1040\f0 bring up the Class Editor \lang1033\f1 and will allow editing of many of the class's properties and attributes.\cf0\lang1040\f0 
\par \pard\sb25\sa25\tx200\cf3 
\par }
130
Scribble130
Class Editor
Class Editor;Editor, Class;


creatingbusinessmodel:000050
Modified



FALSE
12
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fnil\fcharset0 Arial;}{\f1\fnil Arial;}{\f2\fswiss Arial;}{\f3\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;\red0\green128\blue0;}
\viewkind4\uc1\pard\lang1033\b\fs24 Class Editor\cf1\lang3081\b0\f1\fs18 
\par \cf2\{keepn\}\cf1 
\par \lang1033\f0 The Class Editor is used to manage a class's properties and attributes. It contains the tabbed pages as follows:
\par \f1\fs10 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\tx200\cf3\strike\f0\fs18 Class Page\cf2\strike0\{linkID=140>main\}\cf1  - This is where the class's properties are defined;\lang3081\f1 
\par \pard\fs10 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\tx200\cf3\lang1033\strike\f0\fs18 Attributes Page\cf2\strike0\{linkID=150>main\}\cf1  - This is where the class attributes are managed.\lang3081\f1 
\par \pard\sb25\sa25\lang1040\f2 
\par \pard\lang3081\f1 
\par }
140
Scribble140
Class Editor - Class Page
Class Editor,Class Page;


creatingbusinessmodel:000060
Modified



FALSE
16
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fnil\fcharset0 Arial;}{\f1\fnil Arial;}{\f2\fswiss Arial;}{\f3\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;\red0\green128\blue0;}
\viewkind4\uc1\pard\lang1033\b\fs24 Class Editor - Class Page\cf1\lang3081\b0\f1\fs18 
\par \cf2\{keepn\}\cf1 
\par \pard\sb25\sa25\lang1040\f2 This is where you specify the name and base class, the model unit to hold the class and the persistence \lang1033\f3 properties\lang1040\f2  of the class.
\par \f1\fs10 
\par \cf2\f2\fs18\{bmc ClassEditor\lang1033\f3 Class\lang1040\f2 .gif\}
\par \cf1\f1\fs10 
\par \lang1033\f3\fs18 The \b class name \b0 can be any valid Object Pascal class identifier.\lang1040\f2 
\par The default \b base class \b0 of any business class is \cf3\strike TInstantObject\cf2\strike0\{linkID=7390>main\}\cf1 , the class from which persistence capabilities are inherited. When classes are present in your model, you can choose any of these as the immediate base class instead.
\par The \lang1033\f3 model \lang1040\b\f2 unit \b0 in which \lang1033\f3 a\lang1040\f2  new class \lang1033\f3 will\lang1040\f2  be placed can be selected from the list of available model units.\lang1033\f3  This entry is read only when editing an existing class.\lang1040\f2 
\par The class\lang1033\f3  \b persistence\lang1040\f2  \b0 can be defined as either \lang1033\i\f3 stored\lang1040\f2  \i0 or \i embedded\i0 . Instances of \lang1033\i\f3 stored\lang1040\f2  \i0 classes can be \lang1033\f3 independently \lang1040\f2 stored in and retrieved from \lang1033\f3 the database\lang1040\f2 . \lang1033\f3 An i\lang1040\f2 nstance of \lang1033\f3 an \lang1040\i\f2 embedded \i0 class can exist in the database only as \lang1033\f3 an attribute\lang1040\f2  of \lang1033\f3 its owner, which is \lang1040\f2 another \i embedded \i0 or \lang1033\i\f3 stored\lang1040\f2  \lang1033\i0\f3 class instance. In practice this means that the attribute values of an \lang1040\i\f2 embedded \i0 class \lang1033\f3 are stored in the database in a BLOB type field.\lang1040\f2  \lang1033\f3 Therefore, i\lang1040\f2 f you want instances of a class to be \lang1033\f3 independently \lang1040\f2 retrievable or available by query, define the class\lang1033\f3  persistence as\lang1040\f2  \lang1033\i\f3 stored\lang1040\i0\f2 .
\par \f3 S\i tored \i0 persistence is also required for those classes used by Reference attributes or other \cf3\strike attributes with \i external \i0 storage\cf2\strike0\{linkID=220>main\}\cf1 . A class, used only for objects that are owned by other objects, should be defined with \i embedded \i0 persistence if the owning objects use \i embedded \i0 storage for the attribute. If, however, the owning objects use \i external \i0 storage kind for the attribute, define the owned class with \i stored \i0 persistence.\f2 
\par For classes\lang1033\f3  with \i stored\lang1040\f2  \lang1033\i0\f3 persistence\lang1040\f2 , a \b storage name \b0 can be specified. The storage name defines the \lang1033\f3 name\lang1040\f2  \lang1033\f3 of the \lang1040\f2 table\lang1033\f3 , \lang1040\f2 in which attributes of instances of the class are stored. By default, the storage name equals the class name without the preceding \lang1033\f3 '\lang1040\f2 T\lang1033\f3 '\lang1040\f2 . Change the \lang1033\f3 default \lang1040\f2 storage name \lang1033\f3 as desired\lang1040\f2 .
\par \pard\lang3081\f1 
\par }
150
Scribble150
Class Editor - Attributes Page
Class Editor,Attributes Page;


creatingbusinessmodel:000070
Modified



FALSE
17
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fnil\fcharset0 Arial;}{\f1\fnil Arial;}{\f2\fswiss\fcharset0 Arial;}{\f3\fswiss Arial;}{\f4\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;\red0\green128\blue0;}
\viewkind4\uc1\pard\lang1033\b\fs24 Class Editor - Attributes Page\cf1\lang3081\b0\f1\fs18 
\par \cf2\{keepn\}\cf1 
\par \pard\sb25\sa25\lang1033\f2 This where the\lang1040\f3  attributes of the class\lang1033\f2  are managed\lang1040\f3 . The top view of the page lists the attributes that are \lang1033\b\f2 I\lang1040\f3 ntroduced \b0 by the class. The bottom view lists the attributes that are \lang1033\b\f2 I\lang1040\f3 nherited \b0 from the base class.
\par \f1\fs10 
\par \cf2\f3\fs18\{bmc ClassEditorAttributes.gif\}
\par \cf1\f1\fs10 
\par \f3\fs18 Attributes can be added\lang1033\f2 , deleted\lang1040\f3  and edited\lang1033\f2  as follows (note that keyboard short cuts are also available):
\par \lang1040\f1\fs10 
\par \pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\f3\fs18 Add a new \lang1033\f2 a\lang1040\f3 ttribute\lang1033\f2  \lang1040\f3 to the model by right-clicking in the \lang1033\b\f2 Introduced \b0 view pane. This will launch the \cf3\strike pop-up menu\cf2\strike0\{linkID=160>main\}\cf1\lang1040\f3 . Select \lang1033\f2 New\lang1040\f3  from the menu\lang1033\f2  to\lang1040\f3  bring up the \cf3\lang1033\strike\f2 Attribute\lang1040\f3  Editor\cf2\strike0\{linkID=170>main\}\cf1  with an empty \lang1033\f2 attribute\lang1040\f3  definition\lang1033\f2  so that the new a\lang1040\f3 ttribute\lang1033\f2 's properties can be set;\lang1040\f3 
\par \pard\sb25\sa25\f1\fs10 
\par \pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\lang1033\f2\fs18 Delete an a\lang1040\f3 ttribute\lang1033\f2  selected in the \b Introduced \b0 view pane \lang1040\f3 by right-clicking\lang1033\f2  on it and selecting Delete from the \cf3\strike pop-up menu\cf2\strike0\{linkID=160>main\}\cf0 .  As expected, a confirmation dialog is launched before the delete action is accepted;\cf1\lang1040\f3 
\par \pard\sb25\sa25\f1\fs10 
\par \pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\lang1033\f2\fs18 Edit an a\lang1040\f3 ttribute\lang1033\f2  selected in the \b Introduced \b0 view pane \lang1040\f3 by right-clicking\lang1033\f2  on it and selecting Edit from the \cf3\strike pop-up menu\cf2\strike0\{linkID=160>main\}\cf0 . This will \cf1\lang1040\f3 bring up the \cf3\lang1033\strike\f2 Attribute\lang1040\f3  Editor\cf2\strike0\{linkID=170>main\}\cf1  \lang1033\f2 and will allow editing of many of the a\lang1040\f3 ttribute\lang1033\f2 's properties.\cf0\lang1040\f3 
\par \pard\cf1\lang3081\f1 
\par }
160
Scribble160





Added



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fnil\fcharset0 Arial;}{\f1\fnil Arial;}}
{\colortbl ;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1033\b\fs24 Class Editor - Attributes Page Pop-up menu
\par 
\par \cf1\b0\f1\fs18\{bmc ClassEditorAttributesPop-upMenu.gif\}\cf2\lang3081 
\par 
\par 
\par }
170
Scribble170
Attribute Editor
Attribute Editor;Defining Attributes;Attributes,Editor;


creatingbusinessmodel:000080
Modified



FALSE
13
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil\fcharset0 Arial;}{\f3\fnil Arial;}{\f4\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Attribute Editor \cf1\b0\fs16 
\par \cf2\strike Creating the Business Model\cf3\strike0\{LinkID=70>main\}\cf1\tab\lang1033\f1\tab\cf2\lang1040\ul\f0 See Also\cf3\ulnone\{linkID=180\}\{keepn\}\cf1  
\par \lang1033\f2\fs18 The Attribute Editor is used to manage an attribute's properties. It contains the tabbed pages as follows:
\par \f3\fs10 
\par \pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent0{\pntxtb\'B7}}\fi-200\li200\tx200\cf2\strike\f2\fs18 Definition Page\cf3\strike0\{linkID=190>main\}\cf1  - This is where the attribute's properties are defined;\lang3081\f3 
\par \pard\fs10 
\par \pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent0{\pntxtb\'B7}}\fi-200\li200\tx200\cf2\lang1033\strike\f2\fs18 Access Page\cf3\strike0\{linkID=200>main\}\cf1  - This is where access for the attribute is defined;\lang3081\f3 
\par \pard\fs10 
\par \pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\cf2\lang1033\strike\f2\fs18 Presentation Page\cf3\strike0\{linkID=210>main\}\cf1  - This is where the attribute's presentation and default properties are defined.\lang1040\f0 
\par \pard\sb25\sa25\tx200\lang1033\f2 
\par }
180
Scribble180





Added



FALSE
7
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fswiss Arial;}{\f1\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\sb25\sa25\cf1\b0\f1\fs10 
\par \pard\li60\sb25\sa25\cf2\strike\fs18 External Storage of Attributes\cf3\strike0\{linkID=220>main\}\cf1 
\par \pard\lang3081 
\par }
190
Scribble190
Attribute Editor - Definition Page
Attribute Editor,Definition Page;


creatingbusinessmodel:000090
Modified



FALSE
13
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fnil Arial;}{\f1\fswiss Arial;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;\red0\green128\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Attribute Editor - Definition Page\cf1\b0\fs18 
\par \cf2\{keepn\}\cf1 
\par \pard\sb25\sa25\lang1040\f1 This is where the \lang1033\f2 main properties \lang1040\f1 of \lang1033\f2 an\lang1040\f1  attribute \lang1033\f2 are managed\lang1040\f1 .\lang1033\f2  The edit controls on this page are context sensitive. The context varies based on attribute type and whether the attribute is new or existing.\lang1040\f1 
\par \f0\fs10 
\par \cf2\f1\fs18\{bmc AttributeEditorDefinition.gif\}
\par \cf1\f0\fs10 
\par \f1\fs18 The \b name \b0 of the attribute can be any valid Object Pascal identifier. The \b storage name \b0 specifies the \lang1033\f2 table\lang1040\f1  column \lang1033\f2 name \lang1040\f1 in which attribute values are stored. By default, the storage name is the same as the attribute name.
\par The \b type \b0 of the attribute can be selected from the list of all the types supported by InstantObjects. Some of the available types are known as simple types, others are known as relational\lang1033\f2  \lang1040\f1 types. The simple types generally have an Object Pascal equivalent simple type\lang1033\f2  (eg string or integer)\lang1040\f1 . The \cf3\strike relational types\cf2\strike0\{linkTarget=RelationalAttributeTypes>main\}\lang1033\f2  \cf1\lang1040\f1 are used to define relations\lang1033\f2 hips\lang1040\f1  \lang1033\f2 between\lang1040\f1  instances of the\lang1033\f2  attribute's owner\lang1040\f1  class \lang1033\f2 and\lang1040\f1  objects\lang1033\f2  of \lang1040\f1 other \lang1033\f2 classes\lang1040\f1 .\lang1033\f2  \lang1040\f1 The relational types are\lang1033\f2 :\lang1040\f1  Reference, Part, References and Parts.
\par \lang1033\f2 When defining relational \lang1040\f1 attribute \lang1033\f2 types the \b object class\b0  entry is used to nominate the business class type that the attribute will be referencing. The list of available existing classes is presented for selection in the drop-down list.\lang1040\f1 
\par \lang1033\f3 See \cf3\strike h\lang1040\f0 ow to use external storage\cf2\strike0\{linkTarget=HowToUseExternalStorage>main\}\cf0\lang1033\f3  for information on usage of the \b storage kind\b0  and \b external storage name\b0  entries.\cf1\lang3081\f0 
\par }
200
Scribble200
Attribute Editor - Access Page
Attribute Editor,Access Page;


creatingbusinessmodel:000110
Modified



FALSE
14
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fnil Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;\red0\green128\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Attribute Editor - Access Page\cf1\b0\fs18 
\par \cf2\{keepn\}\cf1 
\par \pard\sb25\sa25\lang1033\f1 This is where the\lang1040\f2  \lang1033\f1 properties relating to \lang1040\f2 access \lang1033\f1 to \lang1040\f2 the attribute \lang1033\f1 are\lang1040\f2  specif\lang1033\f1 ied\lang1040\f2 . \lang1033\f1 The edit controls on this page are context sensitive. The context varies based on attribute type and whether the attribute is new or existing.\lang1040\f2 
\par \f0\fs10 
\par \cf2\f2\fs18\{bmc AttributeEditorAccess.gif\}
\par \cf1\f0\fs10 
\par \f2\fs18 For every \lang1033\f1 persistent \lang1040\f2 attribute a corresponding property is added to the class\lang1033\f1 .\lang1040\f2  \lang1033\f1 T\lang1040\f2 he value of the attribute \lang1033\f1 is \lang1040\f2 accessed\lang1033\f1  through this property\lang1040\f2 .
\par The \lang1033\b\f1 V\lang1040\f2 isibility \lang1033\b0\f1 entry sets the\i  \i0 class \lang1040\f2 visibility scope of this property. 
\par \lang1033\f1 The \b Options \b0 check box group offers options for simple attribute properties to be \b indexed \b0 (in its table), \b required \b0 or \b readonly\b0 . The \b Default \b0 option relates to \cf3\strike container \lang1040\f0 attributes\cf2\strike0\{linkTarget=\lang1033 RelationalAttributeTypes\lang1040 >main\}\cf1\lang1033\f1 . It specifies whether this attribute is the default container attribute for its class.\lang1040\f2 
\par \lang1033\f1 The \b\f0 M\lang1040 ethods \lang1033\b0\f1 check box group relate to\lang1040\f2  \cf3\lang1033\strike\f1 container \lang1040\f0 attributes\cf2\strike0\{linkTarget=\lang1033 RelationalAttributeTypes\lang1040 >main\}\cf1\lang1033\f1 .\lang1040\f2  \lang1033\f1 M\lang1040\f2 ethods can be selected to manipulate the content of the attribute. Th\lang1033\f1 e selected\lang1040\f2  methods will be created with the same visibility scope as the property.\lang1033\f1  The \b Singular Name \b0 entry will be used when creating these methods. The Attribute Editor offers a default singular name derived from the attribute Name entered on the Definition page, however this might not always be appropriate and in these cases the entry can be edited. \lang1040\f2 In addition to the array property created to access objects contained in \lang1033\f1 these\lang1040\f2  attributes, a count property reflecting the number of objects in the container will\lang1033\f1  also\lang1040\f2  be added.
\par \pard\lang3081\f0 
\par }
210
Scribble210
Attribute Editor - Presentation Page
Attribute Editor,Presentation Page;


creatingbusinessmodel:000120
Modified



FALSE
12
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fnil Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fswiss Arial;}{\f3\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;\red0\green128\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Attribute Editor - Presentation Page\cf1\b0\fs18 
\par \cf2\{keepn\}\cf1 
\par \pard\sb25\sa25\lang1033\f1 This where the\lang1040\f2  \lang1033\f1 properties relating to the presentation and other miscellaneous aspects\lang1040\f2  \lang1033\f1 of \lang1040\f2 the attribute \lang1033\f1 is\lang1040\f2  specif\lang1033\f1 ied\lang1040\f2 . \lang1033\f1 The visibility of this page is context sensitive based on attribute type.\lang1040\f2 
\par \f0\fs10 
\par \cf2\f2\fs18\{bmc AttributeEditor\lang1033\f1 Presentation\lang1040\f2 .gif\}
\par \cf1\f0\fs10 
\par \f2\fs18 For some of the simple attribute types, settings regarding the presentation of the attribute can be specified on the last page of the Attribute Editor. An \b edit mask \b0 to be used when editing the value of the attribute can be specified in Mask. The characters that are accepted during input when editing the attribute value can be specified in \b Valid Characters\b0 .\lang1033\f1  \b Display Width \b0 can be used to set the default display width to be used when \lang1040\f2 editing the value of the attribute\lang1033\f1 . These properties are used by the \lang1040\f2 InstantObjects \cf3\strike user interface\lang1033\f1  \lang1040\f2 components\cf2\strike0\{linkID=210>main\}\cf1\lang1033\f1 .\lang1040\f2  
\par \pard\lang3081\f0 
\par \lang1033\f3 A \b Default Value \b0 can be entered that will be used as the initial value for new attribute instances and whenever the value is re-initialised (eg by calling the attribute's Reset method).\lang3081\f0 
\par }
220
Scribble220
External Storage of Attributes
External Storage of Attributes;Attributes,External Storage;


creatingbusinessmodel:000100
Modified



FALSE
32
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fswiss\fcharset0 Arial;}{\f1\fswiss Arial;}{\f2\fnil Arial;}{\f3\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 External Storage of Attributes\cf1\b0\f1\fs16 
\par \pard\sb25\sa25\cf2\lang1033\strike\f0 Example\cf3\strike0\{linkID=230>example\}\cf1\tab\tab\cf2\lang1040\strike\f1 Creating the Business Model\cf3\strike0\{LinkID=70>main\}\{keepn\} \cf1\f0\fs18 
\par \lang1033 The E\lang1040\f1 xternal \lang1033\f0 S\lang1040\f1 torage\lang1033\f0  option\lang1040\f1  \lang1033\f0 for \cf2\strike relational attributes\cf3\strike0\{linkTarget=RelationalAttributeTypes>main\}\cf1\lang1040\f1  \lang1033\f0 was introduced to resolve several shortcomings and issues in earlier versions of InstantObjects. These include the following:
\par \f2\fs10 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\f0\fs18 the \lang1040\f1 inability to fully query the database from a SQL-enabled (non-IO) interface;
\par \pard\sb25\sa25\f2\fs10 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\lang1033\f0\fs18 the \lang1040\f1 inability to define foreign keys to enforce referential integrity at the database level;
\par \pard\sb25\sa25\f2\fs10 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\f1\fs18 difficulty in repairing a "corrupted"\lang1033\f0  \lang1040\f1 blob\lang1033\f0  due to the nature of its binary storage. This was somewhat alleviated with the introduction of the XML option for blobs but had the added problem of increased blob size and resulted in poorer performance\lang1040\f1 ;
\par \pard\sb25\sa25\f2\fs10 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\lang1033\f0\fs18 the \lang1040\f1 poor retrieve performance due to \lang1033\f0 the \lang1040\f1 missing implementation of load-on-demand feature for part, parts and references attributes\lang1033\f0 .\lang1040\f1 
\par \pard\sb25\sa25\f2\fs10 
\par \lang1033\f0\fs18 The e\lang1040\f1 xternal storage\lang1033\f0  option\lang1040\f1  \lang1033\f0 provides\lang1040\f1  the ability to \lang1033\f0 specify that\lang1040\f1  a particular part, parts or reference\f0 s\f1  attribute should be mapped outside of \lang1033\f0 its\lang1040\f1  class\lang1033\f0  \lang1040\f1 table\lang1033\f0 . For \cf2\strike container attributes\cf3\strike0\{linkTarget=RelationalAttributeTypes>main\}\cf1\lang1040\f1  \lang1033\f0 this mapping is implemented through an\lang1040\f1  additional \lang1033\f0 linking\lang1040\f1  \lang1033\f0 table\lang1040\f1 . In the case of part attributes, the intermediate \lang1033\f0 object\lang1040\f1  is not needed because the relationship \lang1033\f0 between\lang1040\f1  the owner and the part is 1:1.
\par \f2\fs10 
\par \f1\fs18 Th\lang1033\f0 e\lang1040\f1  \lang1033\f0 linking\lang1040\f1  table has fields to hold information about\lang1033\f0  both\lang1040\f1  the relationships and the sequence of elements in the \lang1033\f0 container\lang1040\f1  attribute.\f2\fs10 
\par \f1\fs18 The mapping of the \lang1033\f0 external reference(s)\lang1040\f1  attribute is very similar\lang1033\f0  to that for the external p\lang1040\f1 art\lang1033\f0 (\lang1040\f1 s\lang1033\f0 ) \lang1040\f1 attribute\lang1033\f0 .\lang1040\f1  \lang1033\f0 T\lang1040\f1 he only difference is \lang1033\f0 one of ownership which results in \lang1040\f1 th\lang1033\f0 e\lang1040\f1  part\lang1033\f0 (\lang1040\f1 s\lang1033\f0 )\lang1040\f1  attribute's \lang1033\f0 table record(s)\lang1040\f1  \lang1033\f0 being\lang1040\f1  deleted when the \lang1033\f0 its related class\lang1040\f1  \lang1033\f0 table record\lang1040\f1  is deleted\lang1033\f0 .\lang1040\f1  \lang1033\f0 T\lang1040\f1 his of course does not happen with reference\lang1033\f0 (\lang1040\f1 s\lang1033\f0 )\lang1040\f1  attributes.
\par \f2\fs10 
\par \cf3\b\fs22\{target=HowToUseExternalStorage\}\cf0 How to use external storage\cf1\ul\f1\fs18 
\par \ulnone\b0\f0 The external storage option can be applied in the \f2 Attribute Editor\f0  by setting \i Storage Kind \i0 to the value "External" when defining a new attribute.
\par \f2\fs10 
\par \cf3\f1\fs18\{bmc AttributeEditorDefinitionExternal.gif\}\cf1 
\par \f2\fs10 
\par \f1\fs18 The\lang1033\f0  \lang1040\b\f1 Storage Kind\b0\i  \i0 combo-box \lang1033\f0 allows a selection\lang1040\f1  between \i Embedded \i0 (the classic model) and \i External \i0 (the new model). For Part attributes that (in addition to defining the target class \i stored \i0 and not \i embedded\i0 ) is enough. For Parts and References you also need \lang1033\f0 an\lang1040\f1  \b External Storage Name\lang1033\b0\f0  entry\lang1040\f1 , that is the name the \lang1033\f0 linking\lang1040\f1  table will have. \lang1033\f0 The default naming \lang1040\f1 convention\lang1033\f0  is to \lang1040\f1 use "<\lang1033\f0 class\lang1040\f1  \lang1033\f0 storage\lang1040\f1  name>_<attribute name>"\lang1033\f0  for new attributes\lang1040\f1 , but\lang1033\f0  any other suitable\lang1040\f1  naming scheme\lang1033\f0  may be used\lang1040\f1 .\lang1033\f0  If \b Auto\b0  is checked the default naming scheme will be used to update the \lang1040\b\f1 External Storage Name\lang1033\b0\f0  entry to the current values of its component names (ie \lang1040\f1 <\lang1033\f0 class\lang1040\f1  \lang1033\f0 storage\lang1040\f1  name>\lang1033\f0  and \lang1040\f1 <attribute name>\lang1033\f0 ).\lang1040\f1 
\par \pard\f2\fs10 
\par \pard\sb25\sa25\lang1033\f0\fs18 IMPORTANT\lang1040\f1  NOTE\lang1033\f0 S:
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\b\i External Storage and Class Persistence\b0\i0  - A cl\lang1040\f1 ass must \lang1033\f0 have its Persistence property set to\lang1040\f1  \i stored\i0  \lang1033\f0 if it is referred\lang1040\f1  \lang1033\f0 to by attributes that use\lang1040\f1  \i external \i0 storage. \lang1033\f0 A c\lang1040\f1 lass\lang1033\f0  defined with\lang1040\f1  \i embedded\i0  \lang1033\f0 Persistence may only be used by\lang1040\f1  \i embedded\i0  (the \lang1033\f0 InstantObjects \lang1040\f1 historical arrangement) part and parts attributes\lang1033\f0 ;\lang1040\f1 
\par \lang1033\b\i\f0{\pntext\f3\'B7\tab}Performance Hint\b0\i0  - Currently (V2.0), the InstantObjects (IO) library does not create parent class indices for the linking tables in the database. A significant improvement in performance, therefore, can often be achieved by manually adding these indices (fields 'ParentClass' and 'ParentId', non-unique) to the linking tables for your external \cf2\strike container attributes\cf3\strike0\{linkTarget=RelationalAttributeTypes>main\}\cf1 . Remember that these manually added indices will be removed by each IO database build and probably after an evolve, so they will need to monitored and re-added as necessary. The need to add these indices manually will be eliminated after the introduction of Referential Integrity (RI) options to IO. This is expected to happen in the near future and will enhance both the integrity of data in and performance of the database for brokers that can implement RI. \lang1040\f1 
\par \pard\sb25\sa25\f2\fs10 
\par \pard\cf0\fs20 
\par }
230
Scribble230
Example Class Definition with External Attributes




Modified



FALSE
22
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}{\f2\fswiss Arial;}{\f3\fswiss\fcharset0 Arial;}{\f4\fnil\fcharset0 Courier New;}}
{\colortbl ;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Example\lang1033\f1  -\lang3081\f0  Class Definition with External Attributes\cf1\{keepn\}\cf2\b0\fs18 
\par \pard\sb25\sa25\lang1040\f2 Here is a snippet from an example class definition with external attributes\lang1033\f3 . The storage name for the class TTest is assumed to be Test\lang1040\f2 :
\par \f0\fs10 
\par \f4\fs18   TTest2 = class(TInstantObject)
\par   \{IOMETADATA stored;
\par     TestPart: Part(TTest) external;
\par     TestParts: Parts(TTest) external 'Test2_TestParts';
\par     TestRef: Reference(TTest);
\par     TestRefs: References(TTest) external 'Test2_TestRefs'; \}
\par \fs10 
\par \f2\fs18 The TestPart attribute is an external part attribute, which \lang1033\f3 results in\lang1040\f2  a mapping very similar to TestRef\lang1033\f3 .\lang1040\f2  \lang1033\f3 I\lang1040\f2 nstead of having a blob field called TestPart, the Test2 table has \lang1033\f3 two reference fields,\lang1040\f2  TestPartId\lang1033\f3  and \lang1040\f2 TestPartClass, and the \lang1033\f3 referenced\lang1040\f2  \lang1033\f3 T\lang1040\f2 Test\lang1033\f3  \lang1040\f2 object\lang1033\f3 's attributes\lang1040\f2  \lang1033\f3 are\lang1040\f2  stored\lang1033\f3  as a record\lang1040\f2  in \lang1033\f3 the \lang1040\f2 Test\lang1033\f3  table \lang1040\f2 .
\par \f0\fs10 
\par \f2\fs18 The TestParts\lang1033\f3  external\lang1040\f2  attribute \lang1033\f3 results in\lang1040\f2  the creation of a \lang1033\f3 linking\lang1040\f2  table \lang1033\f3 named\lang1040\f2  Test2_TestParts which has relationships with both Test2 and Test:
\par Test2 --1:N--> Test2_TestParts --1:1--> Test.
\par \lang1033\f3 The\lang1040\f2  Test2_TestParts \lang1033\f3 linking\lang1040\f2  table has fields to hold information about \lang1033\f3 both \lang1040\f2 the relationships and the sequence of elements in the TestParts\lang1033\f3  \lang1040\f2 attribute.
\par \f0\fs10 
\par \f2\fs18 The mapping of the TestRefs attribute is very similar\lang1033\f3  to that for the \lang1040\f2 TestParts\lang1033\f3  \lang1040\f2 attribute\lang1033\f3 .\lang1040\f2  \lang1033\f3 T\lang1040\f2 he only difference is that the TestParts\lang1033\f3  \lang1040\f2 attribute's\lang1033\f3  Test\lang1040\f2  \lang1033\f3 table records\lang1040\f2  \lang1033\f3 are\lang1040\f2  deleted when the\lang1033\f3  related\lang1040\f2  Test2 \lang1033\f3 table record\lang1040\f2  is deleted\lang1033\f3 .\lang1040\f2  \lang1033\f3 T\lang1040\f2 his\lang1033\f3  cascade delete process,\lang1040\f2  of course\lang1033\f3 ,\lang1040\f2  does not happen with \lang1033\f3 the \lang1040\f2 TestRefs attribute\lang1033\f3 's Test\lang1040\f2  \lang1033\f3 table records\lang1040\f2 .
\par \pard\lang3081\f0 
\par 
\par }
240
Scribble240
Adding Business Rules
Adding Business Rules;Business Rules,Adding;


creatingbusinessmodel:000130
Done



FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Adding Business Rules \cf1\b0\fs16 
\par \cf2\strike Example 1\cf3\strike0\{linkID=250>example\}\cf1\tab\cf2\strike Example 2\cf3\strike0\{linkID=260>example\}\cf1\f1\tab\cf2\strike\f0 Creating the Business Model\cf3\strike0\{LinkID=70>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\fs18 Validation rules and other business related behavior is added to your business classes by adding the required code plus additional methods and properties to the class. Validation rules and side effects of changing the value of an attribute are often added to the setter method of the corresponding property. Complete validation of business objects before they are stored to the database can be added by overriding the BeforeStore method of the class. New objects can be initialized by overriding the Initialize method. For a complete list of the virtual methods of \cf2\strike TInstantObject\cf3\strike0\{linkID=7390>main\}\cf1 , please refer to the InstantObjects Reference Guide.
\par 
\par }
250
Scribble250
Adding Business Rules, Example 1
Adding Business Rules,Example 1;



Done



FALSE
33
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fswiss Arial;}{\f3\fnil\fcharset0 Arial;}{\f4\fnil\fcharset0 Courier New;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Example 1\b0\fs20 
\par \cf1\strike\f1\fs16 Adding Business Rules\cf2\strike0\f2\{LinkID=240>main\}\{keepn\}\cf3  \cf0\f0\fs20 
\par \f3 In InstantObjects you usually apply single-attribute business rules in the attribute's property setter method:
\par 
\par \b\f4 procedure\b0  TAddress.SetPostalCode(\b const \b0 Value: \b string\b0 );
\par \b begin\b0 
\par   \i // Validation: raise exceptions to prevent value assignment.
\par \i0   \b if \b0 (Length(Value) <> 6) \b and \b0 (Value <> '') \b then\b0 
\par     \b raise \b0 Exception.Create(\i 'Postal Code must be filled with 6 chars'\i0 );
\par   \i // Assignment: this code will usually be written by InstantObjects automatically.  
\par \i0   _PostalCode.Value := Value;
\par \i   // Post-assignment: do things as a consequence of an attribute's value change
\par   // (see also the virtual method AttributeChanged).
\par \i0   \b if \b0 (Value <> '') \b and \b0 (City = '') \b then\b0 
\par     GetDefaultCityByPostalCode(Value);
\par \b end\b0 ;
\par \f0 
\par \f3 If you need to apply business rules that involve more than one attribute, instead, you often use the BeforeStore virtual method(see \cf1\strike Example 2\cf2\strike0\{linkID=260\}\cf0 ).
\par 
\par When you code side effects, be aware that the property setters might be called more often than expected, for example when reading an object from an XML file or when you use the data-aware presentation layer. Here is an example:
\par 
\par \b\f4 procedure \b0 TShipment.SetMinShipDate(\b const \b0 Value: TDateTime);
\par \b begin\b0 
\par   \i // Assignment: this code will usually be written by InstantObjects automatically.  
\par \i0   _MinShipDate.Value := Value;
\par   MaxShipDate := 0;    
\par \b end\b0 ;
\par \f3 
\par The intent of this code is to reset MaxShipDate whenever MinShipDate changes, so that a user, in a hypothetical data-entry scenario, will have to re-enter a value for MaxShipDate. But things might not work always as expected. For example, SetMinShipDate might be called after SetMaxShipDate when streaming in an object from a XML file. The lesson here is: use the property setters and the BeforeStore method only to apply real business rules (like "MaxShipDate must be equal to or greater than MinShipDate"), and code data-entry rules (like "whenever a value for MinShipDate is entered, MaxShipDate should be reset") at the data-entry level (that is, not in the model classes).
\par 
\par }
260
Scribble260
Adding Business Rules, Example 2
Adding Business Rules,Example 2;



Done



FALSE
30
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fswiss Arial;}{\f3\fnil\fcharset0 Arial;}{\f4\fnil\fcharset0 Courier New;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Example 2\b0\fs20 
\par \cf1\strike\f1\fs16 Adding Business Rules\cf2\strike0\f2\{LinkID=240>main\}\{keepn\}\cf3 
\par \cf0\f3\fs20 Business rules that involve more than one attribute are usually applied in BeforeStore, which gets called whenever the Store method is called to write an object (back) to the storage. Example:
\par 
\par \b\f4 procedure \b0 TShipment.BeforeStore;
\par \b begin\b0 
\par   \b if \b0 MinShipDate > MaxShipDate \b then\b0 
\par     \b raise \b0 Exception.Create(\i 'Date range error'\i0 );
\par   \b inherited\b0 ;
\par \b end\b0 ;
\par \f0 
\par \f3 You initialize an object by overriding Initialize (if you need to apply initialization code both when a new object is created and when it is retrieved from the storage), or AfterCreate (if you need to apply initialization code for newly created objects only). There is also an AfterRetrieve method that you can override to apply initialization code only when an existing object is read from the storage and materialized in memory. Here is an example of AfterCreate:
\par \f0 
\par \b\f4 procedure \b0 TContact.AfterCreate;
\par \b var
\par \b0   vCategory: TCategory;
\par \b begin\b0 
\par   \b inherited\b0 ;
\par   Id := InstantGenerateId;
\par   vCategory := TCategory.Retrieve(\i 'CAT000'\i0 );
\par   \b try\b0 
\par     Category := vCategory;
\par   \b finally\b0 
\par     vCategory.Free;
\par   \b end\b0 ;
\par \b end\b0 ;
\par \f3 
\par }
270
Scribble270
Building/Evolving the Business Model
Building/Evolving the Business Model;Business Model,Building,Evolving;


creatingbusinessmodel:000140
Modified



FALSE
31
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Arial;}{\f3\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 Building/Evolving the Business Model \b0\fs16 
\par \cf2\strike Creating the Business Model\cf3\strike0\{linkID=70>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\fs18 The final step in the modeling phase is to make the model physical in terms of storage for the objects. The required tables and indices have to be created from the business model. InstantObjects allows \lang1033\f1 the\lang1040\f0  use\lang1033\f1  of\lang1040\f0  various types of databases as storage for \lang1033\f1 the business class \lang1040\f0 objects\lang1033\f1  by\lang1040  using different brokers.
\par \f2\fs10 
\par \f0\fs18 The Connection Manager \lang1033\f1 manages the\lang1040\f0  \f1 definition, \f0 creat\lang1033\f1 ion\lang1040\f0  \f1 and evolution of \lang1033 the\lang1040\f0  database. \lang1033\f1 It\lang1040\f0  \lang1033\f1 can be launched using the \cf3\{bmc ModelExplorerBuildDatabaseButton.gif\} \cf1 Build Database speed button\lang1040\f0  on the toolbar of the\lang1033\f1  \cf2\strike InstantObjects\lang1040\f0  Model Explorer\cf3\strike0\{linkID=90>main\}\f1 
\par \cf1\f2\fs10 
\par \cf3\f1\fs18\{bmc ConnectionManager.gif\}
\par \cf1\f2\fs10 
\par \b\f3\fs18 Defining a Broker Connection\b0\f0 
\par The first step in preparing the database is to \f1 define\f0  a connect\f1 or\f0  \f1 using a specific broker to establish a connection \f0 to the database.\f1 
\par Click the right mouse button over the \f0 Connection Manager\lang1033\f1  dialog and s\lang1040 elect New in the pop-up context menu. Choose the preferred Broker and its ConnectionDef Editor appears. The contents of the ConnectionDef Editor varies depending on the requirements of its related broker. The example image below is for the Interbase/Firebird IBX broker.
\par \f2\fs10 
\par \cf3\f0\fs18\{bmc ConnectionDefEditor.gif\}
\par \cf1\f2\fs10 
\par \f1\fs18 Define the connection properties and save the connection definition. Repeat this procedure for any other broker connections required.
\par \f2\fs10 
\par \b\f3\fs18 Building the Database for a Model\b0\f0 
\par \f1 WARNING: \i Any existing data in the database will be destroyed during the build process!
\par \i0 Select the desired Broker Connection in the \f0 Connection Manager\lang1033\f1  then\lang1040  to Build its database click the Build button. The Database Builder dialog appears. Click on the Show Build Sequence button and the Evolution Sequence pane will display the sequence of commands that will be executed during the actual build process. The individual steps can be disabled, enabled and re-ordered as desired using the check boxes on the left of each step in the sequence and the buttons on the right of the dialog. When the desired sequence is ready, click the Build Database button to execute it. The build progress and results are reported in the Evolution Log pane. 
\par \f2\fs10 
\par \cf3\f1\fs18\{bml DatabaseBuilder.gif\}
\par \cf1\f2\fs10 
\par \b\f3\fs18 Evolving an Existing Database for a Modified Model\b0\f0 
\par \f1 If the database for a model has been built and populated with data, subsequent changes to the model requiring a database restructure can be accommodated within the InstantObjects framework by Evolving the database. Unlike the Build procedure, which will destroy and recreate all database tables, the evolution process will try to save the existing data. The effectiveness of the evolution process depends on the features of the particular kind of database you are using.
\par WARNING: \i While the InstantObjects evolution process will attempt to preserve existing data, success is NOT guaranteed! It is strongly recommended that a verified back up of the database is available before this evolution process is applied.\i0 
\par To evolve an existing database, select the desired Broker Connection and click the Evolve button. The Database Evolver dialog similar to the Database Builder dialog will appear. Click on the Show Evolution Sequence button and the Evolution Sequence pane will display the sequence of commands that will be executed during the actual evolve process. The individual steps can be disabled, enabled and re-ordered as desired using the check boxes on the left of each step in the sequence and the buttons on the right of the dialog. When the desired sequence is ready, click the Evolve Database button to execute it. The evolve progress and results are reported in the Evolution Log pane.\b 
\par 
\par \b0\f0 
\par }
280
Scribble280
Creating the User Interface
Creating the User Interface;User Interface,Creating;


creatinguserinterface:000010
Done



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Creating the User Interface\cf1\b0\fs16 
\par \pard\sb25\tx1435\cf2\strike Group Topics\cf3\strike0\{linkID=290>nav\}\cf1\tab\cf2\strike Using InstantObjects\cf3\strike0\{linkID=50>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\tx1435\fs18 The next phase in the development process is to create a user interface through which the business objects may interact with the user. This section explains the components that are involved in the creation of the user interface.
\par 
\par }
290
Scribble290





Done



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Creating the User Interface \cf1\b0\fs16 
\par \cf2\strike Creating the User Interface\cf3\strike0\{linkID=280>main\}\cf0\{keepn\}\cf1  
\par \pard\keep\li95\sb25\sa25\cf2\strike\fs18 Persistence by RAD\cf3\strike0\{linkID=300>main\}\cf1 
\par \cf2\strike The Connector\cf3\strike0\{linkID=\f1 310\f0 >main\}\cf1 
\par \cf2\strike The Exposer\cf3\strike0\{linkID=\f1 320\f0 >main\}\cf1 
\par \cf2\strike The Selector\cf3\strike0\{linkID=330>main\}\cf1 
\par 
\par 
\par }
300
Scribble300
Persistence by RAD
Persistence by RAD;RAD, Persistence;


creatinguserinterface:000020
Done



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Persistence by RAD \cf1\b0\fs16 
\par \cf2\strike Creating the User Interface\cf3\strike0\{linkID=280>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\fs18 When InstantObjects has been installed in your Delphi environment, a set of components is available on the InstantObjects tab of the Delphi component palette.
\par \cf3\{bmc InstantObjectsPalette.gif\}\cf1 
\par Applications can be built with InstantObjects using the same RAD approach used when building traditional database applications in Delphi. InstantObjects allows you to use standard VCL data-aware controls with your persistent business objects. The InstantObjects components are used to connect to the database and to make business objects available in the user interface of the application\f1 .\f0 
\par 
\par }
310
Scribble310
The Connector
Connector;


creatinguserinterface:000030
Modified



FALSE
20
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 The Connector \cf1\b0\fs16 
\par \cf2\strike Creating the User Interface\cf3\strike0\{linkID=280>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\fs18 In order for your application to use the database \lang1033\f1 for\lang1040\f0  object storage, you must use a connector component. The connector acts as a gateway between your application and the database\f1  (by means of an internal component called the broker) and \f0 manag\lang1033\f1 es\lang1040\f0  all the objects that are stored to and retrieved from the database. A connector component for each type of data access layer that \lang1033\f1 has been installed from\lang1040\f0  InstantObjects is available on the component palette. A connector is attached to a database by assigning a connection component to its Connection \f1 (or equivalent) \f0 property. Each connector component supports its own connection type\f1 . For example:\f0 
\par \f2\fs10 
\par \pard\sb25\sa25\tx1980\tx4800\b\f0\fs18 Access type\tab Connector type\tab\f1 Type of \f0 Connection\b0 
\par ADO\tab\cf2\strike TInstantADOConnector\cf3\strike0\{linkID=1900>main\}\cf1\tab TADOConnection
\par BDE\tab\cf2\strike TInstantBDEConnector\cf3\strike0\{linkID=2560>main\}\cf1\tab TDatabase
\par IBX\tab\cf2\strike TInstantIBXConnector\cf3\strike0\{linkID=6960>main\}\cf1\tab TIBDatabase
\par \f1 D\f0 BX\tab\cf0 TInstant\f1 D\f0 BXConnector\cf1\tab TSQLConnection
\par \f1 XML\tab\cf0\f0 TInstantX\f1 ML\f0 Connector\cf1\tab TXMLFilesAccessor
\par \pard\f2\fs10 
\par \pard\sb25\sa25\f1\fs18 InstantObjects supports a variety of databases and data-access technologies (for example NexusDB, ZeosDBO, Unified InterBase...) by means of packages called Brokers. You can build and install the broker(s) you need from the Brokers sub-folder of InstantObjects's Source folder.
\par \pard\f2\fs10 
\par \f0\fs18 Drop an appropriate connector component and a matching connection component on a form or a data module in your project. Configure the connection component to access the database and assign it to the Connection \f1 (or equivalent) \f0 property of the connector component. The connector will use the connection to gain access to the database. By setting the IsDefault property to True, the connector will be used as the default connector in the application.
\par \f2\fs10 
\par \f1\fs18 You can also use a TInstantConnectionManager component that stores connection data in external files and can create connectors and connections automatically based on this data. This is particularly useful when you don't want to hard code a particular broker or set of brokers into your program. See the Primer Demo application for an example of this technique.
\par \f0 
\par }
320
Scribble320
The Exposer
Exposer;


creatinguserinterface:000040
Modified



FALSE
13
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 The Exposer \b0\fs16 
\par \cf2\strike Creating the User Interface\cf3\strike0\{linkID=280>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\cf2\strike\fs18 TInstantExposer\cf3\strike0\{linkID=6450>main\}\cf1  is a dataset component that maps objects to the user interface of your application.
\par Attributes defined in the business model are accessed through properties. Properties that are published can be accessed by data-aware controls via this component. In addition, the content of container attributes can be accessed too. The exposer component maps the published properties of objects to fields in a dataset. The objects being exposed are represented as rows in the dataset.
\par To expose an object, it must be assigned to the \cf2\strike Subject\cf3\strike0\{linkID=5150>main\}\cf1  property of a \cf2\strike TInstantExposer\cf3\strike0\{linkID=6450>main\}\cf1 . To expose multiple objects contained within another object, assign the main object to the Subject property and enter content mode by changing the \cf2\strike Mode\cf3\strike0\{linkID=5020>main\}\cf1  property from amObject to amContent. If the exposed class has no default container, specify the desired container in the property \cf2\strike ContainerName\cf3\strike0\{linkID=6560>main\}\cf1 . Specify the class of the exposed\lang1033\f1 , contained\lang1040\f0  object(s) in the property \cf2\strike ObjectClassName\cf3\strike0\{linkID=6630>main\}\cf1 .
\par By default, an exposer will make all simple properties of each exposed object as well as any related object available through fields in the dataset. Every field will have a \f1 F\f0 ield\f1 N\f0 ame matching the property it represents. For related objects, the fieldname will be the complete path to the property using regular dot notation. The property \cf2\strike FieldOptions\cf3\strike0\{linkID=4930>main\}\cf1  and the event \cf2\strike OnIncludeField\cf3\strike0\{linkID=5570>main\}\cf1  allow you to limit or extend the number fields to include.
\par Container attributes of exposed objects are automatically recognized by the exposer and \lang1033\f1 are \lang1040\f0 represented as nested datasets within the exposer.
\par Exposers can be linked together in master/detail relation\f1 ships\f0 . To link one exposer to another, assign the master exposer to the DataSet property of a TDataSource and assign the TDataSource to the \cf2\strike MasterSource\cf3\strike0\{linkID=6580>main\}\cf1  property of the detail exposer. The Subject of the detail exposer will be set to the current object of the master exposer\lang1033\f1  and updated\lang1040\f0  whenever this changes. If you want the detail exposer to expose an object that is related to the current object of the master exposer instead, simply specify the desired property path in \cf2\strike MasterProperty\cf3\strike0\{linkID=6570>main\}\cf1 .
\par \cf2\strike TInstantExposer\cf3\strike0\{linkID=6450>main\}\cf1  is not limited to exposing \cf2\strike TInstantObject\cf3\strike0\{linkID=7390>main\}\cf1  descendants. Any object with published propertied can be exposed. The content of standard VCL containers like TList, TObjectList and TCollection can be exposed in content mode.
\par 
\par }
330
Scribble330
The Selector
Selector;


creatinguserinterface:000050
Done



FALSE
40
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 The Selector \cf1\b0\fs16 
\par \cf2\strike Creating the User Interface\cf3\strike0\{linkID=280>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\fs18 The \cf2\strike TInstantSelector\cf3\strike0\{linkID=10200>main\}\cf1  is a dataset component \lang1033\f1 that \lang1040\f0 allows you to select objects from the database and optionally expose them in the user interface.
\par To select objects from the database, a command must be specified \lang1033\f1 in\lang1040\f0  the Command property. The syntax of this command\f1  (called an IQL command, from Instant Query Language) \f0  is somewhat similar to an SQL SELECT-statement\f1 , \f0 but instead of tables and columns, you specify classes and attributes:
\par \pard\keep\f2 
\par SELECT [DISTINCT] *|<Attribute>
\par FROM [ANY] <Class>
\par [WHERE <Expression>]
\par [ORDER BY <Attribute list>]
\par \pard\sb25\sa25\f0 
\par The simplest command that can be specified looks like this:
\par \pard\keep\f2 
\par SELECT * FROM TContact
\par \pard\sb25\sa25\f0 
\par This command select\f1 s\f0  all concrete instances of the class TContact. To select instances of TContact and any descendant class, add the ANY keyword:
\par \pard\keep\f2 
\par SELECT * FROM ANY Tcontact
\par \pard\sb25\sa25\f0 
\par If you want to select objects that are related to instances of a class, specify the relation attribute instead of the \f1 *\f0 , like this:
\par \pard\keep\f2 
\par SELECT Address FROM ANY Tcontact
\par \pard\sb25\sa25\f0 
\par If the same object is related to from several objects via the specified attribute and you do not want it to appear more than once in the result, use the DISTINCT keyword with the attribute:
\par \pard\keep\f2 
\par SELECT DISTINCT Address FROM ANY Tcontact
\par \pard\sb25\sa25\f0 
\par To select from objects that meet a certain criteria, you must add a WHERE clause to the command. This clause must contain an expression that evaluates to True or False. The expression can use attributes, constants and functions in combination with the most common operators. The following example will select all customers with a negative balance.
\par \pard\keep\f2 
\par SELECT * FROM TCustomer WHERE Balance < 0
\par \pard\sb25\sa25\f0 
\par To order the selected objects by one or more attributes, specify the attributes with ORDER BY:
\par \pard\keep\f2 
\par SELECT * FROM TCustomer ORDER BY Balance, Name
\par \pard\sb25\sa25\f0 
\par When the selector is opened, it performs a query against the database. The resulting objects are available via the Objects property. The number of objects selected can be read via the property ObjectCount.
\par If you want to expose the selected objects in the user interface, simply assign the selector to a TDataSource that is attached to data-aware controls.
\par 
\par }
340
Scribble340
Programming with Persistent Objects
Programming with Persistent Objects;Persistent Objects,Programming;


programming:000010
Modified



FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Programming with Persistent Objects\cf1\b0\fs16 
\par \pard\sb25\tx1435\cf2\strike Group Topics\cf3\strike0\{linkID=350>nav\}\cf1\tab\cf2\strike Using InstantObjects\cf3\strike0\{linkID=50>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\tx1435\fs18 The driving force in InstantObjects based applications \lang1033\f1 is\lang1040\f0  the persistent classes \lang1033\f1 that\lang1040\f0  contain the business logic. These business classes all descend from the fundamental \cf2\strike TInstantObject\cf3\strike0\{linkID=7390>main\}\cf1  class. This section covers aspects of working directly with the business classes of \lang1033\f1 an\lang1040\f0  application.
\par 
\par }
350
Scribble350





Imported



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Programming with Persistent Objects \cf1\b0\fs16 
\par \cf2\strike Programming with Persistent Objects\cf3\strike0\{linkID=340>main\}\{keepn\}\cf1  
\par \pard\keep\li95\sb25\sa25\cf2\strike\fs18 Creating New Objects\cf3\strike0\{linkID=360>main\}\cf1 
\par \cf2\strike Retrieving Existing Objects\cf3\strike0\{linkID=380>main\}\cf1 
\par \cf2\strike Associating Objects\cf3\strike0\{linkID=420>main\}\cf1 
\par \cf2\strike\f1 Using t\f0 he \f1 InstantQuery\cf3\strike0\f0\{linkID=440>main\}\cf1 
\par 
\par }
360
Scribble360
Creating New Objects
Creating New Objects;New Objects,Creating;


programming:000020
Imported



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 Creating New Objects\b0\fs16 
\par \pard\sb25\tx1435\cf2\strike Example 1\cf3\strike0\{linkID=370>example\}\cf1\tab\cf2\strike Programming with Persistent Objects\cf3\strike0\{linkID=340>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\tx1435\fs18 Business objects are created just like any other object. The Create constructor of the class creates a new instance of the class.
\par The constructor can be called with an optional Connector parameter. This connector specifies the database in which to make the object persistent. If no connector is specified, the default connector will be used.
\par To make an object persistent, call its Store method. Only instances of classes declared \lang1033\f1 with\lang1040\f0  \lang1033\f1 a \lang1040\f0 persisten\lang1033\f1 ce property of \i stored\lang1040\f0  \i0 in the business model can be \lang1033\f1 S\lang1040\f0 tored.
\par If an object does not\lang1033\f1  already\lang1040\f0  have \lang1033\f1 its\lang1040\f0  Id\lang1033\f1  assigned\lang1040\f0 , \lang1033\f1 an\lang1040\f0  id\lang1033\f1  value\lang1040\f0  will be \lang1033\f1 generated\lang1040\f0  \lang1033\f1 and assigned to \lang1040\f0 it\lang1033\f1  prior to storage\lang1040\f0 .
\par 
\par }
370
Scribble370
Creating New Objects, Example 1
Creating New Objects,Example 1;



Imported



FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \cf2\strike Creating New Objects\cf3\strike0\{linkID=360>main\}\{keepn\}\cf1  
\par \pard\keep\f1\fs18 
\par \b var\b0 
\par   Person: TPerson
\par \b begin\b0 
\par   Person := TPerson.Create(MyConnector);
\par   \b try\b0 
\par     Person.Id := '12345678'
\par     Person.Name := 'John Doe';
\par     Person.Store;
\par   \b finally\b0 
\par     Person.Free;
\par   \b end\b0 ;
\par \b end\b0 ;
\par 
\par }
380
Scribble380
Retrieving Existing Objects
Retrieving Existing Objects;Existing Objects,Retrieving;


programming:000030
Imported



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Arial;}{\f3\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Retrieving Existing Objects\cf1\b0\fs16 
\par \pard\sb25\tx1435\tx2875\cf2\strike Example 1\cf3\strike0\{linkID=390>example\}\cf1\tab\cf2\strike Example 2\cf3\strike0\{linkID=400>example\}\cf1\tab\cf2\strike Example \lang1033\f1 3\cf3\lang1040\strike0\f0\{linkID=410>example\}\cf1\lang1033\f1\tab\tab\cf2\lang1040\strike\f0 Programming with Persistent Objects\cf3\strike0\{linkID=340>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\tx1435\tx2875\fs18 Objects that have been stored to the database can be retrieved into memory \lang1033\f1 by using any of the following techniques:
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\tx2875 If the Id of the object is known \lang1040\f0 the Retrieve constructor\lang1033\f1  can be used\lang1040\f0 . An optional connector through which the object shall be retrieved can be specified. If no connector is specified, the default connector is used. If the object already exists in memory, the existing object is returned. If the object is not found, the constructor returns nil.\lang1033\f1  See \cf2\strike example 1\cf3\lang1040\strike0\f0\fs16\{linkID=390>example\}\cf1\lang1033\f1\fs18 .\lang1040\f0 
\par \pard\sb25\sa25\f2\fs10 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\sb25\sa25\tx200\tx2875\f0\fs18 If the Id of the object is not known or multiple objects meeting a certain criteria \lang1033\f1 need to\lang1040\f0  be retrieved, a \cf2\lang1033\strike\f1 S\lang1040\f0 elector\cf3\strike0\fs16\{linkID=330>main\}\cf1\fs18  \lang1033\f1 or an \cf2\lang1040\strike InstantQuery\cf3\strike0\f0\fs16\{linkID=440>main\}\cf1\lang1033\f1  \lang1040\f0\fs18 can be used\lang1033\f1 . See \cf2\strike example 2\cf3\lang1040\strike0\f0\fs16\{linkID=400>example\}\cf1\lang1033\f1\fs18  and \cf2\strike example 3\cf3\lang1040\strike0\f0\fs16\{linkID=410>example\}\cf1\lang1033\f1\fs18 .\lang1040\f0 
\par \pard\sb25\sa25\tx200\tx2875\f2\fs10 
\par }
390
Scribble390
Retrieving Existing Objects, Example 1
Retrieving Existing Objects,Example 1;



Modified



FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \cf2\strike Retrieving Existing Objects\cf3\strike0\{linkID=380>main\}\{keepn\}\cf1  
\par \pard\keep\f1\fs18 
\par \b var\b0 
\par   Person: TPerson;
\par \b begin\b0 
\par   Person := TPerson.Retrieve('12345678', MyConnector);
\par   \b try\b0 
\par     ShowMessage(Person.Name);
\par   \b finally\b0 
\par     Person.Free;
\par   \b end\b0 ;
\par \b end\b0 ;
\par \pard\sb25\sa25\f0 
\par }
400
Scribble400
Retrieving Existing Objects, Example 2
Retrieving Existing Objects,Example 2;



Imported



FALSE
26
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 2 \cf1\b0\fs16 
\par \cf2\strike Retrieving Existing Objects\cf3\strike0\{linkID=380>main\}\{keepn\}\cf1  
\par \pard\keep\f1\fs18 
\par \b var\b0 
\par   I: Integer;
\par   Person: TPerson;
\par \b begin\b0 
\par   \b with \b0 TInstantSelector.Create(nil) \b do\b0 
\par   \b try\b0 
\par     Connector := MyConnector;
\par     Command.Text := 'SELECT * FROM TPerson WHERE Company.Name = "Happy Donuts"';
\par     Open;
\par     \b for \b0 I := 0 \b to \b0 Pred(ObjectCount) \b do\b0 
\par     \b begin\b0 
\par       Person := Objects[I] as TPerson;
\par       Person.Salary := Person.Salary * 1.05;
\par       Person.Store;
\par     \b end\b0 ;
\par   \b finally\b0 
\par     Free;
\par   \b end\b0 ;
\par \b end\b0 ;
\par 
\par }
410
Scribble410
Retrieving Existing Objects, Example 3
Retrieving Existing Objects,Example 3;



Added



FALSE
25
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fmodern Courier New;}{\f3\fnil\fcharset0 Courier New;}{\f4\fmodern\fcharset0 Courier New;}{\f5\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example \lang1033\f1 3\lang1040\f0  \cf1\b0\fs16 
\par \cf2\strike Retrieving Existing Objects\cf3\strike0\{linkID=380>main\}\{keepn\}\cf1  
\par \pard\keep\f2\fs18 
\par \b var\b0 
\par   I: Integer;
\par   Person: TPerson;
\par \pard\b\f3 begin\b0 
\par \pard\keep\f2   \lang1033\b\f4 with \lang1040\b0\f2 MyConnector\f3 .CreateQuery \b do\b0\f2 
\par \lang1033\f4   \lang1040\b\f2 try\b0 
\par     Command := 'SELECT * FROM TPerson WHERE Company.Name = "Happy Donuts"';
\par     Open;
\par     \b for \b0 I := 0 \b to \b0 Pred(ObjectCount) \b do\b0 
\par     \b begin\b0 
\par       Person := Objects[I] as TPerson;
\par       Person.Salary := Person.Salary * 1.05;
\par       Person.Store;
\par     \b end\b0 ;
\par   \b finally\b0 
\par     Free;
\par   \b end\b0 ;
\par \b end\b0 ;
\par \pard\cf0\lang3081\b\f5\fs24 
\par }
420
Scribble420
Associating Objects
Associating Objects;Objects,Associating;


programming:000040
Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Associating Objects\cf1\b0\fs16 
\par \pard\sb25\tx1435\cf2\strike Example 1\cf3\strike0\{linkID=430>example\}\cf1\tab\cf2\strike Programming with Persistent Objects\cf3\strike0\{linkID=340>main\}\{keepn\}\cf1  
\par \pard\sb25\sa25\tx1435\fs18 Persistent object relations defined by relational attributes in the business model can be accessed just as easy as any other attribute.
\par Single object relations defined by Part and Reference attributes are accessed through the corresponding object property of the class.
\par Multiple object references defined by Parts and References attributes are accessed through the corresponding array property and the container methods defined for the attribute.
\par 
\par }
430
Scribble430
Associating Objects, Example 1
Associating Objects,Example 1;



Done



FALSE
123
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil Arial;}{\f4\fmodern\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \cf2\strike Associating Objects\cf3\strike0\{linkID=420>main\}\{keepn\}\cf1  
\par \pard\keep\f1\fs18 
\par \pard\sb25\sa25\tx1435\f0 The \lang1033\f2 following\lang1040\f0  code defines a class containing the various relation types. The procedure CreateSamplePerson creates a TPerson object with a sample name and address, associates it with a company and adds some phones and colleagues to it. The procedures ShowPhones and ShowFriends shows a message with the caption of each of the corresponding objects associated with the person. The code assumes that a default connector has been created.
\par \pard\sb25\sa25\f3\fs10 
\par \pard\keep\b\f1\fs18 type\b0 
\par   TPerson = class(\cf2\strike TInstantObject\cf3\strike0\{linkID=7390>main\}\cf1 )
\par   \{\-IOMETADATA stored;
\par     Address: Part(TAddress);
\par     Company: Reference(TCompany);
\par     Friends: References(TPerson);
\par     Name: String(30);
\par     Phones: Parts(TPhone); \}
\par     _Address: \cf2\strike TInstantPart\cf3\strike0\{linkID=9250>main\}\cf1 ;
\par     _Company: \cf2\strike TInstantReference\cf3\strike0\{linkID=9520>main\}\cf1 ;
\par     _Friends: \cf2\strike TInstantReferences\cf3\strike0\{linkID=9780>main\}\cf1 ;
\par     _Name: \cf2\strike TInstantString\cf3\strike0\{linkID=11000>main\}\cf1 ;
\par     _Phones: \cf2\strike TInstantParts\cf3\strike0\{linkID=9390>main\}\cf1 ;
\par   \b private\b0 
\par     \b function \b0 GetAddress: TAddress;
\par     \b function \b0 GetCompany: TCompany;
\par     \b function \b0 GetFriendCount: \b Integer\b0 ;
\par     \b function \b0 GetFriends(Index: Integer): TPerson;
\par     \b function \b0 GetName: \b string\b0 ;
\par     \b function \b0 GetPhoneCount: \b Integer\b0 ;
\par     \b function \b0 GetPhones(Index: \b Integer\b0 ): TPhone;
\par     \b procedure \b0 SetAddress(Value: TAddress);
\par     \b procedure \b0 SetCompany(Value: TCompany);
\par     \b procedure \b0 SetFriends(Index: \b Integer\b0 ; Value: TPerson);
\par     \b procedure \b0 SetName(\b const \b0 Value: \b string\b0 );
\par     \b procedure \b0 SetPhones(Index: \b Integer\b0 ; Value: TPhone);
\par   \b public\b0 
\par     \b function \b0 AddFriend(Friend: TPerson): \b Integer\b0 ;
\par     \b function \b0 AddPhone(Phone: TPhone): \b Integer\b0 ;
\par     \b function \b0 RemoveFriend(Friend: TPerson): \b Integer\b0 ;
\par     \b function \b0 RemovePhone(Phone: TPhone): \b Integer\b0 ;
\par     \b property \b0 FriendCount: \b Integer \b0 read GetFriendCount;
\par     \b property \b0 Friends[Index: \b Integer\b0 ]: TPerson \b read \b0 GetFriends \b write \b0 SetFriends;
\par     \b property \b0 PhoneCount: \b Integer read \b0 GetPhoneCount;
\par     \b property \b0 Phones[Index: \b Integer\b0 ]: TPhone \b read \b0 GetPhones \b write \b0 SetPhones;
\par   \b published\b0 
\par     \b property \b0 Address: TAddress \b read \b0 GetAddress \b write \b0 SetAddress;
\par     \b property \b0 Company: TCompany \b read \b0 GetCompany \b write \b0 SetCompany;
\par     \b property \b0 Name: string \b read \b0 GetName \b write \b0 SetName;
\par   \b end\b0 ;
\par 
\par \b function \b0 CreateSamplePerson(Company: TCompany): TPerson;
\par \b var\b0 
\par   I: Integer;
\par   Phone: TPhone;
\par \b begin\b0 
\par   Result := TPerson.Create;
\par   \b try\b0 
\par     Result.Name := 'John Doe';
\par     Result.Address.Street := 'Summer Street 1';
\par     Result.Company := Company;
\par 
\par     \{\- Add phones \}
\par     Phone := TPhone.Create;
\par     Phone.Name := 'Home';
\par     Phone.Number := '12345678';
\par     Result.AddPhone(Phone);
\par     Phone := TPhone.Create;
\par     Phone.Name := 'Office';
\par     Phone.Number := '32187654';
\par     Result.AddPhone(Phone);
\par 
\par     \{\- Add colleagues\lang1033\f4  as Friends\lang1040\f1  \}
\par     \b with \b0 TInstantSelector.Create(nil) \b do\b0 
\par     \b try\b0 
\par       Command.Text := 'SELECT * FROM TPerson WHERE Company = ' + Company.Id;
\par       Open;
\par       \b for \b0 I := 0 \b to \b0 Pred(ObjectCount) \b do\b0 
\par         Result.AddFriend(Objects[I] \b as \b0 TPerson);
\par     \b finally\b0 
\par       Free;
\par     \b end\b0 ;
\par 
\par     Result.Store;
\par   \b except\b0 
\par     Result.Free;
\par     \b raise\b0 ;
\par   \b end\b0 ;
\par \b end\b0 ;
\par 
\par \b procedure \b0 ShowPhones(Person: TPerson);
\par \b var\b0 
\par   I: Integer;
\par \b begin\b0 
\par   \b for \b0 I := 0 \b to \b0 Pred(Person.PhoneCount) \b do\b0 
\par     ShowMessage(Person.Phones[I].Caption);
\par \b end\b0 ;
\par 
\par \b procedure \b0 ShowFriends(Person: TPerson);
\par \b var\b0 
\par   I: Integer;
\par \b begin\b0 
\par   \b for \b0 I := 0 \b to \b0 Pred(Person.FriendCount) \b do\b0 
\par     ShowMessage(Person.Friends[I].Caption);
\par \b end\b0 ;
\par 
\par \b procedure \b0 DemonstrateRelations;
\par \b var\b0 
\par   Company: TCompany;
\par   Person: TPerson;
\par \b begin\b0 
\par   Company := TCompany.Retrieve('Happy Donuts');
\par   \b try\b0 
\par     Person := CreateSamplePerson(Company);
\par     \b try\b0 
\par       ShowPhones(Person);
\par       ShowFriends(Person);
\par     \b finally\b0 
\par       Person.Free;
\par     \b end\b0 ;
\par   \b finally\b0 
\par     Company.Free;
\par   \b end\b0 ;
\par \b end\b0 ;
\par 
\par }
440
Scribble440
Using an InstantQuery
Using an InstantQuery;InstantQuery,Using;



Done



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\b\f0\fs24 Using an InstantQuery\b0\fs16 
\par \cf2\strike Example 1\cf3\strike0\{linkID=450>example\}\cf1\tab\cf2\strike Programming with Persistent Objects\cf3\strike0\{linkID=340>main\}\{keepn\}\cf1 
\par \cf0\f1\fs18 TInstantQuery is not available in Delphi's Component or Tool Palette, but it is useful to fetch a list of objects from the storage through an IQL statement. TInstantQuery basically represents the core of \cf1  \cf2\strike\f0 TInstantSelector\cf3\strike0\{linkID=10200>main\}\cf1\f1 .
\par 
\par TInstantQuery is an abstract class. What you actually use are concrete descendant classes, which you instantiate through the connector's CreateQuery method. The advantage in using a TInstantQuery descendant lies directly in the lower overhead, as there is no TDataSet buffer management involved. So, if you want to fetch objects and don't have a data-aware presentation layer, TInstantQuery is the preferred way to do it. \f2 
\par }
450
Scribble450
Using the InstantQuery, Example 1
Using the InstantQuery,Example 1;



Done



FALSE
21
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil\fcharset0 Courier New;}{\f3\fnil Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Example 1
\par \cf1\b0\strike\f1\fs16 Using the InstantQuery\cf2\strike0\{linkID=440\}\f0\{keepn\}\cf3  
\par \b\f2\fs18 function \b0 CompanyOfCityCount(\b const\b0  ACityId: \b string\b0 ): Integer;
\par \b begin\b0 
\par   \b with\b0  InstantDefaultConnector.CreateQuery \b do\b0 
\par   \b try\b0 
\par     Command := \i 'SELECT * FROM ANY TCompany WHERE City = :City'\i0 ;
\par \i     // Since this is a parameterized query, fetch the param definitions.\i0 
\par     FetchParams(InstantQuery.Command, InstantQuery.Params);
\par \i     // Set the param values
\par \i0     Params.ParamByName('City').AsString := ACityId;
\par     Open;
\par     Result := ObjectCount;
\par   \b finally\b0 
\par     Free;
\par   \b end\b0 ;
\par \b end\b0 ;
\par \cf0\f3\fs20 
\par }
460
Scribble460
Learning the Primer Demo
Learning The Primer Demo;Primer Demo,Learning;


primerdemo:000010
Done



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil\fcharset0 Arial;}{\f1\fswiss Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\fs24 Learning the Primer Demo\cf1\fs22 
\par \b0\strike\f1\fs16 Group Topics\cf2\strike0\{linkID=470>nav\}\cf3\tab\cf1\strike Using InstantObjects\cf2\strike0\{linkID=50>main\}\{keepn\}\cf3  \cf0\f0\fs20 
\par 
\par \fs18 InstantObjects Primer is an example application that was built using the InstantObjects Object Persistence Framework. It demonstrates how InstantObjects enables you to build truly object oriented database applications in Delphi using the same RAD approach you use, when building traditional database applications. 
\par \ul\b\fs20 
\par }
470
Scribble470





Done



FALSE
24
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fswiss\fcharset0 Arial;}{\f1\fswiss Arial;}{\f2\fnil\fcharset0 Arial;}{\f3\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\b\f0\fs24 Primer Demo Summary\cf1\b0\f1\fs16 
\par \cf2\strike\f0 Learning the Primer Demo\cf3\strike0\{linkID=460>main\}\f1\{keepn\}\cf1  
\par \pard\cf0\b\f2\fs20 Summary\b0 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\tx200\cf2\strike\fs18 Introduction\cf3\strike0\{linkID=480>main\}\cf0 
\par \cf2\strike{\pntext\f3\'B7\tab}The Business Model\cf3\strike0\{linkID=490>main\}\cf0 
\par \cf2\strike{\pntext\f3\'B7\tab}The User Interface\cf3\strike0\{linkID=500>main\}\cf0 
\par \pard 
\par \b Persistence
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\tx200\cf2\b0\strike Persisting Objects\cf3\strike0\{linkID=510>main\}\cf0 
\par \cf2\strike{\pntext\f3\'B7\tab}Mapping Scheme\cf3\strike0\{linkID=520>main\}\cf0 
\par \cf2\strike{\pntext\f3\'B7\tab}Streaming\cf3\strike0\{linkID=530>main\}\cf0 
\par \pard 
\par \b Presentation\b0 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\tx200\cf2\strike Exposing Objects\cf3\strike0\{linkID=540>main\}\cf0 
\par \cf2\strike{\pntext\f3\'B7\tab}Selecting Objects\cf3\strike0\{linkID=550>main\}\cf0 
\par \cf2\strike{\pntext\f3\'B7\tab}Filtering\cf3\strike0\{linkID=560>main\}\cf0 
\par \cf2\strike{\pntext\f3\'B7\tab}Sorting\cf3\strike0\{linkID=570>main\}\cf0 
\par \pard 
\par \b Tools\b0 
\par \pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-200\li200\tx200\cf2\strike Object Explorer\cf3\strike0\{linkID=580>main\}\cf0 
\par \cf2\strike{\pntext\f3\'B7\tab}Connection Manager\cf3\strike0\{linkID=590>main\}\cf1\f1 
\par }
480
Scribble480
Primer Demo: Introduction
Primer Demo,Introduction;


primerdemo:000020
Done



FALSE
15
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Primer\f1  Demo\f0 : Introduction\fs26 
\par \cf1\b0\strike\f1\fs16 Learning the Primer Demo\cf2\strike0\{linkID=460>main\}\{keepn\}\cf0\fs20 
\par \f0 
\par \b\f1\fs18 Contact book\b0 
\par InstantObjects Primer features a contact book in which contacts can be registered and maintained. The main screen of the contact book is available via the Contacts icon on the navigation bar to the left. The following topics in this section describe the business model and user interface of the contact book.
\par  
\par \b Query Tester\b0 
\par With the query tester available via the Query icon on the navigation bar, you can try out the query engine of InstantObjects. The query tester allows you to write and execute your own queries or choose from a list of example queries.
\par 
\par \b Performance Tester\b0 
\par InstantObjects can use various types of databases as the storage for your persistent objects. In fact, multiple database connections of different types can be used simultaneously by the same application. With the performance tester available via the Performance icon on the navigation bar, you can compare the performance of the database types of interest.
\par \f0 
\par }
490
Scribble490
Primer Demo: The Business Model
Primer Demo,Business Model;


primerdemo:000030
Done



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Primer Demo: \f1 The Business Model\f0\fs26 
\par \cf1\b0\strike\f1\fs16 Learning the Primer Demo\cf2\strike0\{linkID=460>main\}\{keepn\}\cf0\b\fs20 
\par \cf3\b0\f0\fs18 The contact book featured in this application is based on a simple business model of contact related information. The following UML class diagram shows how this information is organized.
\par \fs10 
\par \cf2\f1\fs20\{bmc model.gif\}
\par \cf3\f0\fs10 
\par \fs18 The business model was implemented entirely in the Delphi IDE using the integrated \cf1\strike InstantObjects Model Explorer\cf2\strike0\f1\fs20\{linkID=90\}\cf0 . 
\par }
500
Scribble500
Primer Demo: The User Interface
Primer Demo,User Interface;


primerdemo:000040
Done



FALSE
13
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Primer Demo: The User Interface\fs26 
\par \cf1\b0\strike\f1\fs16 Learning the Primer Demo\cf2\strike0\{linkID=460>main\}\{keepn\}\cf0\fs20 
\par \cf3\f0\fs18 The user interface of the contact book relies on visual form inheritance. The following diagram shows the form class hierarchy. 
\par 
\par TBasicEditForm introduces basic editing capabilities for editing single objects. Descendant forms introduce capabilities required for editing objects of their corresponding business class. 
\par 
\par TBasicBrowseForm is used for browsing and editing multiple objects at once. Descendants hereof are customized for browsing objects of specific classes.
\par \fs10 
\par \cf2\fs20\{bmc ui.gif\}
\par \cf0 
\par }
510
Scribble510
Primer Demo: Persisting Objects
Primer Demo,Persisting Objects;


primerdemo:000050
Done



FALSE
14
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Primer Demo: Persisting Objects\fs26 
\par \cf1\b0\strike\f1\fs16 Learning the Primer Demo\cf2\strike0\{linkID=460>main\}\{keepn\}\cf0\fs20 
\par \cf3\f0\fs18 One of the main issues when building truly object oriented business applications is the ability to persist business objects. InstantObjects addresses this issue by supporting the most common relational databases as object storage. Relations between objects defined in the business model are handled seamlessly by InstantObjects when storing objects to or retrieving objects from the database.
\par 
\par In most cases, object persistence is handled automatically by the presentation components through which the objects are exposed in the user interface. See the Presentation section for more details about object presentation.
\par 
\par When objects are not accessed via the user interface, persistence is achieved by application code instead. 
\par 
\par Business classes inherit their persistent capabilities from \cf1\strike TInstantObject\cf2\strike0\{linkID=7390>main\}\cf3 . Like other classes in Delphi, instances of classes that descent from TInstantObject are created with the Create constructor of the class. Objects can be stored in the database by invoking the Store method. Existing objects can be retrieved from the database with the Retrieve constructor. When objects are no longer needed, they can be removed from the database by invoking the Dispose method.
\par 
\par Examples of persisting objects by code can be found in the unit DemoData.pas. This unit contains the code for random generation of contacts. Study the code to learn how easy it is to create persistent objects with InstantObjects.
\par }
520
Scribble520
Primer Demo: Mapping Scheme
Primer Demo,Mapping Scheme;


primerdemo:000060
Done



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Primer Demo: Mapping Scheme\fs26 
\par \cf1\b0\strike\f1\fs16 Learning the Primer Demo\cf2\strike0\{linkID=460>main\}\{keepn\}\cf0\fs20 
\par \cf3\f0\fs18 One aspect to consider when creating the business model of your application is the  mapping scheme. The mapping scheme defines how the business objects are mapped to tables in the relational database.
\par 
\par By default, InstantObjects defines a mapping scheme that uses one table per class in the business model. This mapping scheme can be changed by changing the storage name of classes and attributes. InstantObjects allows you to combine the storage of several classes into one table by specifying the same storage name for the classes.
\par 
\par Custom mapping schemes can be used to optimize performance of particular classes or to support legacy databases.
\par }
530
Scribble530
Primer Demo: Streaming
Primer Demo,Streaming;


primerdemo:000070
Done



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Primer Demo: Streaming\fs26 
\par \cf1\b0\strike\f1\fs16 Learning the Primer Demo\cf2\strike0\{linkID=460>main\}\{keepn\}\cf0\fs20 
\par \cf3\f0\fs18 All business objects created with InstantObjects can be written to and read from any standard VCL stream. The structure of the stream can be either binary or XML.
\par 
\par An example of streaming objects to an XML file is supplied by the Export to XML option on the toolbar of the Contacts view. This option can also be selected by right-clicking on a contact in the grid. When executed, the export function writes the currently selected contact to an XML file and launches your default XML viewer with the file. This would normally be your Internet browser.
\par }
540
Scribble540
Primer Demo: Exposing Objects
Primer Demo,Exposing Objects;


primerdemo:000080
Modified



FALSE
16
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Primer Demo: Exposing Objects\fs26 
\par \cf1\b0\strike\f1\fs16 Learning the Primer Demo\cf2\strike0\{linkID=460>main\}\{keepn\}\cf0\fs20 
\par \cf3\f0\fs18 Making objects available in the user interface of an application through data-aware controls is known as  exposing objects. InstantObjects allows you to expose any object with published properties.
\par 
\par \cf1\strike TInstantExposer\cf2\strike0\{linkID=320\}\cf3  is the component to use when an object or part of an object that is already present in memory needs to be exposed. TInstantExposer is a TDataSet descendant, which means it can be attached to data-aware controls via a TDataSource. When an object is assigned to the Subject property of a TInstantExposer component, the object or the objects contained in the object are represented as rows in the dataset. The published properties of the exposed object(s) are represented as columns in the dataset.
\par 
\par The contact book demonstrates how exposers can be used to show and edit business objects in the user interface. TBasicEditForm is the base for all forms used by the application to edit objects. This form contains an exposer which is connected through a TDataSource to data-aware controls introduced in descending forms designed for editing objects of specific classes. When an object needs to be edited, it is passed to the exposer in a suitable edit form.
\par 
\par When exposing business objects, relations to other objects defined in the business model are recognized and handled automatically. One-to-many relations are represented as nested datasets within the exposer. In addition, exposers can be linked in a master-detail fashion allowing any related object to be exposed via the referring object. The exposers PhonesExposer on the form TContactEditForm and EmailsExposer on the form TPersonEditForm are examples of detail exposers that are linked to a master exposer.
\par \fs10 
\par \cf2\fs18\{bmc PersonEditForm.gif\}\cf3 
\par \fs10 
\par \fs18 If you study TBasicEditForm and the various descendants hereof you will notice that they contain no code for handling the editing of the object - this is done automatically by the exposer.
\par }
550
Scribble550
Primer Demo: Selecting Objects
Primer Demo,Selecting Objects;


primerdemo:000090
Modified



FALSE
24
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Primer Demo: Selecting Objects\fs26 
\par \cf1\b0\strike\f1\fs16 Learning the Primer Demo\cf2\strike0\{linkID=460>main\}\{keepn\}\cf0\fs20 
\par \cf3\f0\fs18 In order to work with business objects they have to be retrieved into memory. Specific objects can be retrieved via the  Retrieve constructor of their class if their object Id is known. If this is not the case or if multiple objects need to be accessed at once, either for presentation or manipulation, they can be  selected from the database.
\par 
\par Objects are selected from the database via the \cf1\strike TInstantSelector\cf2\strike0\{linkID=330\}\cf3  component. This component is a special exposer that allows you to specify a command that defines the objects to be retrieved and optionally exposed. The syntax of the command is somewhat similar to SQL, but instead of tables and columns, you specify classes and attributes. When opened, TInstantSelector queries the database for the corresponding objects and exposes those as rows in the dataset. In addition, the selected objects are available via the Objects array property of the selector. See the section Exposing Objects for details about exposing.
\par 
\par In its simplest form, the selector command looks like this: 
\par 
\par SELECT * FROM TPerson
\par 
\par The above command will select all objects of the TPerson class. By adding a WHERE clause and an ORDER BY clause, the selection is limited to objects meeting a certain criteria and sorted as well:
\par \fs10 
\par \cf2\fs18\{bmc PrimerQuery.gif\}\cf3 
\par \fs10 
\par \fs18 Attributes are specified using regular dot-notation. This allows you to specify attributes of the selected object and objects related to this object. Please consult the InstantObjects Reference Guide for an in-depth explanation of the TInstantSelector Command property.
\par 
\par TInstantSelector is being used in the contact book in several areas. First of all, the main contact grid used for browsing contacts is connected via a TDataSource to a selector. The command of this selector is changed when clicking one of the index-tabs above the grid and when performing a search via the Find feature.
\par 
\par In TContactEditForm, The country and category fields of a contact are edited via a standard TDBLookupComboBox in which the drop down list is connected to a selector that is exposing the objects that can be associated with the field.
\par 
\par All forms used for browsing and looking up objects descent from TBasicBrowseForm. These forms all use a selector to select and expose the desired objects.
\par }
560
Scribble560
Primer Demo: Filtering
Primer Demo,Filtering;


primerdemo:000100
Done



FALSE
12
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Primer Demo: Filtering\fs26 
\par \cf1\b0\strike\f1\fs16 Learning the Primer Demo\cf2\strike0\{linkID=460>main\}\{keepn\}\cf0\fs20 
\par \cf3\f0\fs18 When exposing objects through an exposer or a selector, a filter can be used to hide unwanted objects. With selectors you can select objects from the database by specifying criteria to be met for the persistent attributes of the objects. Filters, on the other hand, allow you to determine which objects to include at business logic level. This means that objects can be shown or hidden depending on business rules defined by their class. Filters come in two f\lang1033\f1 l\lang1040\f0 avors:  dynamic and static.
\par 
\par Dynamic filters are applied to each object when navigating through the dataset. Since only the objects that are touched during navigation are examined by the filter, this is the fastest filtering method if exposing a large number of objects. Dynamic filters are implemented via the FilterRecord event.
\par 
\par Static filters can be used if you want to pre-filter the exposed objects before navigation. When applying a static filter, all objects will be examined by the filter at once. For selectors, this means that all selected objects will be retrieved from the database. Since all objects are pre-filtered, no filtering takes place during navigation. Use static filters when objects are already present in memory, when exposing a limited number of objects or when the number of objects passing the filter needs to be known during navigation. Static filters are implemented via the Limit event.
\par 
\par InstantObjects Primer \lang1033\f1 d\lang1040\f0 emonstrates both static and dynamic filtering via the Filter option available on the toolbar of the Contacts view.
\par }
570
Scribble570
Primer Demo: Sorting
Primer Demo,Sorting;


primerdemo:000110
Done



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Primer Demo: Sorting\fs26 
\par \cf1\b0\strike\f1\fs16 Learning the Primer Demo\cf2\strike0\{linkID=460>main\}\{keepn\}\cf0\fs20 
\par \cf3\f0\fs18 Objects retrieved via a selector can be sorted by the underlying database by specifying one or more persistent attributes of the object or related objects with the ORDER BY clause. In addition, objects exposed through an exposer or a selector can be sorted in memory by adding a custom sort method to the OnCompare event.
\par 
\par InstantObjects Primer demonstrates both sort methods via the Sort option available on the toolbar of the Contacts view. A custom sort event is also used by the exposer EmployeeExposer in TCompanyEditForm to order the employees by their name.
\par }
580
Scribble580
Primer Demo: Object Explorer
Primer Demo,Object Explorer;


primerdemo:000120
Modified



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Primer Demo: Object Explorer\fs26 
\par \cf1\b0\strike\f1\fs16 Learning the Primer Demo\cf2\strike0\{linkID=460>main\}\{keepn\}\cf0\fs20 
\par \cf1\strike\f0\fs18 TInstantExplorer\cf2\strike0\{linkID=6230>main\}\cf3  is a visual component that display\lang1033 s\lang1040  an object and its related objects in a tree\lang1033  view\lang1040 . In its basic form, the component can be used to inspect and edit any object with published properties. The explorer can be customized for more application specific use by adding various event handlers.
\par \fs10 
\par \cf2\fs18\{bmc PrimerExplorer.gif\}
\par \cf3\fs10 
\par \fs18 InstantObjects Primer uses an instance of TInstantExplorer to explore the details of the currently selected contact in the contact grid. This explorer can be turned on and off via a button in the toolbar.
\par 
\par }
590
Scribble590
Primer Demo: Connection Manager
Primer Demo,Connection Manager;


primerdemo:000130
Done



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0\deflang1040{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\b\f0\fs24 Primer Demo: Connection Manager\fs26 
\par \cf1\b0\strike\f1\fs16 Learning the Primer Demo\cf2\strike0\{linkID=460>main\}\{keepn\}\cf0\fs20 
\par \cf3\f0\fs18 If you want the end-user of your application to be able to manage connections to databases, the  \cf1\strike TInstantConnectionManager\cf2\strike0\{linkID=3520>main\}\cf3  component and the TInstantConnectionManagerForm will provide your application with the necessary tools. The component wraps a dialog in which the user can define and manage connections to various databases.
\par 
\par InstantObjects Primer uses an instance of TInstantConnectionManager to allow you to test the application with the database of your choice. Click the Connection Manager button on the main toolbar or press Shift+Ctrl+C to open the Connection Manager.
\par }
1000
Scribble1000
EInstantAccessError
EInstantAccessError;


classessymbol:000010
Imported
main

EInstantAccessError;EInstantAccessError_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantAccessError \cf1\b0\fs16  
\par \pard\sb25\tx1435\tx2875\tx4315\cf2\ul Hierarchy\cf3\ulnone\{linkID=1030\}\cf1\tab\cf2\ul See Also\cf3\ulnone\{linkID=1010\}\cf1\tab\cf2\strike Example 1\cf3\strike0\{linkID=1020>example\}\cf1\tab\cf2\strike Unit: InstantPersistence\cf3\strike0\{linkID=13050>main\}\{keepn\}\cf1 
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 The exception class for access errors.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 EInstantAccessError = \b class\b0 (\cf2\strike EInstantError\cf3\strike0\{linkID=1350>main\}\cf1 )
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 EInstantAccessError is raised when an illegal conversion is attempted. Most commonly EInstantAccessError is encountered when using the properties of a \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1  descendant to access the data the attribute represents as a non-compatible type.
\par 
\par }
1010
Scribble1010





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \pard\li60\sb25\sa25\cf2\strike EInstantConversionError\cf3\strike0\{linkID=1230>main\}\cf1 
\par \pard\li95\sb25\sa25\cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1 
\par }
1020
Scribble1020
EInstantAccessError, Example 1
EInstantAccessError,Example 1;



Imported
example


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \cf2\strike EInstantAccessError\cf3\strike0\{linkID=1000>main\}\{keepn\}\cf1 
\par \pard\keep\b\f1\fs18 function \b0 DateTimeToBoolean(DateTime: \cf2\strike TInstantDateTime\cf3\strike0\{linkID=5670>main\}\cf1 ): Boolean;
\par \b begin\b0 
\par   Result := DateTime.AsBoolean;
\par \b end\b0 ;
\par 
\par }
1030
Scribble1030





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 Exception
\par \pard\li95\tx355\tab |
\par \cf2\strike EInstantError\cf3\strike0\{linkID=1350>main\}\cf1 
\par \tab |
\par \cf2\strike EInstantAccessError\cf3\strike0\{linkID=1000>main\}\cf1 
\par 
\par }
1040
Scribble1040





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantAccessError Fields\cf1\b0\fs16  
\par \cf2\strike EInstantAccessError\cf3\strike0\{linkID=1000>main\}\{keepn\}\cf1 
\par 
\par }
1050
Scribble1050
 




Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantAccessError Properties \cf1\b0\fs16 
\par \cf2\strike EInstantAccessError\cf3\strike0\{linkID=1000>main\}\cf1\tab\cf2\ul Legend\cf3\ulnone\{link\lang1033\f1 ID\lang1040\f0 =\lang1033\f1 1060\lang1040\f0\}\{keepn\}\cf1 
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\cf3\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\}\cf1  \cf2\strike OriginalException\cf3\strike0\{linkID=1450>main\}\cf1 
\par 
\par }
1060
Scribble1060





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\}\cf2  read only
\par 
\par }
1070
Scribble1070





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 EInstantAccessError Events \cf1\b0\fs16 
\par \cf2\strike EInstantAccessError\cf3\strike0\{linkID=1000>main\}\{keepn\}\cf1 
\par 
\par }
1080
Scribble1080





Imported



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantAccessError Methods \cf1\b0\fs16 
\par \cf2\strike EInstantAccessError\cf3\strike0\{linkID=1000>main\}\cf1\tab\cf2\ul Legend\cf3\ulnone\{link\lang1033\f1 ID\lang1040\f0 =\lang1033\f1 1090\lang1040\f0\}\{keepn\}\cf1 
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\cf3\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\}\cf1  \cf2\strike CreateRes\cf3\strike0\{linkID=1460>main\}\cf1 
\par \cf3\{bmct bm0.BMP\}\{bmct bm0.BMP\}\cf1  \cf2\strike CreateResFmt\cf3\strike0\{linkID=1470>main\}\cf1 
\par \cf3\{bmct bm0.BMP\}\{bmct bm2.BMP\}\cf1  \cf2\strike Destroy\cf3\strike0\{linkID=1480>main\}\cf1 
\par 
\par }
1090
Scribble1090





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\}\cf2  virtual
\par 
\par }
1100
Scribble1100





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx2840\lang1040\b\f0\fs24 EInstantAccessError Members \cf1\b0\fs16 
\par \pard\sb25\cf2\strike EInstantAccessError\cf3\strike0\{linkID=1000>main\}\cf1\tab\cf2\ul Legend\cf3\ulnone\{linkID=1110\}\f1\{keepn\}\cf1\f0 
\par \pard\sb25\tx355 
\par }
1110
Scribble1110





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\}\cf2  virtual
\par \cf1\{bmct bm1.BMP\}\cf2  read only
\par 
\par }
1120
Scribble1120
EInstantConflict
EInstantConflict;


classessymbol:000020
Imported
main

EInstantConflict;EInstantConflict_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantConflict\cf1\b0\fs16  
\par \pard\sb25\tx1440\tx2840\cf2\ul Hierarchy\cf3\ulnone\{linkID=1140\}\cf1\tab\cf2\strike Example 1\cf3\strike0\{linkID=1130>example\}\cf1\tab\cf2\strike Unit: InstantPersistence\cf3\strike0\{linkID=13050>main\}\{keepn\}\cf1 
\par \pard\sb25\sa85\tx1435\tx2875\fs18 The exception class for conflict errors.
\par \pard\sb25\sa25\tx1435\tx2875\f1 EInstantConflict = \b class\b0 (\cf2\strike EInstantError\cf3\strike0\{linkID=1350>main\}\cf1 )
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 EInstantConflict is raised as a consequence of conflicting concurrent updates of an object. EInstantConflict occurs normally only in multi-user environments.
\par 
\par }
1130
Scribble1130
EInstantConflict, Example 1
EInstantConflict,Example 1;



Imported
example


FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \cf2\strike EInstantConflict\cf3\strike0\{linkID=1020>main\}\{keepn\}\cf1 
\par \fs18 
\par \pard\tx3240\ul\b User 1\tab User 2\f1                                              \f0 
\par \ulnone\b0 Retrieve Foo\tab Retrieve Foo
\par Modify Foo\tab 
\par Store Foo\tab Modify Foo
\par \f1\tab\f0 Store Foo <---- User 2 gets an EInstantConflict
\par }
1140
Scribble1140





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par \tab |
\par \strike EInstantConflict\strike0\{linkID=1120>main\}
\par 
\par }
1150
Scribble1150





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantConflict Fields \cf1\b0\fs16  
\par \strike EInstantConflict\strike0\{linkID=1120>main\}\{keepn\}
\par 
\par }
1160
Scribble1160





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantConflict Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantConflict\strike0\{linkID=1120>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1170\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1170
Scribble1170





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1180
Scribble1180





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 EInstantConflict Events \cf1\b0\fs16 
\par \strike EInstantConflict\strike0\{linkID=1120>main\}\cf0\{keepn\}\cf1 
\par 
\par }
1190
Scribble1190





Imported



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantConflict Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantConflict\strike0\{linkID=1120>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1200\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1200
Scribble1200





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1210
Scribble1210





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx2820\lang1040\b\f0\fs24 EInstantConflict Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantConflict\strike0\{linkID=1120>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1220\}\cf0\{keepn\}\cf1 
\par \pard\sb25\tx355 
\par }
1220
Scribble1220





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1230
Scribble1230
EInstantConversionError
EInstantConversionError;


classessymbol:000030
Imported
main

EInstantConversionError;EInstantConversionError_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantConversionError \cf1\b0\fs16 
\par \pard\sb25\tx1435\tx2875\tx4315\cf2\ul Hierarchy\cf3\ulnone\{linkID=1260\}\cf1\tab\cf2\ul See Also\cf3\ulnone\{linkID=1240\}\cf1\tab\cf2\strike Example 1\cf3\strike0\{linkID=1250>example\}\cf1\tab\cf2\strike Unit: InstantClasses\cf3\strike0\{linkID=12820>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 The exception class for conversion errors.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 EInstantConversionError = \b class\b0 (\cf2\strike EInstantError\cf3\strike0\{linkID=1350>main\}\cf1 )
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 EInstantConversionError is raised when a conversion is unsuccessful. Most commonly \cf2\strike EInstantAccessError\cf3\strike0\{linkID=1000>main\}\cf1  is encountered when using the properties of a \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1  descendant to access the data the attribute represents and the conversion of the data is .
\par 
\par }
1240
Scribble1240





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike EInstantAccessError\strike0\{linkID=1000>main\}
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par }
1250
Scribble1250
EInstantConversionError, Example 1
EInstantConversionError,Example 1;



Imported
example


FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \cf2\strike EInstantConversionError\cf3\strike0\{linkID=1230>main\}\cf1\{keepn\}
\par \pard\keep\f1\fs18 procedure StringToDateTime(const S: string; DateTime: \strike TInstantDateTime\strike0\{linkID=5670>main\});
\par begin
\par   DateTime.AsString := S;
\par end;
\par 
\par StringToDateTime('InstantObjects', SomeDateTime)
\par 
\par }
1260
Scribble1260





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par \tab |
\par \strike EInstantConversionError\strike0\{linkID=1230>main\}
\par 
\par }
1270
Scribble1270





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantConversionError Fields \cf1\b0\fs16  
\par \strike EInstantConversionError\strike0\{linkID=1230>main\}\{keepn\}
\par 
\par }
1280
Scribble1280





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantConversionError Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantConversionError\strike0\{linkID=1230>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1290\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1290
Scribble1290





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1300
Scribble1300





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 EInstantConversionError Events \cf1\b0\fs16 
\par \strike EInstantConversionError\strike0\{linkID=1230>main\}\cf0\{keepn\}\cf1 
\par 
\par }
1310
Scribble1310





Imported



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantConversionError Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantConversionError\strike0\{linkID=1230>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1320\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1320
Scribble1320





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1330
Scribble1330





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx2840\lang1040\b\f0\fs24 EInstantConversionError Members \cf1\b0\fs16 
\par \pard\sb25\tx355\strike EInstantConversionError\strike0\{linkID=1230>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1340\}\cf0\{keepn\}\cf1 
\par 
\par }
1340
Scribble1340





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1350
Scribble1350
EInstantError
EInstantError;


classessymbol:000040
Imported
main

EInstantError;EInstantError_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantError \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5700\cf2\ul Hierarchy\cf3\ulnone\{linkID=1360\}\cf1\tab\cf2\strike Members\cf3\strike0\{linkID=1430>nav\}\cf1\tab\cf2\strike Properties\cf3\strike0\{linkID=1380>nav\}\cf1\tab\cf2\strike Methods\cf3\strike0\{linkID=1410>nav\}\cf1\tab\cf2\strike Unit: InstantClasses\cf3\strike0\{linkID=12820>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 The common ancestor of exception classes.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 EInstantError = \b class\b0 (Exception)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 EInstantError implements the basic functionality of exception classes. This includes among others the ability to iterate backwards through the chain of causing exceptions.
\par 
\par }
1360
Scribble1360





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par 
\par }
1370
Scribble1370





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantError Fields \cf1\b0\fs16  
\par \strike EInstantError\strike0\{linkID=1350>main\}\{keepn\}
\par 
\par }
1380
Scribble1380





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantError Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantError\strike0\{linkID=1350>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1390\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1390
Scribble1390





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1400
Scribble1400





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 EInstantError Events \cf1\b0\fs16 
\par \strike EInstantError\strike0\{linkID=1350>main\}\cf0\{keepn\}\cf1 
\par 
\par }
1410
Scribble1410





Imported



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantError Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantError\strike0\{linkID=1350>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1420\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1420
Scribble1420





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1430
Scribble1430





Imported



FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantError Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantError\strike0\{linkID=1350>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1440\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1440
Scribble1440





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1450
Scribble1450
EInstantError.OriginalException
EInstantError,OriginalException;OriginalException;OriginalException,EInstantError;



Imported
main

EInstantError_OriginalException;OriginalException;OriginalException_Property
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantError.OriginalException \cf1\b0\fs16 
\par \cf2\strike EInstantError\cf3\strike0\{linkID=1350>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\fs18 Contains the original exception causing the \strike EInstantError\strike0\{linkID=1350>main\} exception.
\par \pard\sb25\sa25\b\f1 property\b0  OriginalException: TObject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 If assigned, OriginalException contains a reference to the causing exception. This enables iteration backwards through a chain of \strike EInstantError\strike0\{linkID=1350>main\} instances to the origin of the error. OriginalException is declared as a TObject, which implies that it is not necessarily an \strike EInstantError\strike0\{linkID=1350>main\} descendant, but may be any exception type.
\par 
\par }
1460
Scribble1460
EInstantError.CreateRes
CreateRes;CreateRes,EInstantError;EInstantError,CreateRes;



Imported
main

CreateRes;CreateRes_Method;EInstantError_CreateRes
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantError.CreateRes \cf1\b0\fs16 
\par \cf2\strike EInstantError\cf3\strike0\{linkID=1350>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\fs18 Creates an exception instance with a message loaded from the applications resources.
\par \pard\sb25\sa25\b\f1 constructor\b0  CreateRes(ResStringRec: PResStringRec; E: TObject);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use CreateRes to create an exception instance with a message loaded from the applications resources. Using resourcestrings the address of the resourcestring is passed as the ResStringRec argument.
\par 
\par }
1470
Scribble1470
EInstantError.CreateResFmt
CreateResFmt;CreateResFmt,EInstantError;EInstantError,CreateResFmt;



Imported
main

CreateResFmt;CreateResFmt_Method;EInstantError_CreateResFmt
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantError.CreateResFmt \cf1\b0\fs16 
\par \cf2\strike EInstantError\cf3\strike0\{linkID=1350>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\fs18 Creates an exception instance with a formatted message loaded from the applications resources.
\par \pard\sb25\sa25\b\f1 constructor\b0  CreateResFmt(ResStringRec: PResStringRec; \b const\b0  Args: \b array\b0  \b of\b0  \b const\b0 ; E: TObject);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use \strike CreateRes\strike0\{linkID=1460>main\} to create an exception instance with a formatted message loaded from the applications resources. Using resourcestrings, the address of the resourcestring is passed as the ResStringRec argument. The Args argument is a constant array containing values to be inserted into the formatted resourcestring.
\par 
\par }
1480
Scribble1480
EInstantError.Destroy
Destroy;Destroy,EInstantError;EInstantError,Destroy;



Imported
main

Destroy;Destroy_Method;EInstantError_Destroy
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantError.Destroy \cf1\b0\fs16 
\par \cf2\strike EInstantError\cf3\strike0\{linkID=1350>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\fs18 Destroys the exception instance.
\par \pard\sb25\sa25\b\f1 destructor\b0  Destroy; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Destroys the exception instance and if assigned also the original exception causing the \strike EInstantError\strike0\{linkID=1350>main\} exception.
\par 
\par }
1490
Scribble1490
EInstantKeyViolation
EInstantKeyViolation;


classessymbol:000050
Imported
main

EInstantKeyViolation;EInstantKeyViolation_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantKeyViolation \cf1\b0\fs16 
\par \pard\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=1510\}\tab\ul See Also\ulnone\{linkID=1500\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 The exception class for key violations.
\par \pard\sb25\sa25\tx1435\tx2875\f1 EInstantKeyViolation = \b class\b0 (\strike EInstantConflict\strike0\{linkID=1120>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 EInstantKeyviolation is raised when a key violation is encountered. Nothing is implied regarding the cause of an EInstantKeyViolation, but most commonly it is a consequence of trying to store an object of a specific class with the same Id as an existing object.
\par 
\par }
1500
Scribble1500





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Store\strike0\{linkID=9030>main\}
\par }
1510
Scribble1510





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par \tab |
\par \strike EInstantConflict\strike0\{linkID=1120>main\}
\par \tab |
\par \strike EInstantKeyViolation\strike0\{linkID=1490>main\}
\par 
\par }
1520
Scribble1520





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantKeyViolation Fields \cf1\b0\fs16  
\par \strike EInstantKeyViolation\strike0\{linkID=1490>main\}\{keepn\}
\par 
\par }
1530
Scribble1530





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantKeyViolation Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantKeyViolation\strike0\{linkID=1490>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1540\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par \cf2\lang1033\ul\f1 
\par }
1540
Scribble1540





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1550
Scribble1550





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 EInstantKeyViolation Events \cf1\b0\fs16 
\par \strike EInstantKeyViolation\strike0\{linkID=1490>main\}\cf0\{keepn\}\cf1 
\par 
\par }
1560
Scribble1560





Imported



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantKeyViolation Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantKeyViolation\strike0\{linkID=1490>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1570\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1570
Scribble1570





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1580
Scribble1580





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx2840\lang1040\b\f0\fs24 EInstantKeyViolation Members \cf1\b0\fs16 
\par \strike EInstantKeyViolation\strike0\{linkID=1490>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1590\}\cf0\{keepn\}\cf1 
\par \pard\sb25\tx355 
\par }
1590
Scribble1590





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1600
Scribble1600
EInstantRangeError
EInstantRangeError;


classessymbol:000060
Imported
main

EInstantRangeError;EInstantRangeError_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantRangeError \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul Hierarchy\ulnone\{linkID=1610\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 The exception class for too large or too small integer values.
\par \pard\sb25\sa25\tx1435\f1 EInstantRangeError = \b class\b0 (\strike EInstantError\strike0\{linkID=1350>main\})
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 EInstantRangeError is raised when an integer value exceeds the range it is assigned to. Most commonly EInstantErrors are encountered when iterating beyond the bounds of an array.
\par 
\par }
1610
Scribble1610





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par \tab |
\par \strike EInstantRangeError\strike0\{linkID=1600>main\}
\par 
\par }
1620
Scribble1620





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantRangeError Fields \cf1\b0\fs16  
\par \strike EInstantRangeError\strike0\{linkID=1600>main\}\{keepn\}
\par 
\par }
1630
Scribble1630





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantRangeError Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantRangeError\strike0\{linkID=1600>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1640\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1640
Scribble1640





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1650
Scribble1650





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 EInstantRangeError Events \cf1\b0\fs16 
\par \strike EInstantRangeError\strike0\{linkID=1600>main\}\cf0\{keepn\}\cf1 
\par 
\par }
1660
Scribble1660





Imported



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantRangeError Methods \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike EInstantRangeError\strike0\{linkID=1600>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1670\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1670
Scribble1670





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1680
Scribble1680





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx2840\lang1040\b\f0\fs24 EInstantRangeError Members \cf1\b0\fs16 
\par \pard\sb25\tx355\strike EInstantRangeError\strike0\{linkID=1600>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1690\}\cf0\{keepn\}\cf1 
\par 
\par }
1690
Scribble1690





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1700
Scribble1700
EInstantStreamError
EInstantStreamError;


classessymbol:000070
Imported
main

EInstantStreamError;EInstantStreamError_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantStreamError \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul Hierarchy\ulnone\{linkID=1710\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 The exception class for streaming errors.
\par \pard\sb25\sa25\tx1435\f1 EInstantStreamError = \b class\b0 (\strike EInstantError\strike0\{linkID=1350>main\})
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 EInstantStreamError is raised when a streaming error is encountered. An EInstantStream error indicates that the stream doesn't match the semantics of the streaming mechanism.
\par 
\par }
1710
Scribble1710





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par \tab |
\par \strike EInstantStreamError\strike0\{linkID=1700>main\}
\par 
\par }
1720
Scribble1720





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantStreamError Fields \cf1\b0\fs16 
\par \strike EInstantStreamError\strike0\{linkID=1700>main\}\{keepn\}
\par 
\par }
1730
Scribble1730





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantStreamError Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantStreamError\strike0\{linkID=1700>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1740\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1740
Scribble1740





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1750
Scribble1750





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 EInstantStreamError Events \cf1\b0\fs16 
\par \strike EInstantStreamError\strike0\{linkID=1700>main\}\cf0\{keepn\}\cf1 
\par 
\par }
1760
Scribble1760





Imported



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantStreamError Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantStreamError\strike0\{linkID=1700>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1770\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1770
Scribble1770





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1780
Scribble1780





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantStreamError Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantStreamError\strike0\{linkID=1700>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1790\}\cf0\{keepn\}\cf1 
\par \pard\sb25\tx355 
\par }
1790
Scribble1790





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1800
Scribble1800
EInstantValidationError
EInstantValidationError;


classessymbol:000080
Imported
main

EInstantValidationError;EInstantValidationError_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 EInstantValidationError \cf1\b0\fs16 
\par \pard\sb25\tx1435\tx2875\ul Hierarchy\ulnone\{linkID=1820\}\tab\ul See Also\ulnone\{linkID=1810\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 The exception class for validation errors.
\par \pard\sb25\sa25\tx1435\tx2875\f1 EInstantValidationError = \b class\b0 (\strike EInstantError\strike0\{linkID=1350>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 EInstantValidationError is raised when an invalid value is encountered. Most commonly it is a consequence of setting the data of a \strike TInstantAttribute\strike0\{linkID=2170>main\} descendant to a non-valid value.
\par 
\par }
1810
Scribble1810





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par }
1820
Scribble1820





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 Exception
\par \pard\li95\tx355\tab |
\par \strike EInstantError\strike0\{linkID=1350>main\}
\par \tab |
\par \strike EInstantValidationError\strike0\{linkID=1800>main\}
\par 
\par }
1830
Scribble1830





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantValidationError Fields \cf1\b0\fs16 
\par \strike EInstantValidationError\strike0\{linkID=1800>main\}\{keepn\}
\par 
\par }
1840
Scribble1840





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantValidationError Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike EInstantValidationError\strike0\{linkID=1800>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1850\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OriginalException\strike0\{linkID=1450>main\}
\par 
\par }
1850
Scribble1850





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
1860
Scribble1860





Imported



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantValidationError Methods \cf1\b0\fs16 
\par \strike EInstantValidationError\strike0\{linkID=1800>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1870\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 EInstantError
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateRes\strike0\{linkID=1460>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateResFmt\strike0\{linkID=1470>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Destroy\strike0\{linkID=1480>main\}
\par 
\par }
1870
Scribble1870





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par 
\par }
1880
Scribble1880





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 EInstantValidationError Members \cf1\b0\fs16 
\par \strike EInstantValidationError\strike0\{linkID=1800>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1890\}\cf0\{keepn\}\cf1 
\par 
\par }
1890
Scribble1890





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm2.BMP\} virtual
\par \{bmct bm1.BMP\} read only
\par 
\par }
1900
Scribble1900
TInstantADOConnector
TInstantADOConnector;


classessymbol:000090
Imported
main

TInstantADOConnector;TInstantADOConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADOConnector \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5700\ul Hierarchy\ulnone\{linkID=1910\}\tab\strike Members\strike0\{linkID=1980>nav\}\tab\strike Properties\strike0\{linkID=1930>nav\}\tab\strike Methods\strike0\{linkID=1970>nav\}\tab\strike Unit: InstantADO\strike0\{linkID=12710>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\strike\f1 TInstantConnectorClass\strike0\{linkID=12210>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \strike TInstantConnector\strike0\{linkID=3770>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting to and disconnecting from a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
1910
Scribble1910





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3770>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9960>main\}
\par \tab |
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3400>main\}
\par \tab |
\par \strike TInstantADOConnector\strike0\{linkID=1900>main\}
\par 
\par }
1920
Scribble1920





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADOConnector Fields \cf1\b0\fs16 
\par \strike TInstantADOConnector\strike0\{linkID=1900>main\}\{keepn\} 
\par 
\par }
1930
Scribble1930





Imported



FALSE
30
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADOConnector Properties \cf1\b0\fs16 
\par \strike TInstantADOConnector\strike0\{linkID=1900>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1940\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantADOConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike CanTransaction\strike0\{linkID=2000>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=2010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ProviderType\strike0\{linkID=2020>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Connection\strike0\{linkID=3500>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=10060>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3870>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3890>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3910>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4000>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4080>main\}
\par 
\par }
1940
Scribble1940





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
1950
Scribble1950





Imported



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADOConnector Events \cf1\b0\fs16 
\par \strike TInstantADOConnector\strike0\{linkID=1900>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1960\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=10070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=10090>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4290>main\}
\par 
\par }
1960
Scribble1960





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
1970
Scribble1970





Imported



FALSE
23
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantADOConnector Methods \cf1\b0\fs16 
\par \cf2\strike TInstantADOConnector\cf3\strike0\{linkID=1900>main\}\cf1\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantADOConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CompactDatabase\strike0\{linkID=2030>main\}
\par \pard\sb55\sa55\b TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=3510>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4130>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4150>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4270>main\}
\par 
\par }
1980
Scribble1980





Imported



FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADOConnector Members \cf1\b0\fs16 
\par \strike TInstantADOConnector\strike0\{linkID=1900>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=1990\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike CanTransaction\strike0\{linkID=2000>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=2010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ProviderType\strike0\{linkID=2020>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CompactDatabase\strike0\{linkID=2030>main\}
\par 
\par }
1990
Scribble1990





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2000
Scribble2000
TInstantADOConnector.CanTransaction
CanTransaction;CanTransaction,TInstantADOConnector;TInstantADOConnector,CanTransaction;



Imported
main

CanTransaction;CanTransaction_Property;TInstantADOConnector_CanTransaction
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADOConnector.CanTransaction \cf1\b0\fs16 
\par \cf2\strike TInstantADOConnector\cf3\strike0\{linkID=1900>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\fs18 Determines if the associated database engine supports transactions.
\par \pard\sb25\sa25\b\f1 property\b0  CanTransaction: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use CanTransaction to determine if the database engine to which the connector is associated through its connection property supports transactions.
\par 
\par }
2010
Scribble2010
TInstantADOConnector.Connection
Connection;Connection,TInstantADOConnector;TInstantADOConnector,Connection;



Imported
main

Connection;Connection_Property;TInstantADOConnector_Connection
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADOConnector.Connection \cf1\b0\fs16 
\par \cf2\strike TInstantADOConnector\cf3\strike0\{linkID=1900>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies the connection used by the connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Connection: TADOConnection;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Connection property to specify the connection used by the connector component.
\par 
\par }
2020
Scribble2020
TInstantADOConnector.ProviderType
ProviderType;ProviderType,TInstantADOConnector;TInstantADOConnector,ProviderType;



Imported
main

ProviderType;ProviderType_Property;TInstantADOConnector_ProviderType
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADOConnector.ProviderType \cf1\b0\fs16 
\par \cf2\strike TInstantADOConnector\cf3\strike0\{linkID=1900>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies the provider type
\par \pard\sb25\sa25\b\f1 property\b0  ProviderType: \strike TInstantADOProviderType\strike0\{linkID=12110>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 ProviderType specifies the type of the OLE DB Provider. Specifies the type of ADO connection, which the connector uses to establish its connection to the underlying database
\par Summary The type of the provider
\par 
\par }
2030
Scribble2030
TInstantADOConnector.CompactDatabase
CompactDatabase;CompactDatabase,TInstantADOConnector;TInstantADOConnector,CompactDatabase;



Imported
main

CompactDatabase;CompactDatabase_Method;TInstantADOConnector_CompactDatabase
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADOConnector.CompactDatabase \cf1\b0\fs16 
\par \cf2\strike TInstantADOConnector\cf3\strike0\{linkID=1900>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\fs18 Compacts a database.
\par \pard\sb25\sa25\b\f1 procedure\b0  CompactDatabase;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 As you change data in a database, the database file can become fragmented and use more disk space than is necessary. Periodically, you can use the CompactDatabase method to defragment the database file. The compacted database is usually smaller and often runs faster. The function is only effective for the Microsoft Jet OLEDB Provider.
\par 
\par }
2040
Scribble2040
TInstantADSConnector
TInstantADSConnector;


classessymbol:000100
Imported
main

TInstantADSConnector;TInstantADSConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADSConnector \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4280\tx5700\ul Hierarchy\ulnone\{linkID=2050\}\tab\strike Members\strike0\{linkID=2120>nav\}\tab\strike Properties\strike0\{linkID=2070>nav\}\tab\strike Methods\strike0\{linkID=2110>nav\}\tab\strike Unit: InstantADS\strike0\{linkID=12740>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\strike\f1 TInstantConnectorClass\strike0\{linkID=12210>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \strike TInstantConnector\strike0\{linkID=3770>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
2050
Scribble2050





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3770>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9960>main\}
\par \tab |
\par \strike TInstantADSConnector\strike0\{linkID=2040>main\}
\par 
\par }
2060
Scribble2060





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADSConnector Fields \cf1\b0\fs16  
\par \strike TInstantADSConnector\strike0\{linkID=2040>main\}\{keepn\}
\par 
\par }
2070
Scribble2070





Imported



FALSE
26
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADSConnector Properties \cf1\b0\fs16 
\par \strike TInstantADSConnector\strike0\{linkID=2040>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2080\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantADSConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=2140>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=10060>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3870>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3890>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3910>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4000>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4080>main\}
\par 
\par }
2080
Scribble2080





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2090
Scribble2090





Imported



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantADSConnector Events \cf1\b0\fs16 
\par \strike TInstantADSConnector\strike0\{linkID=2040>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2100\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=10070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=10090>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4290>main\}
\par 
\par }
2100
Scribble2100





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
2110
Scribble2110





Imported



FALSE
22
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantADSConnector Methods \cf1\b0\fs16 
\par \cf2\strike TInstantADSConnector\cf3\strike0\{linkID=2040>main\}\cf1\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantADSConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AllowTransactions\strike0\{linkID=2150>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=2160>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4130>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4150>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4270>main\}
\par 
\par }
2120
Scribble2120





Imported



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADSConnector Members \cf1\b0\fs16 
\par \strike TInstantADSConnector\strike0\{linkID=2040>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2130\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=2140>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AllowTransactions\strike0\{linkID=2150>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=2160>main\}
\par 
\par }
2130
Scribble2130





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2140
Scribble2140
TInstantADSConnector.Connection
Connection;Connection,TInstantADSConnector;TInstantADSConnector,Connection;



Imported
main

Connection;Connection_Property;TInstantADSConnector_Connection
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADSConnector.Connection \cf1\b0\fs16 
\par \cf2\strike TInstantADSConnector\cf3\strike0\{linkID=2040>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies the connection used by the connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Connection: TADSConnection;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Connection property to specify the connection used by the connector component.
\par 
\par }
2150
Scribble2150
TInstantADSConnector.AllowTransactions
AllowTransactions;AllowTransactions,TInstantADSConnector;TInstantADSConnector,AllowTransactions;



Imported
main

AllowTransactions;AllowTransactions_Method;TInstantADSConnector_AllowTransactions
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADSConnector.AllowTransactions \cf1\b0\fs16 
\par \cf2\strike TInstantADSConnector\cf3\strike0\{linkID=2040>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\fs18 Determines if transactions are allowed.
\par \pard\sb25\sa25\b\f1 function\b0  AllowTransactions: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use AllowTransactions to determine if the currently logged in user on the Advantage Database Server is allowed to use transactions.
\par 
\par }
2160
Scribble2160
TInstantADSConnector.HasConnection
HasConnection;HasConnection,TInstantADSConnector;TInstantADSConnector,HasConnection;



Imported
main

HasConnection;HasConnection_Method;TInstantADSConnector_HasConnection
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADSConnector.HasConnection \cf1\b0\fs16 
\par \cf2\strike TInstantADSConnector\cf3\strike0\{linkID=2040>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\fs18 Determines if a connection is associated with the connector.
\par \pard\sb25\sa25\b\f1 function\b0  HasConnection: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasConnection to determine if the \strike Connection\strike0\{linkID=2140>main\} property of the connector is assigned. If a connection component has been associated with the connector, HasConnection returns True. Otherwise HasConnection returns False.
\par 
\par }
2170
Scribble2170
TInstantAttribute
TInstantAttribute;PInstantAttribute;


classessymbol:000110
Imported
main

TInstantAttribute;TInstantAttribute_Object
FALSE
26
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4280\tx5680\ul Hierarchy\ulnone\{linkID=2180\}\tab\strike Members\strike0\{linkID=2250>nav\}\tab\strike Properties\strike0\{linkID=2200>nav\}\tab\strike Methods\strike0\{linkID=2230>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 The common ancestor of all the attribute classes.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantAttribute = \b class\b0 (\strike TInstantStreamable\strike0\{linkID=10830>main\})
\par PInstantAttribute = ^TInstantAttribute;
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantAttribute is the ancestor of all attribute classes. It introduces common properties and methods that mainly fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Convert the value of the attribute to another data type.
\par \{bmct bm3.BMP\}\tab Validate the value of the attribute.
\par \{bmct bm3.BMP\}\tab Define how the value of the attribute is displayed or edited.
\par \pard\sb25\sa25\tx495 Although no presumptions are made about the use of TInstantAttribute descendants, their main purpose is to serve as logical place holders for attributes of classes descending from \strike TInstantObject\strike0\{linkID=7390>main\}. Attributes may have metadata. The metadata contains the definition of the attribute such as the attributes name, data type, and size. Furthermore the metadata may specify features of the attribute such as masks and default value. If the attribute is owned by an instance of a \strike TInstantObject\strike0\{linkID=7390>main\} descendant, it has been created on the basis of attribute metadata specified as part of the class of the owning instance. TInstantAttribute descendants allocate memory to hold the value of the attribute they represent.
\par 
\par TInstantAttribute is abstract; so do not create instances of this class. Instead refer to the following concrete descendant classes: 
\par \pard 
\par \pard\tx4800\b Simple attribute classes\lang1033\f2\tab Relational\lang1040\f0  attribute classes
\par \b0\strike TInstantInteger\strike0\{linkID=7070>main\}\lang1033\f2\tab\lang1040\strike\f0 TInstantPart\strike0\{linkID=9250>main\}\b 
\par \b0\strike TInstantFloat\strike0\{linkID=6840>main\}\lang1033\f2\tab\lang1040\strike\f0 TInstantReference\strike0\{linkID=9520>main\}
\par \strike TInstant\lang1033\f2 Currency\lang1040\strike0\f0\{linkID=4670>main\}\lang1033\f2\tab\lang1040\strike\f0 TInstantParts\strike0\{linkID=9390>main\}\b 
\par \b0\strike TInstantBoolean\strike0\{linkID=2860>main\}\lang1033\f2\tab\lang1040\strike\f0 TInstantReferences\strike0\{linkID=9780>main\}\b 
\par \b0\strike TInstantString\strike0\{linkID=11000>main\}\lang1033\f2\tab\lang1040\b\f0 
\par \b0\strike TInstantDateTime\strike0\{linkID=5670>main\}
\par \strike TInstantBlob\strike0\{linkID=2680>main\}
\par \strike TInstantMemo\strike0\{linkID=7190>main\}
\par }
2180
Scribble2180





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par 
\par }
2190
Scribble2190





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantAttribute Fields \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}\{keepn\} 
\par 
\par }
2200
Scribble2200





Imported



FALSE
25
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantAttribute Properties \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2210\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
2210
Scribble2210





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
2220
Scribble2220





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantAttribute Events \cf1\b0\fs16 
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}\cf0\{keepn\}\cf1 
\par 
\par }
2230
Scribble2230





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantAttribute Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantAttribute\strike0\{linkID=2170>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2240\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
2240
Scribble2240





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
2250
Scribble2250





Imported



FALSE
32
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantAttribute Members \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantAttribute\strike0\{linkID=2170>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2260\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par 
\par }
2260
Scribble2260





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
2270
Scribble2270
TInstantAttribute.AsBoolean
AsBoolean;AsBoolean,TInstantAttribute;TInstantAttribute,AsBoolean;



Imported
main

AsBoolean;AsBoolean_Property;TInstantAttribute_AsBoolean
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsBoolean \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a Boolean.
\par \pard\sb25\sa25\b\f1 property\b0  AsBoolean: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsBoolean provides the ability to specify the value of the attribute as a Boolean. \strike TInstantAttribute\strike0\{linkID=2170>main\} descendants override the GetAsBoolean and SetAsBoolean methods to perform the actual conversion. If a Boolean is incompatible with the data type of the attribute, AsBoolean raises an exception.
\par 
\par }
2280
Scribble2280
TInstantAttribute.AsCurrency
AsCurrency;AsCurrency,TInstantAttribute;TInstantAttribute,AsCurrency;



Imported
main

AsCurrency;AsCurrency_Property;TInstantAttribute_AsCurrency
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsCurrency \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a Currency.
\par \pard\sb25\sa25\b\f1 property\b0  AsCurrency: Currency;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsCurrency provides the ability to specify the value of the attribute as a Currency. \strike TInstantAttribute\strike0\{linkID=2170>main\} descendants override the GetAsCurrency and SetAsCurrency methods to perform the actual conversion. If a Currency is incompatible with the data type of the attribute, AsCurrency raises an exception.
\par 
\par }
2290
Scribble2290
TInstantAttribute.AsDateTime
AsDateTime;AsDateTime,TInstantAttribute;TInstantAttribute,AsDateTime;



Imported
main

AsDateTime;AsDateTime_Property;TInstantAttribute_AsDateTime
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsDateTime \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a TDateTime.
\par \pard\sb25\sa25\b\f1 property\b0  AsDateTime: TDateTime;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsDateTime provides the ability to specify the value of the attribute as a TDateTime. \strike TInstantAttribute\strike0\{linkID=2170>main\} descendants override the GetAsDateTime and SetAsDateTime methods to perform the actual conversion. If a TDateTime is incompatible with the data type of the attribute, AsDateTime raises an exception.
\par 
\par }
2300
Scribble2300
TInstantAttribute.AsFloat
AsFloat;AsFloat,TInstantAttribute;TInstantAttribute,AsFloat;



Imported
main

AsFloat;AsFloat_Property;TInstantAttribute_AsFloat
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsFloat \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a Double.
\par \pard\sb25\sa25\b\f1 property\b0  AsFloat: Double;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsFloat provides the ability to specify the value of the attribute as a Double. \strike TInstantAttribute\strike0\{linkID=2170>main\} descendants override the GetAsFloat and SetAsFloat methods to perform the actual conversion. If a Double is incompatible with the data type of the attribute, AsFloat raises an exception.
\par 
\par }
2310
Scribble2310
TInstantAttribute.AsInteger
AsInteger;AsInteger,TInstantAttribute;TInstantAttribute,AsInteger;



Imported
main

AsInteger;AsInteger_Property;TInstantAttribute_AsInteger
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsInteger \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as an Integer.
\par \pard\sb25\sa25\b\f1 property\b0  AsInteger: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsInteger provides the ability to specify the value of the attribute as an Integer. \strike TInstantAttribute\strike0\{linkID=2170>main\} descendants override the GetAsInteger and SetAsInteger methods to perform the actual conversion. If an Integer is incompatible with the data type of the attribute, AsInteger raises an exception.
\par 
\par }
2320
Scribble2320
TInstantAttribute.AsObject
AsObject;AsObject,TInstantAttribute;TInstantAttribute,AsObject;



Imported
main

AsObject;AsObject_Property;TInstantAttribute_AsObject
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsObject \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a \strike TInstantObject\strike0\{linkID=7390>main\}.
\par \pard\sb25\sa25\b\f1 property\b0  AsObject: \strike TInstantObject\strike0\{linkID=7390>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsObject provides the ability to specify the value of the attribute as a \strike TInstantObject\strike0\{linkID=7390>main\}. \strike TInstantAttribute\strike0\{linkID=2170>main\} descendants override the GetAsObject and SetAsObject methods to perform the actual conversion. If a \strike TInstantObject\strike0\{linkID=7390>main\} is incompatible with the data type of the attribute, AsObject raises an exception.
\par 
\par }
2330
Scribble2330
TInstantAttribute.AsString
AsString;AsString,TInstantAttribute;TInstantAttribute,AsString;



Imported
main

AsString;AsString_Property;TInstantAttribute_AsString
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsString \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a string.
\par \pard\sb25\sa25\b\f1 property\b0  AsString: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsString provides the ability to specify the value of the attribute as a string. \strike TInstantAttribute\strike0\{linkID=2170>main\} descendants override the GetAsString and SetAsString methods to perform the actual conversion. If a string is incompatible with the data type of the attribute, AsString raises an exception.
\par 
\par }
2340
Scribble2340
TInstantAttribute.AsVariant
AsVariant;AsVariant,TInstantAttribute;TInstantAttribute,AsVariant;



Imported
main

AsVariant;AsVariant_Property;TInstantAttribute_AsVariant
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AsVariant \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as a Variant.
\par \pard\sb25\sa25\b\f1 property\b0  AsVariant: Variant;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 AsVariant provides the ability to specify the value of the attribute as a Variant. \strike TInstantAttribute\strike0\{linkID=2170>main\} descendants override the GetAsVariant and SetAsVariant methods to perform the actual conversion. If a Variant is incompatible with the data type of the attribute, AsVariant raises an exception.
\par 
\par }
2350
Scribble2350
TInstantAttribute.DisplayText
DisplayText;DisplayText,TInstantAttribute;TInstantAttribute,DisplayText;



Imported
main

DisplayText;DisplayText_Property;TInstantAttribute_DisplayText
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.DisplayText \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the attribute as it will be displayed in a data-aware control.
\par \pard\sb25\sa25\b\f1 property\b0  DisplayText: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 DisplayText is a read-only string representation of the value of the attribute as it will be displayed in a data-aware control.
\par 
\par }
2360
Scribble2360
TInstantAttribute.IsChanged
IsChanged;IsChanged,TInstantAttribute;TInstantAttribute,IsChanged;



Imported
main

IsChanged;IsChanged_Property;TInstantAttribute_IsChanged
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.IsChanged \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantAttribute\strike0\{linkID=2170>main\}\tab\ul See Also\ulnone\{linkID=2370\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Specifies is the attribute is changed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsChanged: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 IsChanged specifies if the value of the attribute is changed. If the attribute is owned and the owner has not disabled changes, setting the value of IsChanged to True will generate a change notification to the owner.
\par 
\par }
2370
Scribble2370





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute.Changed\strike0\{linkID=2500>main\}
\par }
2380
Scribble2380
TInstantAttribute.IsDefault
IsDefault;IsDefault,TInstantAttribute;TInstantAttribute,IsDefault;



Imported
main

IsDefault;IsDefault_Property;TInstantAttribute_IsDefault
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.IsDefault \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if the value of the attribute is default.
\par \pard\sb25\sa25\b\f1 property\b0  IsDefault: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 IsDefault determines if the actual value of the attribute corresponds to the default value of the attribute. The attribute is considered to be default if its value corresponds to its initialization value. If the attribute has metadata the comparison is made between the default value specified by the metadata object and the actual value of the attribute. Otherwise the comparison is made between the attributes interpretation of a Null value and the actual value of the attribute. The comparison is not performed by \strike TInstantAttribute\strike0\{linkID=2170>main\}, but by descendant classes, overriding the GetIsDefault method.
\par 
\par }
2390
Scribble2390
TInstantAttribute.IsIndexed
IsIndexed;IsIndexed,TInstantAttribute;TInstantAttribute,IsIndexed;



Imported
main

IsIndexed;IsIndexed_Property;TInstantAttribute_IsIndexed
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.IsIndexed \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantAttribute\strike0\{linkID=2170>main\}\tab\ul See Also\ulnone\{linkID=2400\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Specifies if the attribute is indexed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsIndexed: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The IsIndexed property specifies if the attribute is indexed. The declaration of an indexed attribute is done via the attributes metadata. If the attrribute is indexed, an index is generated for the underlying field in the database when the database is created.
\par 
\par }
2400
Scribble2400





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute.IsRequired\strike0\{linkID=2430>main\}
\par \strike TInstantAttribute.IsMandatory\strike0\{linkID=2410>main\}
\par }
2410
Scribble2410
TInstantAttribute.IsMandatory
IsMandatory;IsMandatory,TInstantAttribute;TInstantAttribute,IsMandatory;



Imported
main

IsMandatory;IsMandatory_Property;TInstantAttribute_IsMandatory
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.IsMandatory \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantAttribute\strike0\{linkID=2170>main\}\tab\ul See Also\ulnone\{linkID=2420\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies if the attribute is mandatory.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsMandatory: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The IsMandatory property specifies if storing or streaming of the attribute is mandatory. The value of IsMandatory will be True if either the attribute is indexed or required. If the attribute is not mandatory, storing and streaming will be omitted if the value of the attribute is the default value.
\par 
\par }
2420
Scribble2420





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute.IsIndexed\strike0\{linkID=2390>main\}
\par \strike TInstantAttribute.IsRequired\strike0\{linkID=2430>main\}
\par }
2430
Scribble2430
TInstantAttribute.IsRequired
IsRequired;IsRequired,TInstantAttribute;TInstantAttribute,IsRequired;



Imported
main

IsRequired;IsRequired_Property;TInstantAttribute_IsRequired
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.IsRequired \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantAttribute\strike0\{linkID=2170>main\}\tab\ul See Also\ulnone\{linkID=2440\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies if the attribute is required.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsRequired: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The IsRequired property specifies if storing or streaming of the attribute is required under all circumstances. The declaration of an required attribute is done via the attributes metadata.
\par 
\par }
2440
Scribble2440





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute.IsIndexed\strike0\{linkID=2390>main\}
\par \strike TInstantAttribute.IsMandatory\strike0\{linkID=2410>main\}
\par }
2450
Scribble2450
TInstantAttribute.Metadata
Metadata;Metadata,TInstantAttribute;TInstantAttribute,Metadata;



Imported
main

Metadata;Metadata_Property;TInstantAttribute_Metadata
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Metadata \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the metadata object associated with the attribute
\par \pard\sb25\sa25\b\f1 property\b0  Metadata: TInstantAttributeMetadata;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Metadata specifies the metadata object associated with the attribute. If the attribute has no metadata, Metadata returns nil. Caution should be given when setting the metadata object of an attribute since no validation is performed.
\par 
\par }
2460
Scribble2460
TInstantAttribute.Name
Name;Name,TInstantAttribute;TInstantAttribute,Name;



Imported
main

Name;Name_Property;TInstantAttribute_Name
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Name \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the name of the attribute.
\par \pard\sb25\sa25\b\f1 property\b0  \b Name\b0 : \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Name property to determine the name of the attribute.
\par 
\par }
2470
Scribble2470
TInstantAttribute.Owner
Owner;Owner,TInstantAttribute;TInstantAttribute,Owner;



Imported
main

Owner;Owner_Property;TInstantAttribute_Owner
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Owner \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 States the owner of the attribute.
\par \pard\sb25\sa25\b\f1 property\b0  Owner: \strike TInstantObject\strike0\{linkID=7390>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Owner states the owner of the attribute. If the attribute is not owned, Owner returns nil.
\par 
\par }
2480
Scribble2480
TInstantAttribute.Value
TInstantAttribute,Value;Value;Value,TInstantAttribute;



Imported
main

TInstantAttribute_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Value \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of an attribute as a Variant.
\par \pard\sb25\sa25\b\f1 property\b0  Value: Variant;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the attribute as a Variant.
\par 
\par }
2490
Scribble2490
TInstantAttribute.AttributeType
AttributeType;AttributeType,TInstantAttribute;TInstantAttribute,AttributeType;



Imported
main

AttributeType;AttributeType_Method;TInstantAttribute_AttributeType
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.AttributeType \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 States the data type of the attribute
\par \pard\sb25\sa25\b\f1 class\b0  \b function\b0  AttributeType: \strike TInstantAttributeType\strike0\{linkID=12130>main\}; \b virtual\b0 ; \b abstract\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use AttributeType to determine the data type of the attribute.
\par 
\par }
2500
Scribble2500
TInstantAttribute.Changed
Changed;Changed,TInstantAttribute;TInstantAttribute,Changed;



Imported
main

Changed;Changed_Method;TInstantAttribute_Changed
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Changed \cf1\b0\fs16 
\par \pard\sb25\tx1435\cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\tab\ul See Also\ulnone\{linkID=2510\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Marks the attribute as changed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Changed;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Changed marks the attribute as changed by setting its \strike IsChanged\strike0\{linkID=2360>main\} property to True.
\par 
\par }
2510
Scribble2510





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute.IsChanged\strike0\{linkID=2360>main\}
\par }
2520
Scribble2520
TInstantAttribute.Create
Create;Create,TInstantAttribute;TInstantAttribute,Create;



Imported
main

Create;Create_Method;TInstantAttribute_Create
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Create \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Constructor that creates and initializes an attribute object.
\par \pard\sb25\sa25\b\f1 constructor\b0  Create(AOwner: \strike TInstantObject\strike0\{linkID=7390>main\}; AMetadata: TInstantAttributeMetadata); \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The Create constructor creates and initializes an attribute object. If the attribute must refer to an owning object, this object can be specified as the AOwner argument. If the attribute should have metadata, a metadata object can be specified as the AMetadata argument. \strike TInstantAttribute\strike0\{linkID=2170>main\} is abstract; so do not create instances of this class. Instead refer to concrete descendant classes.
\par \pard\fi-195\li195\sb25\sa25\b Note: \b0  The attribute is only destroyed by the owner if the class of the owner has metadata defined for the attribute. Otherwise the attribute should be destroyed manually.
\par 
\par }
2530
Scribble2530
TInstantAttribute.Initialize
Initialize;Initialize,TInstantAttribute;TInstantAttribute,Initialize;



Imported
main

Initialize;Initialize_Method;TInstantAttribute_Initialize
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Initialize \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Initializes the value of the attribute.
\par \pard\sb25\sa25\b\f1 procedure\b0  Initialize; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Initialize to initialize the value of the attribute. If the attribute has metadata, the value of the attribute is set to the default value specified by the metadata object. Otherwise the value is reset to the attributes interpretation of a Null value. Descendants of \strike TInstantAttribute\strike0\{linkID=2170>main\} that override the \strike Reset\strike0\{linkID=2540>main\} method perform the actual initialization.
\par 
\par }
2540
Scribble2540
TInstantAttribute.Reset
Reset;Reset,TInstantAttribute;TInstantAttribute,Reset;



Imported
main

Reset;Reset_Method;TInstantAttribute_Reset
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Reset \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Resets the actual value of the attribute to the initialization value.
\par \pard\sb25\sa25\b\f1 procedure\b0  Reset; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Reset to reset the value of the attribute to its initialization value. Reset calls \strike Initialize\strike0\{linkID=2530>main\} to do the initialization.
\par 
\par }
2550
Scribble2550
TInstantAttribute.Unchanged
TInstantAttribute,Unchanged;Unchanged;Unchanged,TInstantAttribute;



Imported
main

TInstantAttribute_Unchanged;Unchanged;Unchanged_Method
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttribute.Unchanged \cf1\b0\fs16 
\par \cf2\strike TInstantAttribute\cf3\strike0\{linkID=2170>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Marks the attribute as unchanged.
\par \pard\sb25\sa25\b\f1 procedure\b0  Unchanged; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Unchanged marks the attribute as unchanged by setting its \strike IsChanged\strike0\{linkID=2360>main\} property to False. It should normally not be necessary to call Unchanged directly since it is called automatically if an attribute is no longer changed.
\par 
\par }
2560
Scribble2560
TInstantBDEConnector
TInstantBDEConnector;


classessymbol:000120
Imported
main

TInstantBDEConnector;TInstantBDEConnector_Object
FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBDEConnector \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4260\ul Hierarchy\ulnone\{linkID=2570\}\tab\strike Members\strike0\{linkID=2640>nav\}\tab\strike Properties\strike0\{linkID=2590>nav\}\tab\strike Unit: InstantBDE\strike0\{linkID=12760>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\strike\f1 TInstantConnectorClass\strike0\{linkID=12210>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \strike TInstantConnector\strike0\{linkID=3770>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\sb25\sa25\tx300\lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Transaction control
\par \lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Information about the database
\par \lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
2570
Scribble2570





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3770>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9960>main\}
\par \tab |
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3400>main\}
\par \tab |
\par \strike TInstantBDEConnector\strike0\{linkID=2560>main\}
\par 
\par }
2580
Scribble2580





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBDEConnector Fields \cf1\b0\fs16  
\par \strike TInstantBDEConnector\strike0\{linkID=2560>main\}\{keepn\}
\par 
\par }
2590
Scribble2590





Imported



FALSE
29
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBDEConnector Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantBDEConnector\strike0\{linkID=2560>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2600\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantBDEConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=2660>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DriverType\strike0\{linkID=2670>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Connection\strike0\{linkID=3500>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=10060>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3870>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3890>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3910>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4000>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4080>main\}
\par 
\par }
2600
Scribble2600





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2610
Scribble2610





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBDEConnector Events \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantBDEConnector\strike0\{linkID=2560>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2620\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=10070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=10090>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4290>main\}
\par 
\par }
2620
Scribble2620





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
2630
Scribble2630





Imported



FALSE
21
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantBDEConnector Methods \cf1\b0\fs16 
\par \strike TInstantBDEConnector\strike0\{link\lang1033\f1 ID\lang1040\f0 =\lang1033\f1 2560\lang1040\f0 >main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=3510>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4130>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4150>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4270>main\}
\par 
\par }
2640
Scribble2640





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBDEConnector Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantBDEConnector\strike0\{linkID=2560>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2650\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=2660>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DriverType\strike0\{linkID=2670>main\}
\par 
\par }
2650
Scribble2650





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2660
Scribble2660
TInstantBDEConnector.Connection
Connection;Connection,TInstantBDEConnector;TInstantBDEConnector,Connection;



Imported
main

Connection;Connection_Property;TInstantBDEConnector_Connection
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBDEConnector.Connection \cf1\b0\fs16 
\par \cf2\strike TInstantBDEConnector\cf3\strike0\{linkID=2560>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the connection used by the connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Connection: TDatabase;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Connection property to specify the connection used by the connector component.
\par 
\par }
2670
Scribble2670
TInstantBDEConnector.DriverType
DriverType;DriverType,TInstantBDEConnector;TInstantBDEConnector,DriverType;



Imported
main

DriverType;DriverType_Property;TInstantBDEConnector_DriverType
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBDEConnector.DriverType \cf1\b0\fs16 
\par \cf2\strike TInstantBDEConnector\cf3\strike0\{linkID=2560>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the BDE driver type
\par \pard\sb25\sa25\b\f1 property\b0  DriverType: \strike TInstantBDEDriverType\strike0\{linkID=12140>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 DriverType specifies the type of the BDE driver.
\par 
\par }
2680
Scribble2680
TInstantBlob
TInstantBlob;


classessymbol:000130
Imported
main

TInstantBlob;TInstantBlob_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4280\tx5720\tx7100\ul Hierarchy\ulnone\{linkID=2700\}\tab\strike Members\strike0\{linkID=2770>nav\}\tab\strike Properties\strike0\{linkID=2720>nav\}\tab\strike Methods\strike0\{linkID=2750>nav\}\tab\ul See Also\ulnone\{linkID=2690\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 TInstantBlob represents a binary large object (BLOB).
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\f1 TInstantBlob = \b class\b0 (\strike TInstantSimple\strike0\{linkID=10430>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantBlob holds a binary large object (BLOB) as its value. A BLOB is raw binary data of arbitrary length that can represent different large data types such as an image or sound.
\par 
\par }
2690
Scribble2690





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantMemo\strike0\{linkID=7190>main\}
\par }
2700
Scribble2700





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10430>main\}
\par \tab |
\par \strike TInstantBlob\strike0\{linkID=2680>main\}
\par 
\par }
2710
Scribble2710





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBlob Fields \cf1\b0\fs16  
\par \strike TInstantBlob\strike0\{linkID=2680>main\}\{keepn\}
\par 
\par }
2720
Scribble2720





Imported



FALSE
28
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBlob Properties \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantBlob\strike0\{linkID=2680>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2730\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantBlob
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Size\strike0\{linkID=2790>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=2800>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
2730
Scribble2730





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2740
Scribble2740





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantBlob Events \cf1\b0\fs16 
\par \strike TInstantBlob\strike0\{linkID=2680>main\}\cf0\{keepn\}\cf1 
\par 
\par }
2750
Scribble2750





Imported



FALSE
25
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBlob Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantBlob\strike0\{linkID=2680>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2760\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantBlob
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=2810>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadDataFromStream\strike0\{linkID=2820>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadBuffer\strike0\{linkID=2830>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveDataToStream\strike0\{linkID=2840>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteBuffer\strike0\{linkID=2850>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
2760
Scribble2760





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
2770
Scribble2770





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBlob Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantBlob\strike0\{linkID=2680>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2780\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Size\strike0\{linkID=2790>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=2800>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=2810>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadDataFromStream\strike0\{linkID=2820>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadBuffer\strike0\{linkID=2830>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveDataToStream\strike0\{linkID=2840>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteBuffer\strike0\{linkID=2850>main\}
\par 
\par }
2780
Scribble2780





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2790
Scribble2790
TInstantBlob.Size
Size;Size,TInstantBlob;TInstantBlob,Size;



Imported
main

Size;Size_Property;TInstantBlob_Size
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.Size \cf1\b0\fs16 
\par \cf2\strike TInstantBlob\cf3\strike0\{linkID=2680>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the size of the Blob Attribute.
\par \pard\sb25\sa25\b\f1 property\b0  Size: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Size to determine the size in bytes of the Blob attribute.
\par 
\par }
2800
Scribble2800
TInstantBlob.Value
TInstantBlob,Value;Value;Value,TInstantBlob;



Imported
main

TInstantBlob_Value;Value;Value_Property
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.Value \cf1\b0\fs16 
\par \cf2\strike TInstantBlob\cf3\strike0\{linkID=2680>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the BLOB attribute as a string.
\par \pard\sb25\sa25\b\f1 property\b0  Value: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the attribute directly as a string.
\par \pard\fi-195\li195\sb25\sa25\b Note: \b0  The string data type may contain binary data as well as text. Therefore nontextual as well as textual data can be set using a string.
\par 
\par }
2810
Scribble2810
TInstantBlob.Clear
Clear;Clear,TInstantBlob;TInstantBlob,Clear;



Imported
main

Clear;Clear_Method;TInstantBlob_Clear
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.Clear \cf1\b0\fs16 
\par \cf2\strike TInstantBlob\cf3\strike0\{linkID=2680>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Discards all data associated with the blob attribute
\par \pard\sb25\sa25\b\f1 procedure\b0  Clear;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Clear to empty the memory buffer for the blob attribute.
\par 
\par }
2820
Scribble2820
TInstantBlob.LoadDataFromStream
LoadDataFromStream;LoadDataFromStream,TInstantBlob;TInstantBlob,LoadDataFromStream;



Imported
main

LoadDataFromStream;LoadDataFromStream_Method;TInstantBlob_LoadDataFromStream
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.LoadDataFromStream \cf1\b0\fs16 
\par \cf2\strike TInstantBlob\cf3\strike0\{linkID=2680>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Loads data from a TStream object into the attribute.
\par \pard\sb25\sa25\b\f1 procedure\b0  LoadDataFromStream(AStream: TStream);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use LoadDataFromStream to copy the content of a stream into the attribute. The Stream argument specifies the stream from which the value of the attribute is copied.
\par 
\par }
2830
Scribble2830
TInstantBlob.ReadBuffer
ReadBuffer;ReadBuffer,TInstantBlob;TInstantBlob,ReadBuffer;



Imported
main

ReadBuffer;ReadBuffer_Method;TInstantBlob_ReadBuffer
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.ReadBuffer \cf1\b0\fs16 
\par \cf2\strike TInstantBlob\cf3\strike0\{linkID=2680>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Reads from the blob attribute into a buffer
\par \pard\sb25\sa25\b\f1 function\b0  ReadBuffer(\b var\b0  Buffer; Position: Integer; Count: Integer): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call ReadBuffer to read from the Blob attribute into the buffer specified by the Buffer argument. The method reads a number of bytes specified by the Count argument starting at the position specified by the Position argument.
\par 
\par }
2840
Scribble2840
TInstantBlob.SaveDataToStream
SaveDataToStream;SaveDataToStream,TInstantBlob;TInstantBlob,SaveDataToStream;



Imported
main

SaveDataToStream;SaveDataToStream_Method;TInstantBlob_SaveDataToStream
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.SaveDataToStream \cf1\b0\fs16 
\par \cf2\strike TInstantBlob\cf3\strike0\{linkID=2680>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Saves the value of the attribute to a TStream object.
\par \pard\sb25\sa25\b\f1 procedure\b0  SaveDataToStream(AStream: TStream);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use SaveDataToStream to copy the value of the attribute to a stream. The Stream argument specifies the stream to which the value of the attribute is copied.
\par 
\par }
2850
Scribble2850
TInstantBlob.WriteBuffer
TInstantBlob,WriteBuffer;WriteBuffer;WriteBuffer,TInstantBlob;



Imported
main

TInstantBlob_WriteBuffer;WriteBuffer;WriteBuffer_Method
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBlob.WriteBuffer \cf1\b0\fs16 
\par \cf2\strike TInstantBlob\cf3\strike0\{linkID=2680>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Reads from the blob attribute into a buffer
\par \pard\sb25\sa25\b\f1 function\b0  WriteBuffer(\b const\b0  Buffer; Position: Integer; Count: Integer): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call WriteBuffer to write from the buffer specified by the Buffer argument into the Blob attribute. The method writes a number of bytes specified by the Count argument starting at the position specified by the Position argument. The allocated memory is automatically grown when writing beyond the current size of the blob attribute.
\par 
\par }
2860
Scribble2860
TInstantBoolean
TInstantBoolean;


classessymbol:000140
Imported
main

TInstantBoolean;TInstantBoolean_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBoolean\cf1\b0\fs16 
\par \pard\sb25\tx1420\tx2840\tx4260\ul Hierarchy\ulnone\{linkID=2870\}\tab\strike Members\strike0\{linkID=2940>nav\}\tab\strike Properties\strike0\{linkID=2890>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantBoolean represents a Boolean value.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantBoolean = \b class\b0 (\strike TInstantSimple\strike0\{linkID=10430>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantBoolean holds a Boolean as its value. A Boolean can represent the values of True or False.
\par 
\par }
2870
Scribble2870





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10430>main\}
\par \tab |
\par \strike TInstantBoolean\strike0\{linkID=2860>main\}
\par 
\par }
2880
Scribble2880





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBoolean Fields \cf1\b0\fs16 
\par \strike TInstantBoolean\strike0\{linkID=2860>main\}\{keepn\} 
\par 
\par }
2890
Scribble2890





Imported



FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBoolean Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantBoolean\strike0\{linkID=2860>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2900\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantBoolean
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=2960>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
2900
Scribble2900





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2910
Scribble2910





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantBoolean Events \cf1\b0\fs16 
\par \strike TInstantBoolean\strike0\{linkID=2860>main\}\cf0\{keepn\}\cf1 
\par 
\par }
2920
Scribble2920





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBoolean Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantBoolean\strike0\{linkID=2860>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2740\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
2930
Scribble2930





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
2940
Scribble2940





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantBoolean Members \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantBoolean\strike0\{linkID=2860>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=2950\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=2960>main\}
\par 
\par }
2950
Scribble2950





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
2960
Scribble2960
TInstantBoolean.Value
TInstantBoolean,Value;Value;Value,TInstantBoolean;



Imported
main

TInstantBoolean_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBoolean.Value \cf1\b0\fs16 
\par \cf2\strike TInstantBoolean\cf3\strike0\{linkID=2860>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the Boolean attribute
\par \pard\sb25\sa25\b\f1 property\b0  Value: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the Boolean attribute.
\par 
\par }
2970
Scribble2970
TInstantCollection
TInstantCollection;


classessymbol:000150
Imported
main

TInstantCollection;TInstantCollection_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollection \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4260\ul Hierarchy\ulnone\{linkID=2980\}\tab\strike Members\strike0\{linkID=3030>nav\}\tab\strike Methods\strike0\{linkID=3020>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantCollection is a container for \strike TInstantCollectionItem\strike0\{linkID=3090>main\} objects.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantCollection = \b class\b0 (TCollection)
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantCollection holds a group of \strike TInstantCollectionItem\strike0\{linkID=3090>main\} objects.
\par 
\par }
2980
Scribble2980





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TCollection
\par \pard\li95\tx355\tab |
\par \strike TInstantCollection\strike0\{linkID=2970>main\}
\par 
\par }
2990
Scribble2990





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCollection Fields \cf1\b0\fs16  
\par \strike TInstantCollection\strike0\{linkID=2970>main\}\{keepn\}
\par 
\par }
3000
Scribble3000





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantCollection Properties \cf1\b0\fs16 
\par \strike TInstantCollection\strike0\{linkID=2970>main\}\cf0\{keepn\}\cf1 
\par 
\par }
3010
Scribble3010





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantCollection Events \cf1\b0\fs16 
\par \strike TInstantCollection\strike0\{linkID=2970>main\}\cf0\{keepn\}\cf1 
\par 
\par }
3020
Scribble3020





Imported



FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantCollection Methods \cf1\b0\fs16 
\par \strike TInstantCollection\strike0\{link\lang1033\f1 ID\lang1040\f0 =\lang1033\f1 2970\lang1040\f0 >main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantCollection
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Find\strike0\{linkID=3040>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetItemNames\strike0\{linkID=3050>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function IndexOf(const AName: string): Integer; overload;\strike0\{linkID=3060>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function IndexOf(Item: TInstantCollectionItem): Integer; overload;\strike0\{linkID=3070>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=3080>main\}
\par 
\par }
3030
Scribble3030





Imported



FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantCollection Members \cf1\b0\fs16 
\par \cf2\strike TInstantCollection\cf3\strike0\{linkID=2970>main\}\cf1\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Find\strike0\{linkID=3040>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetItemNames\strike0\{linkID=3050>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function IndexOf(const AName: string): Integer; overload;\strike0\{linkID=3060>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function IndexOf(Item: TInstantCollectionItem): Integer; overload;\strike0\{linkID=3070>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=3080>main\}
\par 
\par }
3040
Scribble3040
TInstantCollection.Find
Find;Find,TInstantCollection;TInstantCollection,Find;



Imported
main

Find;Find_Method;TInstantCollection_Find
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollection.Find \cf1\b0\fs16 
\par \cf2\strike TInstantCollection\cf3\strike0\{linkID=2970>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Locates an item by its name.
\par \pard\sb25\sa25\b\f1 function\b0  Find(\b const\b0  AName: \b string\b0 ): \strike TInstantCollectionItem\strike0\{linkID=3090>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Find to locate an item which name matches the AName argument. If an item matching the name is not found in the collection, Find returns nil.
\par 
\par }
3050
Scribble3050
TInstantCollection.GetItemNames
GetItemNames;GetItemNames,TInstantCollection;TInstantCollection,GetItemNames;



Imported
main

GetItemNames;GetItemNames_Method;TInstantCollection_GetItemNames
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollection.GetItemNames \cf1\b0\fs16 
\par \cf2\strike TInstantCollection\cf3\strike0\{linkID=2970>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Fills a TStrings object with the names of all items.
\par \pard\sb25\sa25\b\f1 procedure\b0  GetItemNames(List: TStrings);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call GetItemNames to get the names of all items in the collection. Before filling in the names, the TStrings object is cleared.
\par 
\par }
3060
Scribble3060
TInstantCollection.IndexOf
IndexOf;IndexOf,TInstantCollection;TInstantCollection,IndexOf;



Imported
main

IndexOf;IndexOf_Method;TInstantCollection_IndexOf
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollection.IndexOf \cf1\b0\fs16 
\par \cf2\strike TInstantCollection\cf3\strike0\{linkID=2970>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns the index of an item with the specified name.
\par \pard\sb25\sa25\b\f1 function\b0  IndexOf(\b const\b0  AName: \b string\b0 ): Integer; \b overload\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call IndexOf to get the index of an item which name matches the specified AName argument.
\par 
\par }
3070
Scribble3070
TInstantCollection.IndexOf
IndexOf;IndexOf,TInstantCollection;TInstantCollection,IndexOf;



Imported
main

IndexOf;IndexOf_Method;TInstantCollection_IndexOf
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollection.IndexOf \cf1\b0\fs16 
\par \cf2\strike TInstantCollection\cf3\strike0\{linkID=2970>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns the index of an item
\par \pard\sb25\sa25\b\f1 function\b0  \strike IndexOf\strike0\{linkID=3060>main\}(Item: \strike TInstantCollectionItem\strike0\{linkID=3090>main\}): Integer; \b overload\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call \strike IndexOf\strike0\{linkID=3060>main\} to get the index of an item in the collection.
\par 
\par }
3080
Scribble3080
TInstantCollection.Remove
Remove;Remove,TInstantCollection;TInstantCollection,Remove;



Imported
main

Remove;Remove_Method;TInstantCollection_Remove
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollection.Remove \cf1\b0\fs16 
\par \cf2\strike TInstantCollection\cf3\strike0\{linkID=2970>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Remove an item from the collection.
\par \pard\sb25\sa25\b\f1 function\b0  Remove(Item: \strike TInstantCollectionItem\strike0\{linkID=3090>main\}): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Remove to remove an item from the collection. Remove returns the index of the item before it was removed. If the item is not found in the collection, Remove returns -1.
\par 
\par }
3090
Scribble3090
TInstantCollectionItem
TInstantCollectionItem;


classessymbol:000160
Imported
main

TInstantCollectionItem;TInstantCollectionItem_Object
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollectionItem \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4260\ul Hierarchy\ulnone\{linkID=3100\}\tab\strike Members\strike0\{linkID=3160>nav\}\tab\strike Properties\strike0\{linkID=3120>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantCollectionItem is the ancestor for collection item classes.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantCollectionItem = \b class\b0 (TCollectionItem)
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 A \strike TInstantCollection\strike0\{linkID=2970>main\} holds a group of TInstantCollectionItem objects. TInstantCollectionItem objects are created and destroyed using the methods of \strike TInstantCollection\strike0\{linkID=2970>main\}.
\par TInstantCollectionItem objects are named through their \strike Name\strike0\{linkID=3180>main\} property.
\par 
\par }
3100
Scribble3100





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TCollectionItem
\par \pard\li95\tx355\tab |
\par \strike TInstantCollectionItem\strike0\{linkID=3090>main\}
\par 
\par }
3110
Scribble3110





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCollectionItem Fields \cf1\b0\fs16  
\par \strike TInstantCollectionItem\strike0\{linkID=3090>main\}\{keepn\}
\par 
\par }
3120
Scribble3120





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCollectionItem Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantCollectionItem\strike0\{linkID=3090>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3130\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCollectionItem
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Name\strike0\{linkID=3180>main\}
\par 
\par }
3130
Scribble3130





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
3140
Scribble3140





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantCollectionItem Events \cf1\b0\fs16 
\par \strike TInstantCollectionItem\strike0\{linkID=3090>main\}\cf0\{keepn\}\cf1 
\par 
\par }
3150
Scribble3150





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantCollectionItem Methods \cf1\b0\fs16 
\par \strike TInstantCollectionItem\strike0\{linkID=3090>main\}\cf0\{keepn\}\cf1 
\par 
\par }
3160
Scribble3160





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCollectionItem Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantCollectionItem\strike0\{linkID=3090>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3170\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Name\strike0\{linkID=3180>main\}
\par 
\par }
3170
Scribble3170





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
3180
Scribble3180
TInstantCollectionItem.Name
Name;Name,TInstantCollectionItem;TInstantCollectionItem,Name;



Imported
main

Name;Name_Property;TInstantCollectionItem_Name
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCollectionItem.Name \cf1\b0\fs16 
\par \cf2\strike TInstantCollectionItem\cf3\strike0\{linkID=3090>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies then name of the item.
\par \pard\sb25\sa25\b\f1 property\b0  \b Name\b0 : \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Name to specify the name of the \strike TInstantCollectionItem\strike0\{linkID=3090>main\} object. \strike TInstantCollectionItem\strike0\{linkID=3090>main\} has a field that holds the name.
\par 
\par }
3190
Scribble3190
TInstantComplex
TInstantComplex;


classessymbol:000170
Imported
main

TInstantComplex;TInstantComplex_Object
FALSE
20
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4280\tx5720\tx7080\ul Hierarchy\ulnone\{linkID=3210\}\tab\strike Members\strike0\{linkID=3280>nav\}\tab\strike Properties\strike0\{linkID=3230>nav\}\tab\strike Methods\strike0\{linkID=3260>nav\}\tab\ul See Also\ulnone\{linkID=3200\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 The ancestor of all the attribute classes that represent objects.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\f1 TInstantComplex = \b class\b0 (\strike TInstantAttribute\strike0\{linkID=2170>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantComplex is the ancestor of all the attribute classes that represents objects. TInstantComplex introduces common properties and methods to:
\par \pard\sb25\sa25\tx280\lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Validate objects.
\par \lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Specify a connector for a database connection
\par \pard 
\par TInstantComplex is abstract; so do not create instances of this class. Instead refer to the following concrete descendant classes:
\par 
\par \b Complex attribute classes\b0 
\par \strike TInstantPart\strike0\{linkID=9250>main\}
\par \strike TInstantReference\strike0\{linkID=9520>main\}
\par \strike TInstantParts\strike0\{linkID=9390>main\}
\par \strike TInstantReferences\strike0\{linkID=9780>main\}
\par 
\par }
3200
Scribble3200





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantSimple\strike0\{linkID=10430>main\}
\par }
3210
Scribble3210





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3190>main\}
\par 
\par }
3220
Scribble3220





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantComplex Fields \cf1\b0\fs16  
\par \strike TInstantComplex\strike0\{linkID=3190>main\}\{keepn\}
\par 
\par }
3230
Scribble3230





Imported



FALSE
30
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantComplex Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantComplex\strike0\{linkID=3190>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3240\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3300>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3340>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
3240
Scribble3240





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
3250
Scribble3250





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantComplex Events \cf1\b0\fs16 
\par \strike TInstantComplex\strike0\{linkID=3190>main\}\cf0\{keepn\}\cf1 
\par 
\par }
3260
Scribble3260





Imported



FALSE
23
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantComplex Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantComplex\strike0\{linkID=3190>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3270\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3360>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3370>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3380>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
3270
Scribble3270





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
3280
Scribble3280





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantComplex Members \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantComplex\strike0\{linkID=3190>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3290\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3300>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3340>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3360>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3370>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3380>main\}
\par 
\par }
3290
Scribble3290





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
3300
Scribble3300
TInstantComplex.AllowOwned
AllowOwned;AllowOwned,TInstantComplex;TInstantComplex,AllowOwned;



Imported
main

AllowOwned;AllowOwned_Property;TInstantComplex_AllowOwned
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.AllowOwned \cf1\b0\fs16 
\par \cf2\strike TInstantComplex\cf3\strike0\{linkID=3190>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies whether the attribute should allow owned objects.
\par \pard\sb25\sa25\b\f1 property\b0  AllowOwned: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use AllowOwned to specify if the attribute should allow owned objects. When adding an object that is owned, dependence is created to an object that is internally managed by another instance. The default value of AllowOwned is False.
\par 
\par }
3310
Scribble3310
TInstantComplex.Connector
Connector;Connector,TInstantComplex;TInstantComplex,Connector;



Imported
main

Connector;Connector_Property;TInstantComplex_Connector
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.Connector \cf1\b0\fs16 
\par \cf2\strike TInstantComplex\cf3\strike0\{linkID=3190>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the connector used by the attribute.
\par \pard\sb25\sa25\b\f1 property\b0  Connector: \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The Connector property determines the connector that the attribute uses to retrieve, store and dispose objects. If the attribute is owned, the connector of the owning object is used. If no connector is specified, the default connector is used. If also no default connector exists, accessing the Connector property will raise an exception.
\par 
\par }
3320
Scribble3320
TInstantComplex.RequiredClass
RequiredClass;RequiredClass,TInstantComplex;TInstantComplex,RequiredClass;



Imported
main

RequiredClass;RequiredClass_Property;TInstantComplex_RequiredClass
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.RequiredClass \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantComplex\strike0\{linkID=3190>main\}\tab\ul See Also\ulnone\{linkID=3330\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Determines the minimum required class of objects that the attribute holds.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  RequiredClass: TInstantObjectClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use RequiredClass to determine the minimum required class of objects that the attribute holds. If the attribute has metadata, the object class specified by the metadata object is used. Otherwise the required class is \strike TInstantObject\strike0\{linkID=7390>main\}.
\par 
\par }
3330
Scribble3330





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantComplex.RequiredClassName\strike0\{linkID=3340>main\}
\par }
3340
Scribble3340
TInstantComplex.RequiredClassName
RequiredClassName;RequiredClassName,TInstantComplex;TInstantComplex,RequiredClassName;



Imported
main

RequiredClassName;RequiredClassName_Property;TInstantComplex_RequiredClassName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.RequiredClassName \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantComplex\strike0\{linkID=3190>main\}\tab\ul See Also\ulnone\{linkID=3350\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Determines the name of the minimum required class of objects that the attribute holds.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  RequiredClassName: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use RequiredClassName to determine the name of the minimum required class of objects that the attribute holds. If the attribute has metadata, the object class specified by the metadata object is used. Otherwise the required class is \strike TInstantObject\strike0\{linkID=7390>main\}.
\par 
\par }
3350
Scribble3350





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantComplex.RequiredClass\strike0\{linkID=3320>main\}
\par }
3360
Scribble3360
TInstantComplex.AttachObject
AttachObject;AttachObject,TInstantComplex;TInstantComplex,AttachObject;



Imported
main

AttachObject;AttachObject_Method;TInstantComplex_AttachObject
FALSE
18
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.AttachObject \cf1\b0\fs16 
\par \cf2\strike TInstantComplex\cf3\strike0\{linkID=3190>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Attaches an object to the attribute.
\par \pard\sb25\sa25\b\f1 function\b0  AttachObject(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}): Boolean; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Attaches the object specified by the AObject argument to the attribute.
\par For the descendant classes of \strike TInstantComplex\strike0\{linkID=3190>main\}  this implies: 
\par 
\par \pard\sb25\sa25\tx3120\ul\b Class\tab Action\f2                                                                   \ulnone\b0\f0 
\par \strike TInstantElement\strike0\{linkID=6050>main\}\tab AObject is assigned as the attributes Value
\par \strike TInstantContainer\strike0\{linkID=4300>main\}\tab AObject is added to the objects array
\par \pard 
\par \pard\sb25\sa25 If the object is successfully attached, the function returns True. Otherwise the function returns False.
\par 
\par \pard 
\par }
3370
Scribble3370
TInstantComplex.DetachObject
DetachObject;DetachObject,TInstantComplex;TInstantComplex,DetachObject;



Imported
main

DetachObject;DetachObject_Method;TInstantComplex_DetachObject
FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.DetachObject \cf1\b0\fs16 
\par \cf2\strike TInstantComplex\cf3\strike0\{linkID=3190>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Detaches an object from the attribute.
\par \pard\sb25\sa25\b\f1 function\b0  DetachObject(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}): Boolean; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Detaches the object specified by the AObject argument from the attribute.
\par For the descendant classes of \strike TInstantComplex\strike0\{linkID=3190>main\}  this implies: 
\par 
\par \pard\sb25\sa25\tx3680\ul\b Class\tab Action\f2                                                                                      \ulnone\b0\f0 
\par \strike TInstantElement\strike0\{linkID=6050>main\}\tab if the attribute Value equals AObject, the Value is set to nil.
\par \strike TInstantContainer\strike0\{linkID=4300>main\}\tab AObject is removed from the attributes array of objects.
\par \pard 
\par If the object is successfully detached, the function returns True. Otherwise the function returns False.
\par 
\par }
3380
Scribble3380
TInstantComplex.ValidateObject
TInstantComplex,ValidateObject;ValidateObject;ValidateObject,TInstantComplex;



Imported
main

TInstantComplex_ValidateObject;ValidateObject;ValidateObject_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantComplex.ValidateObject \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantComplex\strike0\{linkID=3190>main\}\tab\ul See Also\ulnone\{linkID=3390\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Validates an object that is added to the attribute.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  ValidateObject(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ValidateObject validates an object before it is added to the attribute. If the validation fails, an exception is raised. \strike TInstantComplex\strike0\{linkID=3190>main\} performs a validation of the class type of the object passed as the AObject argument. Descendant classes may override ValidateObject to introduce other validation rules.
\par 
\par }
3390
Scribble3390





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantComplex.RequiredClass\strike0\{linkID=3320>main\}
\par }
3400
Scribble3400
TInstantConnectionBasedConnector
TInstantConnectionBasedConnector;


classessymbol:000180
Imported
main

TInstantConnectionBasedConnector;TInstantConnectionBasedConnector_Object
FALSE
16
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionBasedConnector \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4280\tx5700\ul Hierarchy\ulnone\{linkID=3410\}\tab\strike Members\strike0\{linkID=3480>nav\}\tab\strike Properties\strike0\{linkID=3430>nav\}\tab\strike Methods\strike0\{linkID=3470>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\strike\f1 TInstantConnectorClass\strike0\{linkID=12210>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \strike TInstantConnector\strike0\{linkID=3770>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx495\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.\lang1033\f2 
\par TInstantConnector introduces properties and methods that fall into the following categories:\lang1040\f0 
\par \pard\sb25\sa25\tx280\tab\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \tab\{bmct bm3.BMP\}\tab Transaction control
\par \tab\{bmct bm3.BMP\}\tab Information about the database
\par \tab\{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par }
3410
Scribble3410





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3770>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9960>main\}
\par \tab |
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3400>main\}
\par 
\par }
3420
Scribble3420





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionBasedConnector Fields \cf1\b0\fs16 
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3400>main\}\{keepn\} 
\par 
\par }
3430
Scribble3430





Imported



FALSE
26
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionBasedConnector Properties \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantConnectionBasedConnector\strike0\{linkID=3400>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3440\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Connection\strike0\{linkID=3500>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=10060>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3870>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3890>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3910>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4000>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4080>main\}
\par 
\par }
3440
Scribble3440





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
3450
Scribble3450





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionBasedConnector Events \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantConnectionBasedConnector\strike0\{linkID=3400>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3460\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=10070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=10090>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4290>main\}
\par 
\par }
3460
Scribble3460





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
3470
Scribble3470





Imported



FALSE
21
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantConnectionBasedConnector Methods \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionBasedConnector\cf3\strike0\{linkID=3400>main\}\cf1\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=3510>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4130>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4150>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4270>main\}
\par 
\par }
3480
Scribble3480





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionBasedConnector Members \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantConnectionBasedConnector\strike0\{linkID=3400>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3490\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Connection\strike0\{linkID=3500>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=3510>main\}
\par 
\par }
3490
Scribble3490





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
3500
Scribble3500
TInstantConnectionBasedConnector.Connection
Connection;Connection,TInstantConnectionBasedConnector;TInstantConnectionBasedConnector,Connection;



Imported
main

Connection;Connection_Property;TInstantConnectionBasedConnector_Connection
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionBasedConnector.Connection \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionBasedConnector\cf3\strike0\{linkID=3400>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the connection used by the connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Connection: TCustomConnection;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Connection property to specify the connection used by the connector component.
\par 
\par }
3510
Scribble3510
TInstantConnectionBasedConnector.HasConnection
HasConnection;HasConnection,TInstantConnectionBasedConnector;TInstantConnectionBasedConnector,HasConnection;



Imported
main

HasConnection;HasConnection_Method;TInstantConnectionBasedConnector_HasConnection
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionBasedConnector.HasConnection \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionBasedConnector\cf3\strike0\{linkID=3400>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if a connection is associated with the connector.
\par \pard\sb25\sa25\b\f1 function\b0  HasConnection: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasConnection to determine if the \strike Connection\strike0\{linkID=3500>main\} property of the connector is assigned. If a connection component has been associated with the connector, HasConnection returns True. Otherwise HasConnection returns False.
\par 
\par }
3520
Scribble3520
TInstantConnectionManager
TInstantConnectionManager;


classessymbol:000190
Imported
main

TInstantConnectionManager;TInstantConnectionManager_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4260\tx5700\ul Hierarchy\ulnone\{linkID=3530\}\tab\strike Members\strike0\{linkID=3600>nav\}\tab\strike Properties\strike0\{linkID=3550>nav\}\tab\strike Methods\strike0\{linkID=3580>nav\}\tab\strike Unit: InstantConnectionManager\strike0\{linkID=12860>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Allows the user to manage connections to various databases.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantConnectionManager = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 The Connection Manager shows a dialog in which connections to databases can be defined and managed by the user.
\par 
\par }
3530
Scribble3530





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnectionManager\strike0\{linkID=3520>main\}
\par 
\par }
3540
Scribble3540





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionManager Fields \cf1\b0\fs16  
\par \strike TInstantConnectionManager\strike0\{linkID=3520>main\}\{keepn\}
\par 
\par }
3550
Scribble3550





Imported



FALSE
20
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionManager Properties \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantConnectionManager\strike0\{linkID=3520>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3560\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantConnectionManager
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Caption\strike0\{linkID=3620>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CurrentConnectionDef\strike0\{linkID=3630>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike FileName\strike0\{linkID=3640>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Form\strike0\{linkID=3650>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Model\strike0\{linkID=3660>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnBuild\strike0\{linkID=3670>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnConnect\strike0\{linkID=3680>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnDisconnect\strike0\{linkID=3690>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnEdit\strike0\{linkID=3700>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIsConnected\strike0\{linkID=3710>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnPrepare\strike0\{linkID=3720>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnSupportConnector\strike0\{linkID=3730>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike VisibleActions\strike0\{linkID=3740>main\}
\par 
\par }
3560
Scribble3560





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
3570
Scribble3570





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantConnectionManager Events \cf1\b0\fs16 
\par \strike TInstantConnectionManager\strike0\{linkID=3520>main\}\cf0\{keepn\}\cf1 
\par 
\par }
3580
Scribble3580





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionManager Methods \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantConnectionManager\strike0\{linkID=3520>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3590\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantConnectionManager
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Execute\strike0\{linkID=3750>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike HasForm\strike0\{linkID=3760>main\}
\par 
\par }
3590
Scribble3590





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par 
\par }
3600
Scribble3600





Imported



FALSE
23
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnectionManager Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantConnectionManager\strike0\{linkID=3520>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3610\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Caption\strike0\{linkID=3620>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CurrentConnectionDef\strike0\{linkID=3630>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike FileName\strike0\{linkID=3640>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Form\strike0\{linkID=3650>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Model\strike0\{linkID=3660>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnBuild\strike0\{linkID=3670>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnConnect\strike0\{linkID=3680>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnDisconnect\strike0\{linkID=3690>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnEdit\strike0\{linkID=3700>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIsConnected\strike0\{linkID=3710>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnPrepare\strike0\{linkID=3720>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnSupportConnector\strike0\{linkID=3730>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike VisibleActions\strike0\{linkID=3740>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Execute\strike0\{linkID=3750>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike HasForm\strike0\{linkID=3760>main\}
\par 
\par }
3610
Scribble3610





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
3620
Scribble3620
TInstantConnectionManager.Caption
Caption;Caption,TInstantConnectionManager;TInstantConnectionManager,Caption;



Imported
main

Caption;Caption_Property;TInstantConnectionManager_Caption
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.Caption \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the Caption of the ConnectionManager form.
\par \pard\sb25\sa25\b\f1 property\b0  Caption: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Caption property to specify the Caption of the form that the connection manager shows when it is executed.
\par 
\par }
3630
Scribble3630
TInstantConnectionManager.CurrentConnectionDef
CurrentConnectionDef;CurrentConnectionDef,TInstantConnectionManager;TInstantConnectionManager,CurrentConnectionDef;



Imported
main

CurrentConnectionDef;CurrentConnectionDef_Property;TInstantConnectionManager_CurrentConnectionDef
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.CurrentConnectionDef \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the currently selected connection within the manager.
\par \pard\sb25\sa25\b\f1 property\b0  CurrentConnectionDef: TInstantConnectionDef;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 CurrentConnectionDef refers to the definition of the currently selected connection within the connection manager.
\par 
\par }
3640
Scribble3640
TInstantConnectionManager.FileName
FileName;FileName,TInstantConnectionManager;TInstantConnectionManager,FileName;



Imported
main

FileName;FileName_Property;TInstantConnectionManager_FileName
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.FileName \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 The name of the file in which to save connection definitions.
\par \pard\sb25\sa25\b\f1 property\b0  FileName: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 FileName specifies the name of the file that connection definitions are loaded from and saved to.
\par 
\par }
3650
Scribble3650
TInstantConnectionManager.Form
Form;Form,TInstantConnectionManager;TInstantConnectionManager,Form;



Imported
main

Form;Form_Property;TInstantConnectionManager_Form
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.Form \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Contains the actual form used by the connection manager.
\par \pard\sb25\sa25\b\f1 property\b0  Form: TInstantConnectionManagerForm;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the form property to access the form used by the connection manager to present connections to the user.
\par 
\par }
3660
Scribble3660
TInstantConnectionManager.Model
Model;Model,TInstantConnectionManager;TInstantConnectionManager,Model;



Imported
main

Model;Model_Property;TInstantConnectionManager_Model
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.Model \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the model for building a database.
\par \pard\sb25\sa25\b\f1 property\b0  Model: TInstantModel;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Model property to specify the model that should be used when building a database through the connection manager form.
\par 
\par }
3670
Scribble3670
TInstantConnectionManager.OnBuild
OnBuild;OnBuild,TInstantConnectionManager;TInstantConnectionManager,OnBuild;



Imported
main

OnBuild;OnBuild_Property;TInstantConnectionManager_OnBuild
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnBuild \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the user requests to build a database from the connection manager.
\par \pard\sb25\sa25\b\f1 property\b0  OnBuild: TInstantConnectionDefEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 By default, the build action of the connection manager will build the database according to the current model. Write an OnBuild event handler to perform special operations when building the database.
\par 
\par }
3680
Scribble3680
TInstantConnectionManager.OnConnect
OnConnect;OnConnect,TInstantConnectionManager;TInstantConnectionManager,OnConnect;



Imported
main

OnConnect;OnConnect_Property;TInstantConnectionManager_OnConnect
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnConnect \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the user requests to connect to a database from the connection manager.
\par \pard\sb25\sa25\b\f1 property\b0  OnConnect: TInstantConnectionDefEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnConnect event handler to establish a connection to the database identified by the selected connection definition. The application is responsible for the established connection.
\par 
\par }
3690
Scribble3690
TInstantConnectionManager.OnDisconnect
OnDisconnect;OnDisconnect,TInstantConnectionManager;TInstantConnectionManager,OnDisconnect;



Imported
main

OnDisconnect;OnDisconnect_Property;TInstantConnectionManager_OnDisconnect
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnDisconnect \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the user requests to disconnect an active connection from the connection manager.
\par \pard\sb25\sa25\b\f1 property\b0  OnDisconnect: TInstantConnectionDefEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnDisconnect event handler to close a connection to the database identified by the selected connection definition. The application is assumed to have established the connection via an \strike OnConnect\strike0\{linkID=3680>main\} event handler.
\par 
\par }
3700
Scribble3700
TInstantConnectionManager.OnEdit
OnEdit;OnEdit,TInstantConnectionManager;TInstantConnectionManager,OnEdit;



Imported
main

OnEdit;OnEdit_Property;TInstantConnectionManager_OnEdit
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnEdit \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the user requests to edit a connection definition.
\par \pard\sb25\sa25\b\f1 property\b0  OnEdit: TInstantConnectionDefEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 By default, the connection manager will open an edit form that corresponds to the type of connection definition. Write an OnEdit event handler to edit a connection definition some other way.
\par 
\par }
3710
Scribble3710
TInstantConnectionManager.OnIsConnected
OnIsConnected;OnIsConnected,TInstantConnectionManager;TInstantConnectionManager,OnIsConnected;



Imported
main

OnIsConnected;OnIsConnected_Property;TInstantConnectionManager_OnIsConnected
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnIsConnected \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the connection manager needs to know if a certain connection is open or not.
\par \pard\sb25\sa25\b\f1 property\b0  OnIsConnected: TInstantConnectionDefEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnIsConnected event handler to respond to the event. The application is assumed to have established the connection via the \strike OnConnect\strike0\{linkID=3680>main\} event. Set Result according to the open state of the connection.
\par 
\par }
3720
Scribble3720
TInstantConnectionManager.OnPrepare
OnPrepare;OnPrepare,TInstantConnectionManager;TInstantConnectionManager,OnPrepare;



Imported
main

OnPrepare;OnPrepare_Property;TInstantConnectionManager_OnPrepare
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnPrepare \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs after a database has been built from the connection manager.
\par \pard\sb25\sa25\b\f1 property\b0  OnPrepare: TInstantConnectorEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnPrepare event handler to perform special initialization of the database after it has been built.
\par 
\par }
3730
Scribble3730
TInstantConnectionManager.OnSupportConnector
OnSupportConnector;OnSupportConnector,TInstantConnectionManager;TInstantConnectionManager,OnSupportConnector;



Imported
main

OnSupportConnector;OnSupportConnector_Property;TInstantConnectionManager_OnSupportConnector
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.OnSupportConnector \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the connection manager needs to know if a certain connector class shall be supported.
\par \pard\sb25\sa25\b\f1 property\b0  OnSupportConnector: TInstantConnectorClassEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 By default all registered connector types are supported. Write an OnSupportConnector event handler to disable support for selected connector types.
\par 
\par }
3740
Scribble3740
TInstantConnectionManager.VisibleActions
TInstantConnectionManager,VisibleActions;VisibleActions;VisibleActions,TInstantConnectionManager;



Imported
main

TInstantConnectionManager_VisibleActions;VisibleActions;VisibleActions_Property
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.VisibleActions \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines which actions are available in the connection manager.
\par \pard\sb25\sa25\b\f1 property\b0  VisibleActions: \strike TInstantConnectionManagerActionTypes\strike0\{linkID=12200>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use VisibleActions to select which actions that appear in the connection manager. Leave any of the action types out of the VisibleActions set to hide those actions and thereby prevent the user from performing certain operations.
\par 
\par }
3750
Scribble3750
TInstantConnectionManager.Execute
Execute;Execute,TInstantConnectionManager;TInstantConnectionManager,Execute;



Imported
main

Execute;Execute_Method;TInstantConnectionManager_Execute
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.Execute \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Opens the connection manager.
\par \pard\sb25\sa25\b\f1 function\b0  Execute: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Opens the connection manager form allowing the user to manage connections to databases.
\par 
\par }
3760
Scribble3760
TInstantConnectionManager.HasForm
HasForm;HasForm,TInstantConnectionManager;TInstantConnectionManager,HasForm;



Imported
main

HasForm;HasForm_Method;TInstantConnectionManager_HasForm
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManager.HasForm \cf1\b0\fs16 
\par \cf2\strike TInstantConnectionManager\cf3\strike0\{linkID=3520>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if the connection manager has a form instance.
\par \pard\sb25\sa25\b\f1 function\b0  HasForm: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the HasForm property to determine if the connection manager has created a TConnectionManagerForm instance.
\par 
\par }
3770
Scribble3770
TInstantConnector
TInstantConnector;


classessymbol:000200
Imported
main

TInstantConnector;TInstantConnector_Object
FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4260\tx5700\tx7100\ul Hierarchy\ulnone\{linkID=3780\}\tab\strike Members\strike0\{linkID=3850>nav\}\tab\strike Properties\strike0\{linkID=3800>nav\}\tab\strike Methods\strike0\{linkID=3840>nav\}\tab\strike Events\strike0\{linkID=3820>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\strike\f1 TInstantConnectorClass\strike0\{linkID=12210>main\} = \b class\b0  \b of\b0  TInstantConnector;
\par TInstantConnector = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\sb25\sa25\tx280\lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Transaction control
\par \lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Information about the database
\par \lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
3780
Scribble3780





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3770>main\}
\par 
\par }
3790
Scribble3790





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnector Fields \cf1\b0\fs16 
\par \strike TInstantConnector\strike0\{linkID=3770>main\}\{keepn\} 
\par 
\par }
3800
Scribble3800





Imported



FALSE
22
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnector Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3810\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3870>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3890>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3910>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4000>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4080>main\}
\par 
\par }
3810
Scribble3810





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
3820
Scribble3820





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnector Events \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3830\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4290>main\}
\par 
\par }
3830
Scribble3830





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
3840
Scribble3840





Imported



FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantConnector Methods \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\cf1\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike BuildDatabase\lang1033\f1  1\lang1040\strike0\f0\{linkID=4090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike BuildDatabase\lang1033\f1  2\lang1040\strike0\f0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4130>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4150>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4270>main\}
\par 
\par }
3850
Scribble3850





Imported



FALSE
37
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantConnector Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=3860\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3870>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3890>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3910>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4000>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4080>main\}
\par \pard\sb55\sa55\tx355\b Events
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4290>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4130>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4150>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4270>main\}
\par 
\par }
3860
Scribble3860





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
3870
Scribble3870
TInstantConnector.AfterConnect
AfterConnect;AfterConnect,TInstantConnector;TInstantConnector,AfterConnect;



Imported
main

AfterConnect;AfterConnect_Property;TInstantConnector_AfterConnect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.AfterConnect \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=3880\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Occurs after the connection is opened.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  AfterConnect: TNotifyEvent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an AfterConnect event handler to take actions after the connector component opens the connection to the database.
\par 
\par }
3880
Scribble3880





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.BeforeConnect\strike0\{linkID=3910>main\}
\par }
3890
Scribble3890
TInstantConnector.AfterDisconnect
AfterDisconnect;AfterDisconnect,TInstantConnector;TInstantConnector,AfterDisconnect;



Imported
main

AfterDisconnect;AfterDisconnect_Property;TInstantConnector_AfterDisconnect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.AfterDisconnect \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=3900\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs after the connection is closed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  AfterDisconnect: TNotifyEvent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an AfterDisconnect event handler to take actions after the connector component closes the connection to the database.
\par 
\par }
3900
Scribble3900





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.BeforeDisconnect\strike0\{linkID=3930>main\}
\par }
3910
Scribble3910
TInstantConnector.BeforeConnect
BeforeConnect;BeforeConnect,TInstantConnector;TInstantConnector,BeforeConnect;



Imported
main

BeforeConnect;BeforeConnect_Property;TInstantConnector_BeforeConnect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.BeforeConnect \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=3920\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs before the connection is opened.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  BeforeConnect: TNotifyEvent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write a BeforeConnect event handler to take actions before the connector component opens the connection to the database.
\par 
\par }
3920
Scribble3920





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.AfterConnect\strike0\{linkID=3870>main\}
\par }
3930
Scribble3930
TInstantConnector.BeforeDisconnect
BeforeDisconnect;BeforeDisconnect,TInstantConnector;TInstantConnector,BeforeDisconnect;



Imported
main

BeforeDisconnect;BeforeDisconnect_Property;TInstantConnector_BeforeDisconnect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.BeforeDisconnect \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=3940\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs before the connection is closed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  BeforeDisconnect: TNotifyEvent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write a BeforeDisconnect event handler to take actions before the connector component closes the connection to the database.
\par 
\par }
3940
Scribble3940





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.AfterDisconnect\strike0\{linkID=3890>main\}
\par }
3950
Scribble3950
TInstantConnector.Broker
Broker;Broker,TInstantConnector;TInstantConnector,Broker;



Imported
main

Broker;Broker_Property;TInstantConnector_Broker
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.Broker \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 States the associated broker object.
\par \pard\sb25\sa25\b\f1 property\b0  Broker: TInstantBroker;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 States the associated broker object. The broker is used by object stores to manage objects persistently, and is database specific, like the connector object itself.
\par 
\par }
3960
Scribble3960
TInstantConnector.ClientCount
ClientCount;ClientCount,TInstantConnector;TInstantConnector,ClientCount;



Imported
main

ClientCount;ClientCount_Property;TInstantConnector_ClientCount
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.ClientCount \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=3970\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Determines the number of registered clients for the connector component
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ClientCount: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use ClientCount to determine the number of clients that depend on the connector component.
\par 
\par }
3970
Scribble3970





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.Clients\strike0\{linkID=3980>main\}
\par }
3980
Scribble3980
TInstantConnector.Clients
Clients;Clients,TInstantConnector;TInstantConnector,Clients;



Imported
main

Clients;Clients_Property;TInstantConnector_Clients
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.Clients \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=3990\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Array of the clients registered for the connector component.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Clients [\b Index\b0 : Integer]: TObject;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use the Clients array to access the clients that depend on the connector component.
\par 
\par }
3990
Scribble3990





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.ClientCount\strike0\{linkID=3960>main\}
\par \strike TInstantConnector.RegisterClient\strike0\{linkID=4210>main\}
\par \strike TInstantConnector.UnregisterClient\strike0\{linkID=4270>main\}
\par }
4000
Scribble4000
TInstantConnector.Connected
Connected;Connected,TInstantConnector;TInstantConnector,Connected;



Imported
main

Connected;Connected_Property;TInstantConnector_Connected
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.Connected \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if a connection has been established to the database.
\par \pard\sb25\sa25\b\f1 property\b0  Connected: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Set Connected to True to open the connection. Set Connected to False to close the connection. When setting the Connected value it uses the \strike Connect\strike0\{linkID=4130>main\} and \strike Disconnect\strike0\{linkID=4160>main\} methods.
\par 
\par }
4010
Scribble4010
TInstantConnector.DatabaseName
DatabaseName;DatabaseName,TInstantConnector;TInstantConnector,DatabaseName;



Imported
main

DatabaseName;DatabaseName_Property;TInstantConnector_DatabaseName
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.DatabaseName \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the name of the database the connector component connects to.
\par \pard\sb25\sa25\b\f1 property\b0  DatabaseName: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use DatabaseName to determine the name of the database the connector component connects to.
\par 
\par }
4020
Scribble4020
TInstantConnector.InTransaction
InTransaction;InTransaction,TInstantConnector;TInstantConnector,InTransaction;



Imported
main

InTransaction;InTransaction_Property;TInstantConnector_InTransaction
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.InTransaction \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if a transaction is in progress.
\par \pard\sb25\sa25\b\f1 property\b0  InTransaction: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InTransaction to determine if a transaction is currently active for the connector component. If the connector component is currently in a transaction, InTransaction is True. Otherwise InTransaction is False.
\par 
\par }
4030
Scribble4030
TInstantConnector.InUse
InUse;InUse,TInstantConnector;TInstantConnector,InUse;



Imported
main

InUse;InUse_Property;TInstantConnector_InUse
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.InUse \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if the connector component is in use.
\par \pard\sb25\sa25\b\f1 property\b0  InUse: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InUse to determine if the connector component is in use by clients that depend on the connector component in its present configuration.
\par 
\par }
4040
Scribble4040
TInstantConnector.IsDefault
IsDefault;IsDefault,TInstantConnector;TInstantConnector,IsDefault;



Imported
main

IsDefault;IsDefault_Property;TInstantConnector_IsDefault
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.IsDefault \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if the connector is the default connector of the application.
\par \pard\sb25\sa25\b\f1 property\b0  IsDefault: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use IsDefault to specify whether the connector is the default connector of the application.
\par 
\par }
4050
Scribble4050
TInstantConnector.ObjectCount
ObjectCount;ObjectCount,TInstantConnector;TInstantConnector,ObjectCount;



Imported
main

ObjectCount;ObjectCount_Property;TInstantConnector_ObjectCount
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.ObjectCount \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the number of objects using the connector.
\par \pard\sb25\sa25\b\f1 property\b0  ObjectCount: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 ObjectCount determines the number of \strike TInstantObject\strike0\{linkID=7390>main\} objects that use the connector.
\par 
\par }
4060
Scribble4060
TInstantConnector.Objects
Objects;Objects,TInstantConnector;TInstantConnector,Objects;



Imported
main

Objects;Objects_Property;TInstantConnector_Objects
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.Objects \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=4070\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Array representing the objects that use the Connector.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Objects [\b Index\b0 : Integer]: \strike TInstantObject\strike0\{linkID=7390>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use this zero-based array to programmatically access the objects that use the connector.
\par 
\par }
4070
Scribble4070





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.ObjectCount\strike0\{linkID=4050>main\}
\par }
4080
Scribble4080
TInstantConnector.UseTransactions
TInstantConnector,UseTransactions;UseTransactions;UseTransactions,TInstantConnector;



Imported


TInstantConnector_UseTransactions;UseTransactions;UseTransactions_Property
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.UseTransactions \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if the connector uses transactions.
\par \pard\sb25\sa25\b\f1 property\b0  UseTransactions: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The UseTransactions property specifies if the connector should use transactions. If UseTransactions is True, transactions are used. If UseTransaction is False any call to \strike StartTransaction\strike0\{linkID=4250>main\}, \strike CommitTransaction\strike0\{linkID=4110>main\} and \strike RollbackTransaction\strike0\{linkID=4230>main\} is suppressed.
\par 
\par }
4090
Scribble4090
TInstantConnector.BuildDatabase 1
BuildDatabase,1;BuildDatabase 1,TInstantConnector;TInstantConnector,BuildDatabase;



Imported
main

BuildDatabase_1;BuildDatabase1_Method;TInstantConnector_BuildDatabase1
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.BuildDatabase 1 \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\lang1033\f1\tab\cf2\strike BuildDatabase 2\cf3\strike0\{linkID=4100>main\}\cf1\lang1040\f0\{keepn\} 
\par \pard\sb25\sa85\fs18 Builds the database.
\par \pard\sb25\sa25\b\f2 procedure\b0  \strike BuildDatabase\strike0\{linkID=4100>main\}(Model: TInstantModel); \b overload\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call \strike BuildDatabase\strike0\{linkID=4100>main\} to build a database for the application. The Model argument specifies the model for which a database should be created. If this argument is unassigned (the default), a database is created for all classes that constitute the business model of the application.
\par 
\par }
4100
Scribble4100
TInstantConnector.BuildDatabase 2
BuildDatabase,2;BuildDatabase 2,TInstantConnector;TInstantConnector,BuildDatabase;



Imported
main

BuildDatabase_2;BuildDatabase2_Method;TInstantConnector_BuildDatabase2
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.BuildDatabase 2 \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\lang1033\f1\tab\cf2\strike BuildDatabase 1\cf3\strike0\{linkID=4090>main\}\cf1\lang1040\f0\{keepn\} 
\par \pard\sb25\sa85\fs18 Builds a database for an array of classes.
\par \pard\sb25\sa25\b\f2 procedure\b0  BuildDatabase(AClasses: \b array\b0  \b of\b0  TInstantObjectClass); \b overload\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the BuildDatabase method to build a database for an array of classes. For relational databases, much attention should be given to the class hierarchy and mapping strategy when building databases for a selection of classes rather than the complete model.
\par 
\par }
4110
Scribble4110
TInstantConnector.CommitTransaction
CommitTransaction;CommitTransaction,TInstantConnector;TInstantConnector,CommitTransaction;



Imported
main

CommitTransaction;CommitTransaction_Method;TInstantConnector_CommitTransaction
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.CommitTransaction \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=4120\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Commits the active transaction.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  CommitTransaction;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call CommitTransaction to commit changes made during the active transaction to the database and to end the transaction.
\par 
\par }
4120
Scribble4120





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.RollbackTransaction\strike0\{linkID=4230>main\}
\par \strike TInstantConnector.StartTransaction\strike0\{linkID=4250>main\}
\par }
4130
Scribble4130
TInstantConnector.Connect
Connect;Connect,TInstantConnector;TInstantConnector,Connect;



Imported
main

Connect;Connect_Method;TInstantConnector_Connect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.Connect \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=4140\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Opens the connection to the database.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Connect;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Connect to establish a connection to the database. After the connection has been established the \strike Connected\strike0\{linkID=4000>main\} property is True. Connect generates a \strike BeforeConnect\strike0\{linkID=3910>main\} event before the trying to connect, and an \strike AfterConnect\strike0\{linkID=3870>main\} event after the connection is established.
\par 
\par }
4140
Scribble4140





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.Connected\strike0\{linkID=4000>main\}
\par \strike TInstantConnector.Disconnect\strike0\{linkID=4160>main\}
\par }
4150
Scribble4150
TInstantConnector.CreateQuery
CreateQuery;CreateQuery,TInstantConnector;TInstantConnector,CreateQuery;



Imported
main

CreateQuery;CreateQuery_Method;TInstantConnector_CreateQuery
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.CreateQuery \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Creates and returns an instance of a Query object.
\par \pard\sb25\sa25\b\f1 function\b0  CreateQuery: TInstantQuery;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call CreateQuery to obtain an instance of a TInstantQuery descendant appropriate for the kind of database the connector is connected to.
\par 
\par }
4160
Scribble4160
TInstantConnector.Disconnect
Disconnect;Disconnect,TInstantConnector;TInstantConnector,Disconnect;



Imported
main

Disconnect;Disconnect_Method;TInstantConnector_Disconnect
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.Disconnect \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=4170\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Closes the connection.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Disconnect;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Close to disconnect from the database. Disconnect generates a \strike BeforeDisconnect\strike0\{linkID=3930>main\} event before the trying to close the connection, and an \strike AfterDisconnect\strike0\{linkID=3890>main\} event after the connection is closed. If the connection is in use, trying to disconnect raises an exception.
\par 
\par }
4170
Scribble4170





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.Connect\strike0\{linkID=4130>main\}
\par \strike TInstantConnector.InUse\strike0\{linkID=4030>main\}
\par }
4180
Scribble4180
TInstantConnector.EnsureObjectStore
EnsureObjectStore;EnsureObjectStore,TInstantConnector;TInstantConnector,EnsureObjectStore;



Imported
main

EnsureObjectStore;EnsureObjectStore_Method;TInstantConnector_EnsureObjectStore
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.EnsureObjectStore \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns an object store for a specified class type.
\par \pard\sb25\sa25\b\f1 function\b0  EnsureObjectStore(AClass: TInstantObjectClass): TInstantObjectStore;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Returns an object store capable of managing objects of the class type specified as the AClass argument. Object stores are used internally by the persistence mechanism of InstantObjects, and it should not be necessary to use them directly.
\par 
\par }
4190
Scribble4190
TInstantConnector.GenerateId
GenerateId;GenerateId,TInstantConnector;TInstantConnector,GenerateId;



Imported
main

GenerateId;GenerateId_Method;TInstantConnector_GenerateId
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.GenerateId \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=4200\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Generates an unique id.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  GenerateId: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call this method to generate an unique Id. The method returns a GUID by default, but the specialized object brokers may return a value specific for the database engine they support.
\par 
\par }
4200
Scribble4200





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.GenerateId\strike0\{linkID=8720>main\}
\par }
4210
Scribble4210
TInstantConnector.RegisterClient
RegisterClient;RegisterClient,TInstantConnector;TInstantConnector,RegisterClient;



Imported
main

RegisterClient;RegisterClient_Method;TInstantConnector_RegisterClient
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.RegisterClient \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=4220\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Registers an object that uses the connector component.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  RegisterClient(Client: TObject);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use RegisterClient to associate an object with the connector component.
\par 
\par }
4220
Scribble4220





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.UnregisterClient\strike0\{linkID=4270>main\}
\par }
4230
Scribble4230
TInstantConnector.RollbackTransaction
RollbackTransaction;RollbackTransaction,TInstantConnector;TInstantConnector,RollbackTransaction;



Imported
main

RollbackTransaction;RollbackTransaction_Method;TInstantConnector_RollbackTransaction
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.RollbackTransaction \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=4240\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Rolls back the active transaction.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  RollbackTransaction;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call RollbackTransaction to cancel any changes made during the active transaction and to end the transaction.
\par 
\par }
4240
Scribble4240





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.CommitTransaction\strike0\{linkID=4110>main\}
\par \strike TInstantConnector.StartTransaction\strike0\{linkID=4250>main\}
\par }
4250
Scribble4250
TInstantConnector.StartTransaction
StartTransaction;StartTransaction,TInstantConnector;TInstantConnector,StartTransaction;



Imported
main

StartTransaction;StartTransaction_Method;TInstantConnector_StartTransaction
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.StartTransaction \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=4260\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Initiates a new transaction.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  StartTransaction;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call StartTransaction to start a new transaction in the database the connector component is connected to.
\par 
\par }
4260
Scribble4260





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.CommitTransaction\strike0\{linkID=4110>main\}
\par \strike TInstantConnector.RollbackTransaction\strike0\{linkID=4230>main\}
\par }
4270
Scribble4270
TInstantConnector.UnregisterClient
TInstantConnector,UnregisterClient;UnregisterClient;UnregisterClient,TInstantConnector;



Imported
main

TInstantConnector_UnregisterClient;UnregisterClient;UnregisterClient_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.UnregisterClient \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantConnector\strike0\{linkID=3770>main\}\tab\ul See Also\ulnone\{linkID=4280\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Unregisters an object that uses the connector component.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  UnregisterClient(Client: TObject);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use UnregisterClient to remove an association between an object and the connector component.
\par 
\par }
4280
Scribble4280





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.RegisterClient\strike0\{linkID=4210>main\}
\par }
4290
Scribble4290
TInstantConnector.BeforeBuildDatabase
BeforeBuildDatabase;BeforeBuildDatabase,TInstantConnector;TInstantConnector,BeforeBuildDatabase;



Imported
main

BeforeBuildDatabase;BeforeBuildDatabase_Event;TInstantConnector_BeforeBuildDatabase
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnector.BeforeBuildDatabase \cf1\b0\fs16 
\par \cf2\strike TInstantConnector\cf3\strike0\{linkID=3770>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs before the database is build.
\par \pard\sb25\sa25\b\f1 property\b0  BeforeBuildDatabase: \strike TInstantSchemeEvent\strike0\{linkID=12530>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write a BeforeBuildDatabase event handler to take specific action before a database is build. The event is particularly useful if modifications or additions should be made to the database scheme like adding indices.
\par 
\par }
4300
Scribble4300
TInstantContainer
TInstantContainer;


classessymbol:000210
Imported
main

TInstantContainer;TInstantContainer_Object
FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil Arial;}{\f4\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4260\tx5680\ul Hierarchy\ulnone\{linkID=4310\}\tab\strike Members\strike0\{linkID=4380>nav\}\tab\strike Properties\strike0\{linkID=4330>nav\}\tab\strike Methods\strike0\{linkID=4360>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 TInstantContainer is the ancestor of attribute classes that represent a relationship with multiple objects.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantContainer = \b class\b0 (\strike TInstantComplex\strike0\{linkID=3190>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantContainer is the ancestor of attribute classes that represent a relationship with multiple objects. TInstantContainer introduces common properties and methods to:
\par \pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent0{\pntxtb\'B7}}\fi-295\li495\sb25\sa25\tx480\strike Add\strike0\{linkID=4450>main\}, \strike Remove\strike0\{linkID=4620>main\} and find objects.
\par {\pntext\f4\'B7\tab}Load and Save the objects it represents from and to a stream.
\par \strike{\pntext\f4\'B7\tab}Sort\strike0\{linkID=4660>main\} objects
\par \pard\fi-295\li495\sb25\sa25\tx495 
\par \pard\sb25\sa25\tx480 TInstantContainer is abstract; so do not create instances of this class. Instead refer to the following concrete\f2  \f0 descendant classes: 
\par \pard\sb25\sa25\f3\fs10 
\par \pard\sb25\sa25\tx280\lang1033\b\f2\fs18\tab\lang1040\f0 Container attribute classes\ul 
\par \lang1033\ulnone\b0\f2\tab\lang1040\strike\f0 TInstantParts\strike0\{linkID=9390>main\}
\par \lang1033\f2\tab\lang1040\strike\f0 TInstantReferences\strike0\{linkID=9780>main\}
\par \pard 
\par }
4310
Scribble4310





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3190>main\}
\par \tab |
\par \strike TInstantContainer\strike0\{linkID=4300>main\}
\par 
\par }
4320
Scribble4320





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantContainer Fields \cf1\b0\fs16 
\par \strike TInstantContainer\strike0\{linkID=4300>main\}\{keepn\} 
\par 
\par }
4330
Scribble4330





Imported



FALSE
34
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantContainer Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantContainer\strike0\{linkID=4300>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=4340\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantContainer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ChangeCount\strike0\{linkID=4400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Count\strike0\{linkID=4410>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Items\strike0\{linkID=4430>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3300>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3340>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
4340
Scribble4340





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
4350
Scribble4350





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantContainer Events \cf1\b0\fs16 
\par \strike TInstantContainer\strike0\{linkID=4300>main\}\cf0\{keepn\}\cf1 
\par 
\par }
4360
Scribble4360





Imported



FALSE
38
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantContainer Methods \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantContainer\strike0\{linkID=4300>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=4370\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantContainer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Add\strike0\{linkID=4450>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=4470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=4480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Delete\strike0\{linkID=4490>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=4510>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Exchange\strike0\{linkID=4520>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasItem\strike0\{linkID=4540>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOf\strike0\{linkID=4550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Insert\strike0\{linkID=4560>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadObjectsFromStream\strike0\{linkID=4580>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Move\strike0\{linkID=4600>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=4620>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveObjectsToStream\strike0\{linkID=4640>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Sort\strike0\{linkID=4660>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3360>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3370>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3380>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
4370
Scribble4370





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
4380
Scribble4380





Imported



FALSE
25
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantContainer Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantContainer\strike0\{linkID=4300>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=4390\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ChangeCount\strike0\{linkID=4400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Count\strike0\{linkID=4410>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Items\strike0\{linkID=4430>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Add\strike0\{linkID=4450>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=4470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=4480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Delete\strike0\{linkID=4490>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=4510>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Exchange\strike0\{linkID=4520>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasItem\strike0\{linkID=4540>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOf\strike0\{linkID=4550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Insert\strike0\{linkID=4560>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadObjectsFromStream\strike0\{linkID=4580>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Move\strike0\{linkID=4600>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=4620>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveObjectsToStream\strike0\{linkID=4640>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Sort\strike0\{linkID=4660>main\}
\par 
\par }
4390
Scribble4390





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
4400
Scribble4400
TInstantContainer.ChangeCount
ChangeCount;ChangeCount,TInstantContainer;TInstantContainer,ChangeCount;



Imported
main

ChangeCount;ChangeCount_Property;TInstantContainer_ChangeCount
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.ChangeCount \cf1\b0\fs16 
\par \cf2\strike TInstantContainer\cf3\strike0\{linkID=4300>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the number of changed objects in the container.
\par \pard\sb25\sa25\b\f1 property\b0  ChangeCount: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use ChangeCount to determine the number of changed objects in the container. ChangeCount checks the IsChanged property of the individual objects.
\par 
\par }
4410
Scribble4410
TInstantContainer.Count
Count;Count,TInstantContainer;TInstantContainer,Count;



Imported
main

Count;Count_Property;TInstantContainer_Count
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Count \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4300>main\}\tab\ul See Also\ulnone\{linkID=4420\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Determines the number of objects the in the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Count: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use Count to determine the number of objects in the containers array of objects. Count is very useful in combination with the \strike Items\strike0\{linkID=4430>main\} property to iterate over the objects in the containers array of objects.
\par 
\par }
4420
Scribble4420





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Items\strike0\{linkID=4430>main\}
\par }
4430
Scribble4430
TInstantContainer.Items
Items;Items,TInstantContainer;TInstantContainer,Items;



Imported
main

Items;Items_Property;TInstantContainer_Items
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Items \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4300>main\}\tab\ul See Also\ulnone\{linkID=4440\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies a reference to an object at a given position in the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Items [\b Index\b0 : Integer]: \strike TInstantObject\strike0\{linkID=7390>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use Objects to obtain a reference or change a reference to an object at a specified position in the containers array of objects. The Index argument indicates the zero-based index of the object. Use Items with the \strike Count\strike0\{linkID=4410>main\} property to iterate through all of the objects in the containers array of objects.
\par 
\par }
4440
Scribble4440





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Count\strike0\{linkID=4410>main\}
\par }
4450
Scribble4450
TInstantContainer.Add
Add;Add,TInstantContainer;TInstantContainer,Add;



Imported
main

Add;Add_Method;TInstantContainer_Add
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Add \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4300>main\}\tab\ul See Also\ulnone\{linkID=4460\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Adds an object to the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  Add(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}): Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Add to add an object at the end of the containers array of objects. If the object that is added does not comply with the validation rules of the attribute, an exception is raised.
\par 
\par }
4460
Scribble4460





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Insert\strike0\{linkID=4560>main\}
\par }
4470
Scribble4470
TInstantContainer.AttachObject
AttachObject;AttachObject,TInstantContainer;TInstantContainer,AttachObject;



Imported
main

AttachObject;AttachObject_Method;TInstantContainer_AttachObject
FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.AttachObject \cf1\b0\fs16 
\par \cf2\strike TInstantContainer\cf3\strike0\{linkID=4300>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Attaches an object to the attribute.
\par \pard\sb25\sa25\b\f1 function\b0  AttachObject(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}): Boolean; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Attaches the object specified by the AObject argument to the attribute.
\par For the descendant classes of TInstantComplex this implies: 
\par 
\par \pard\sb25\sa25\tx2300\ul\b Class\tab Action\f2                                                                                        \ulnone\b0\f0 
\par TInstantElement\tab AObject is assigned as the attributes Value
\par TInstantContainer\tab AObject is added to the objects array
\par \pard\sb25\sa25\tx3120 
\par If the object is successfully attached, the function returns True. Otherwise the function returns False.
\par \pard 
\par }
4480
Scribble4480
TInstantContainer.Clear
Clear;Clear,TInstantContainer;TInstantContainer,Clear;



Imported
main

Clear;Clear_Method;TInstantContainer_Clear
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Clear \cf1\b0\fs16 
\par \cf2\strike TInstantContainer\cf3\strike0\{linkID=4300>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Clears the containers array of objects.
\par \pard\sb25\sa25\b\f1 procedure\b0  Clear;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Clear to clear the containers array of objects. The number of objects in the container will hereafter be zero.
\par 
\par }
4490
Scribble4490
TInstantContainer.Delete
Delete;Delete,TInstantContainer;TInstantContainer,Delete;



Imported
main

Delete;Delete_Method;TInstantContainer_Delete
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Delete \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4300>main\}\tab\ul See Also\ulnone\{linkID=4500\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Deletes an object from the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Delete(\b Index\b0 : Integer);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Delete to delete the object at the position specified by the zero-based Index argument from the containers array of objects.
\par 
\par }
4500
Scribble4500





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Remove\strike0\{linkID=4620>main\}
\par }
4510
Scribble4510
TInstantContainer.DetachObject
DetachObject;DetachObject,TInstantContainer;TInstantContainer,DetachObject;



Imported
main

DetachObject;DetachObject_Method;TInstantContainer_DetachObject
FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.DetachObject \cf1\b0\fs16 
\par \cf2\strike TInstantContainer\cf3\strike0\{linkID=4300>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Detaches an object from the attribute.
\par \pard\sb25\sa25\b\f1 function\b0  DetachObject(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}): Boolean; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description\b0 
\par \pard 
\par Detaches the object specified by the AObject argument from the attribute.
\par For the descendant classes of TInstantComplex this implies: 
\par 
\par \pard\tx2340\ul\b Class\tab Action\f2                                                                                                      \ulnone\b0\f0 
\par TInstantElement\tab if the attribute Value equals AObject, the Value is set to nil.
\par TInstantContainer\tab AObject is removed from the attributes array of objects.
\par \pard 
\par If the object is successfully detached, the function returns True. Otherwise the function returns False.
\par }
4520
Scribble4520
TInstantContainer.Exchange
Exchange;Exchange,TInstantContainer;TInstantContainer,Exchange;



Imported
main

Exchange;Exchange_Method;TInstantContainer_Exchange
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Exchange\cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4300>main\}\tab\ul See Also\ulnone\{linkID=4530\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Swaps the position of two objects in the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Exchange(Index1: Integer; Index2: Integer);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Exchange to swap the positions of the objects at positions specified by the zero-based Index1 and Index2 arguments in the containers array of objects.
\par 
\par }
4530
Scribble4530





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Move\strike0\{linkID=4600>main\}
\par }
4540
Scribble4540
TInstantContainer.HasItem
HasItem;HasItem,TInstantContainer;TInstantContainer,HasItem;



Imported
main

HasItem;HasItem_Method;TInstantContainer_HasItem
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.HasItem \cf1\b0\fs16 
\par \cf2\strike TInstantContainer\cf3\strike0\{linkID=4300>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if an Item at a specified position is assigned.
\par \pard\sb25\sa25\b\f1 function\b0  HasItem(\b Index\b0 : Integer): Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call the HasItem method to Determine if the Item at the position in the \strike Items\strike0\{linkID=4430>main\} array specified by the Index argument is assigned. If the Item is assigned, HasItem returns true. The HasItem only checks the in memory reference to the Item.
\par 
\par }
4550
Scribble4550
TInstantContainer.IndexOf
IndexOf;IndexOf,TInstantContainer;TInstantContainer,IndexOf;



Imported
main

IndexOf;IndexOf_Method;TInstantContainer_IndexOf
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.IndexOf \cf1\b0\fs16 
\par \cf2\strike TInstantContainer\cf3\strike0\{linkID=4300>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns the index of a specified object in the containers array of objects.
\par \pard\sb25\sa25\b\f1 function\b0  IndexOf(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call IndexOf to get the zero-based index for a specified object in the containers array of objects. If an object is not found, IndexOf returns -1. If an object appears more than once, IndexOf returns the index of the first occurrence of the object.
\par 
\par }
4560
Scribble4560
TInstantContainer.Insert
Insert;Insert,TInstantContainer;TInstantContainer,Insert;



Imported
main

Insert;Insert_Method;TInstantContainer_Insert
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Insert \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4300>main\}\tab\ul See Also\ulnone\{linkID=4570\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Adds an object at a given position in the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Insert(\b Index\b0 : Integer; AObject: \strike TInstantObject\strike0\{linkID=7390>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Insert to add an object at a position specified by the zero-based Index argument. Insert adds the object at the specified position in the containers array of objects, shifting the object that previously occupied that position, and all subsequent objects, up. If the object that is inserted does not comply with the validation rules of the attribute, an exception is raised.
\par 
\par }
4570
Scribble4570





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Add\strike0\{linkID=4450>main\}
\par }
4580
Scribble4580
TInstantContainer.LoadObjectsFromStream
LoadObjectsFromStream;LoadObjectsFromStream,TInstantContainer;TInstantContainer,LoadObjectsFromStream;



Imported
main

LoadObjectsFromStream;LoadObjectsFromStream_Method;TInstantContainer_LoadObjectsFromStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.LoadObjectsFromStream \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4300>main\}\tab\ul See Also\ulnone\{linkID=4590\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Loads one or more object from a stream into the attribute.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  LoadObjectsFromStream(AStream: TStream);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call LoadObjectsFromStream to load one or more objects from a stream into the attribute. The stream that holds the objects is passed as the Stream argument. If the object in the stream does not comply with the validation rules of the attribute, an exception is raised.
\par 
\par }
4590
Scribble4590





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.SaveObjectsToStream\strike0\{linkID=4640>main\}
\par }
4600
Scribble4600
TInstantContainer.Move
Move;Move,TInstantContainer;TInstantContainer,Move;



Imported
main

Move;Move_Method;TInstantContainer_Move
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Move \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4300>main\}\tab\ul See Also\ulnone\{linkID=4610\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Changes the position of an object in the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Move(CurIndex: Integer; NewIndex: Integer);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Move to move the object at the position specified by the CurIndex so that it afterwards occupies the position NewIndex. Both CurIndex and NewIndex are zero-base indexes into the containers array of objects.
\par 
\par }
4610
Scribble4610





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Exchange\strike0\{linkID=4520>main\}
\par }
4620
Scribble4620
TInstantContainer.Remove
Remove;Remove,TInstantContainer;TInstantContainer,Remove;



Imported


Remove;Remove_Method;TInstantContainer_Remove
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Remove \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4300>main\}\tab\ul See Also\ulnone\{linkID=4630\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Removes an object from the containers array of objects.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  Remove(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}): Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Remove to remove an object from the containers array of objects.
\par 
\par }
4630
Scribble4630





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Delete\strike0\{linkID=4490>main\}
\par }
4640
Scribble4640
TInstantContainer.SaveObjectsToStream
SaveObjectsToStream;SaveObjectsToStream,TInstantContainer;TInstantContainer,SaveObjectsToStream;



Imported
main

SaveObjectsToStream;SaveObjectsToStream_Method;TInstantContainer_SaveObjectsToStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.SaveObjectsToStream \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantContainer\strike0\{linkID=4300>main\}\tab\ul See Also\ulnone\{linkID=4650\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Saves the objects the attribute holds to a stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  SaveObjectsToStream(AStream: TStream);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call SaveObjectToStream to save the object the attribute holds to a stream. The stream that the object should be saved to is passed as the Stream argument.
\par 
\par }
4650
Scribble4650





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.LoadObjectsFromStream\strike0\{linkID=4580>main\}
\par }
4660
Scribble4660
TInstantContainer.Sort
Sort;Sort,TInstantContainer;TInstantContainer,Sort;



Imported
main

Sort;Sort_Method;TInstantContainer_Sort
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContainer.Sort \cf1\b0\fs16 
\par \cf2\strike TInstantContainer\cf3\strike0\{linkID=4300>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Sorts the objects in the container based on comparison function.
\par \pard\sb25\sa25\b\f1 procedure\b0  Sort(Compare: \strike TInstantSortCompare\strike0\{linkID=12540>main\});
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Sort to QuickSort the objects in the container. Compare is a comparison function that indicates how the items are to be ordered.
\par 
\par }
4670
Scribble4670
TInstantCurrency
TInstantCurrency;


classessymbol:000220
Added



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fnil\fcharset0 Arial;}{\f1\fnil Arial;}{\f2\fswiss Arial;}{\f3\fswiss\fcharset0 Arial;}{\f4\fmodern Courier New;}{\f5\fmodern\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1033\b\fs24 TInstantCurrency\cf1\lang3081\b0\f1\fs18 
\par \pard\sb25\tx1400\tx2840\tx4260\tx5680\lang1040\ul\f2\fs16 Hierarchy\ulnone\{linkID=4690\}\tab\strike Members\strike0\{linkID=4760>nav\}\tab\strike Properties\strike0\{linkID=4710>nav\}\tab\ul See Also\ulnone\{linkID=4680\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 TInstant\lang1033\f3 Currency \lang1040\f2 represents a \lang1033\f3 Currency \lang1040\f2 value.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f4 TInstant\lang1033\f5 Currency\lang1040\f4  = \b class\b0 (\strike TInstantNumeric\strike0\{linkID=7290>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f2 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstant\lang1033\f3 Currency\lang1040\f2  holds a \lang1033\f3 Currency \lang1040\f2 as its value.
\par \pard\lang3081\f1 
\par 
\par }
4680
Scribble4680





Added



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantInteger\strike0\{linkID=7070>main\}
\par \strike TInstant\lang1033\f1 Float\lang1040\strike0\f0\{linkID=6840>main\}
\par 
\par }
4690
Scribble4690





Added



FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10430>main\}
\par \tab |
\par \strike TInstantNumeric\strike0\{linkID=7290>main\}
\par \tab |
\par \strike TInstantCurrency\strike0\{linkID=4670>main\}
\par 
\par }
4700
Scribble4700





Added



FALSE
6
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstant\lang1033\f1 Currency\lang1040\f0  Fields \cf1\b0\fs16  
\par \strike TInstant\lang1033\f1 Currency\lang1040\strike0\f0\{linkID=4670>main\}\{keepn\}
\par 
\par }
4710
Scribble4710





Added



FALSE
27
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstant\lang1033\f1 Currency \lang1040\f0 Properties \cf1\b0\fs16 
\par \strike TInstant\lang1033\f1 Currency\lang1040\strike0\f0\{linkID=4670>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=4720\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstant\lang1033\f1 Currency\lang1040\f0 
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=6950>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
4720
Scribble4720





Added



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
4730
Scribble4730





Added



FALSE
6
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstant\lang1033\f1 Currency\lang1040\f0  Events \cf1\b0\fs16 
\par \strike TInstant\lang1033\f1 Currency\lang1040\strike0\f0\{linkID=4670>main\}\cf0\{keepn\}\cf1 
\par 
\par }
4740
Scribble4740





Added



FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstant\lang1033\f1 Currency\lang1040\f0  Methods \cf1\b0\fs16 
\par \strike TInstant\lang1033\f1 Currency\lang1040\strike0\f0\{linkID=4670>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=4750\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
4750
Scribble4750





Added



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
4760
Scribble4760





Added



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstant\lang1033\f1 Currency\lang1040\f0  Members \cf1\b0\fs16 
\par \strike TInstant\lang1033\f1 Currency\lang1040\strike0\f0\{linkID=4670>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=4770\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=4780>main\}
\par 
\par }
4770
Scribble4770





Added



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
4780
Scribble4780
TInstantCurrency.Value
TInstantCurrency,Value;Value;Value,TInstantCurrency;



Added
main

TInstantCurrency_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCurrency.Value \cf1\b0\fs16 
\par \cf2\strike TInstantCurrency\cf3\strike0\{linkID=4670>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the Currency\lang1033\f1  \lang1040\f0 attribute
\par \pard\sb25\sa25\b\f2 property\b0  Value: Currency;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the Currency\lang1033\f1  \lang1040\f0 attribute.
\par 
\par }
4790
Scribble4790
TInstantCustomExposer
TInstantCustomExposer;


classessymbol:000230
Imported
main

TInstantCustomExposer;TInstantCustomExposer_Object
FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5720\tx7100\cf2\ul Hierarchy\cf3\ulnone\{linkID=4800\}\cf1\tab\cf2\strike Members\cf3\strike0\{linkID=4880>nav\}\cf1\tab\cf2\strike Properties\cf3\strike0\{linkID=4820>nav\}\cf1\tab\cf2\strike Methods\cf3\strike0\{linkID=4860>nav\}\cf1\tab\cf2\strike Events\cf3\strike0\{linkID=4840>nav\}\cf1\tab\cf2\strike Unit: InstantPresentation\cf3\strike0\{linkID=13100>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 The ancestor of components that make objects accessible via data-aware controls.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\f1 TInstantCustomExposer = \b class\b0 (TDataSet)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantCustomExposer is the ancestor of components that make objects accessible via standard data-aware controls by exposing the objects in rows and columns. The rows represent the individual objects and the columns represent properties of the objects.
\par TInstantCustomExposer is not limited to exposing instances of \cf2\strike TInstantObject\cf3\strike0\{linkID=7390>main\}\cf1  descendants but may expose instances of any class that has published properties. The object that is exposed is specified by the \cf2\strike Subject\cf3\strike0\{linkID=5150>main\}\cf1  property.
\par In addition to the \lang1033\f2 simple \lang1040\f0 published properties, any container attributes within an exposed object \lang1033\f2 can be made\lang1040\f0  available as nested datasets, if the object is a \cf2\strike TInstantObject\cf3\strike0\{linkID=7390>main\}\cf1 .\lang1033\f2  See the \cf2\strike FieldOptions\cf3\strike0\{linkID=4930>main\}\cf1  property for more information.\lang1040\f0 
\par An exposer can expose a single object (object mode) or multiple objects (content mode), by setting the \cf2\strike Mode\cf3\strike0\{linkID=5020>main\}\cf1  property accordingly.
\par TInstantCustomExposer is abstract; so do not create instances of this class. Instead refer to the following concrete descendant classes: 
\par \pard\sb25\sa25\f3\fs10 
\par \pard\sb25\sa25\tx260\tx2840\tx4280\tx5720\lang1033\b\f2\fs18\tab\lang1040\f0 Concrete exposer classes\b0 
\par \lang1033\f2\tab\cf2\lang1040\strike\f0 TInstantExposer\cf3\strike0\{linkID=6450>main\}\cf1 
\par \lang1033\f2\tab\cf2\lang1040\strike\f0 TInstantSelector\cf3\strike0\{linkID=10200>main\}\cf1 
\par \pard 
\par 
\par }
4800
Scribble4800





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TDataSet
\par \pard\li95\tx355\tab |
\par \strike TInstantCustomExposer\strike0\{linkID=4790>main\}
\par 
\par }
4810
Scribble4810





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCustomExposer Fields \cf1\b0\fs16  
\par \strike TInstantCustomExposer\strike0\{linkID=4790>main\}\{keepn\}
\par 
\par }
4820
Scribble4820





Imported



FALSE
25
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCustomExposer Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=4830\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Accessor\strike0\{linkID=4900>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ContainerName\strike0\{linkID=4910>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike CurrentObject\strike0\{linkID=4920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike FieldOptions\strike0\{linkID=4930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike HasSubject\strike0\{linkID=4950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsChanged\strike0\{linkID=4960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Is\lang1033\f1 Subject\lang1040\f0 Changed\strike0\{linkID=4980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Limited\strike0\{linkID=5000>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Mode\strike0\{linkID=5020>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClass\strike0\{linkID=5030>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClassName\strike0\{linkID=5050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=5070>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=5090>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Options\strike0\{linkID=5110>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ReadOnly\strike0\{linkID=5120>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Sorted\strike0\{linkID=5130>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Subject\strike0\{linkID=5150>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike TotalCount\strike0\{linkID=5160>main\}
\par 
\par }
4830
Scribble4830





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
4840
Scribble4840





Imported



FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCustomExposer Events \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=4850\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCompare\strike0\{linkID=5520>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateObject\strike0\{linkID=5540>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnFieldError\strike0\{linkID=5550>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIncludeField\strike0\{linkID=5570>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitField\strike0\{linkID=5600>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitFieldDef\strike0\{linkID=5620>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnLimit\strike0\{linkID=5640>main\}
\par 
\par }
4850
Scribble4850





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
4860
Scribble4860





Imported



FALSE
33
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCustomExposer Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=4870\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddObject\strike0\{linkID=5180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ApplyChanges\strike0\{linkID=5190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AssignFieldValue\strike0\{linkID=5200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ChangesDisabled\strike0\{linkID=5210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=5230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DeleteObject\strike0\{linkID=5240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DisableChanges\strike0\{linkID=5260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnableChanges\strike0\{linkID=5280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetFieldStrings\strike0\{linkID=5300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GotoObject\strike0\{linkID=5310>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike HandleFieldError\strike0\{linkID=5320>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike IncludeField\strike0\{linkID=5330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOfObject\strike0\{linkID=5340>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitField\strike0\{linkID=5350>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitFieldDef\strike0\{linkID=5360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike InsertObject\strike0\{linkID=5370>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFields\strike0\{linkID=5380>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike PostChanges\strike0\{linkID=5390>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshCurrentObject\strike0\{linkID=5400>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshData\strike0\{linkID=5410>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReleaseObject\strike0\{linkID=5420>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remember\strike0\{linkID=5430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RemoveObject\strike0\{linkID=5450>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Reset\strike0\{linkID=5470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Revert\strike0\{linkID=5480>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Undo\strike0\{linkID=5500>main\}
\par 
\par }
4870
Scribble4870





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
4880
Scribble4880





Imported



FALSE
60
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantCustomExposer Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=4890\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Accessor\strike0\{linkID=4900>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ContainerName\strike0\{linkID=4910>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike CurrentObject\strike0\{linkID=4920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike FieldOptions\strike0\{linkID=4930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike HasSubject\strike0\{linkID=4950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsChanged\strike0\{linkID=4960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Is\lang1033\f1 Subject\lang1040\f0 Changed\strike0\{linkID=4980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Limited\strike0\{linkID=5000>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Mode\strike0\{linkID=5020>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClass\strike0\{linkID=5030>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClassName\strike0\{linkID=5050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=5070>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=5090>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Options\strike0\{linkID=5110>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ReadOnly\strike0\{linkID=5120>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Sorted\strike0\{linkID=5130>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Subject\strike0\{linkID=5150>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike TotalCount\strike0\{linkID=5160>main\}
\par \pard\sb55\sa55\tx355\b Events
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCompare\strike0\{linkID=5520>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateObject\strike0\{linkID=5540>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnFieldError\strike0\{linkID=5550>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIncludeField\strike0\{linkID=5570>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitField\strike0\{linkID=5600>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitFieldDef\strike0\{linkID=5620>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnLimit\strike0\{linkID=5640>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddObject\strike0\{linkID=5180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ApplyChanges\strike0\{linkID=5190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AssignFieldValue\strike0\{linkID=5200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ChangesDisabled\strike0\{linkID=5210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=5230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DeleteObject\strike0\{linkID=5240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DisableChanges\strike0\{linkID=5260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnableChanges\strike0\{linkID=5280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetFieldStrings\strike0\{linkID=5300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GotoObject\strike0\{linkID=5310>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike HandleFieldError\strike0\{linkID=5320>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike IncludeField\strike0\{linkID=5330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOfObject\strike0\{linkID=5340>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitField\strike0\{linkID=5350>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitFieldDef\strike0\{linkID=5360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike InsertObject\strike0\{linkID=5370>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFields\strike0\{linkID=5380>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike PostChanges\strike0\{linkID=5390>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshCurrentObject\strike0\{linkID=5400>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshData\strike0\{linkID=5410>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReleaseObject\strike0\{linkID=5420>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remember\strike0\{linkID=5430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RemoveObject\strike0\{linkID=5450>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Reset\strike0\{linkID=5470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Revert\strike0\{linkID=5480>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Undo\strike0\{linkID=5500>main\}
\par 
\par }
4890
Scribble4890





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
4900
Scribble4900
TInstantCustomExposer.Accessor
Accessor;Accessor,TInstantCustomExposer;TInstantCustomExposer,Accessor;



Imported
main

Accessor;Accessor_Property;TInstantCustomExposer_Accessor
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Accessor \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Holds the accessor that is currently being used by the exposer to access the subject.
\par \pard\sb25\sa25\b\f1 property\b0  Accessor: TInstantAccessor;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The subject being exposed by an exposer is accessed via an accessor. The purpose of the accessor is to give the exposer access to any object, regardless of its class, simply by using an accessor that is suitable for the object. The accessor allows the exposer to perform operations such as adding and removing contained objects as well as reading and writing properties of the subject or objects contained within it.
\par 
\par }
4910
Scribble4910
TInstantCustomExposer.ContainerName
ContainerName;ContainerName,TInstantCustomExposer;TInstantCustomExposer,ContainerName;



Imported
main

ContainerName;ContainerName_Property;TInstantCustomExposer_ContainerName
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ContainerName \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the name of the container whose objects are to be exposed.
\par \pard\sb25\sa25\b\f1 property\b0  ContainerName: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use ContainerName to specify the name of the container in the subject which contains the objects that are to be exposed. If the \strike Mode\strike0\{linkID=5020>main\} of the exposer is not amContent, ContainerName has no effect.
\par 
\par }
4920
Scribble4920
TInstantCustomExposer.CurrentObject
CurrentObject;CurrentObject,TInstantCustomExposer;TInstantCustomExposer,CurrentObject;



Imported
main

CurrentObject;CurrentObject_Property;TInstantCustomExposer_CurrentObject
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.CurrentObject \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the object at the current position of the exposer.
\par \pard\sb25\sa25\b\f1 property\b0  CurrentObject: TObject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Each row of an exposer represents an object. When in content mode, the CurrentObject specifies the object at the current row of the exposer. In object mode, CurrentObject will always be\lang1033\f2  the\lang1040\f0  \strike Subject\strike0\{linkID=5150>main\}.
\par 
\par }
4930
Scribble4930
TInstantCustomExposer.FieldOptions
FieldOptions;FieldOptions,TInstantCustomExposer;TInstantCustomExposer,FieldOptions;



Modified
main

FieldOptions;FieldOptions_Property;TInstantCustomExposer_FieldOptions
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fnil Arial;}{\f3\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.FieldOptions \cf1\b0\fs16  
\par \pard\sb25\tx1435\cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\tab\cf2\ul See Also\cf3\ulnone\{linkID=4940\}\cf1\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies what fields are created by default to access properties of exposed objects.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  FieldOptions: \cf2\strike TInstantFieldOptions\cf3\strike0\{linkID=12390>main\}\cf1 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The exposer uses dataset fields to access properties of exposed objects. The number of fields in an exposer influences the performance of the exposer; reducing the number of fields can increase performance. Simple published properties of the actual exposed object are always included. FieldOptions allow you to specify whether to include fields for object properties as well. In addition, you can specify whether to include published properties of the objects assigned to the object properties. To include or exclude fields for specific properties, refer to \cf2\strike OnIncludeField\cf3\strike0\{linkID=5570>main\}\cf1 .
\par \pard\sb25\sa25\f2\fs10 
\par \pard\sb25\sa25\tx1435\f0\fs18 The default \lang1033\f3 set of FieldO\lang1040\f0 ptions is [\f1 foThorough\f0 ].
\par }
4940
Scribble4940





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \cf2\strike TInstantCustomExposer.OnAddClassFieldDef\cf3\strike0\{linkID=5510>main\}\cf2\strike 
\par TInstantCustomExposer.OnIncludeField\cf3\strike0\{linkID=5570>main\}\cf1 
\par }
4950
Scribble4950
TInstantCustomExposer.HasSubject
HasSubject;HasSubject,TInstantCustomExposer;TInstantCustomExposer,HasSubject;



Imported
main

HasSubject;HasSubject_Property;TInstantCustomExposer_HasSubject
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.HasSubject \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if the exposer has a subject
\par \pard\sb25\sa25\b\f1 property\b0  HasSubject: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasSubject to determine if the exposer has a subject.
\par 
\par }
4960
Scribble4960
TInstantCustomExposer.IsChanged
IsChanged;IsChanged,TInstantCustomExposer;TInstantCustomExposer,IsChanged;



Modified


IsChanged;IsChanged_Property;TInstantCustomExposer_IsChanged
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.IsChanged \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\tab\ul See Also\ulnone\{linkID=4970\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if changes have been made to the expose\lang1033\f1 r's\lang1040\f0  \lang1033\f1 dataset fields or records\lang1040\f0 .
\par \pard\sb25\sa25\b\f2 property\b0  IsChanged: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 If \lang1033\f1 dataset records\lang1040\f0  have been added or removed or any changes have been made to \lang1033\f1 their fields\lang1040\f0 , IsChanged is True. Otherwise IsChanged is False.
\par 
\par }
4970
Scribble4970





Imported



FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.\lang1033\f1 IsSubjectChanged\lang1040\strike0\f0\{linkID=4980>main\}
\par \strike 
\par }
4980
Scribble4980
TInstantCustomExposer.IsSubjectChanged
IsSubjectChanged;IsSubjectChanged,TInstantCustomExposer;TInstantCustomExposer,IsSubjectChanged;



Added
main

IsSubjectChanged;IsSubjectChanged_Property;TInstantCustomExposer_IsSubjectChanged
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.IsSubjectChanged \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\tab\ul See Also\ulnone\{linkID=4990\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if changes have been made to the exposed subject.
\par \pard\sb25\sa25\b\f1 property\b0  IsSubjectChanged: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 If objects have been added or removed or any changes have been made to the subject or any object within the subject, IsSubjectChanged is True. Otherwise IsSubjectChanged is False.
\par 
\par }
4990
Scribble4990





Imported



FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.\lang1033\f1 IsChanged\lang1040\strike0\f0\{linkID=4960>main\}
\par \strike 
\par }
5000
Scribble5000
TInstantCustomExposer.Limited
Limited;Limited,TInstantCustomExposer;TInstantCustomExposer,Limited;



Imported
main

Limited;Limited_Property;TInstantCustomExposer_Limited
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Limited \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5010\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Specifies whether a limited set of objects within an exposed container is accessible.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Limited: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 When Limited is True, only objects that pass the inclusion criteria specified by the \strike OnLimit\strike0\{linkID=5640>main\} event are accessible. If Limited is False all objects within the exposed container are included. The limited view is applied immediately when both Limited is set to True and \strike OnLimit\strike0\{linkID=5640>main\} is assigned.
\par 
\par }
5010
Scribble5010





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.OnLimit\strike0\{linkID=5640>main\}
\par \strike TInstantCustomExposer.ObjectCount\strike0\{linkID=5070>main\}
\par \strike TInstantCustomExposer.TotalCount\strike0\{linkID=5160>main\}
\par \strike TInstantCustomExposer.Sorted\strike0\{linkID=5130>main\}
\par \strike TInstantCustomExposer.OnCompare\strike0\{linkID=5520>main\}
\par }
5020
Scribble5020
TInstantCustomExposer.Mode
Mode;Mode,TInstantCustomExposer;TInstantCustomExposer,Mode;



Imported
main

Mode;Mode_Property;TInstantCustomExposer_Mode
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Mode \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies how the attached subject is being exposed.
\par \pard\sb25\sa25\b\f1 property\b0  Mode: \strike TInstantAccessMode\strike0\{linkID=12100>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 An exposer can operate in one of two possible modes; object or content. The access mode specified in the Mode property determines the current mode of the exposer. When in object mode, the properties of the attached subject are available via dataset fields in the exposer. In content mode, the properties of objects contained in the subject are available instead. Content mode requires that the attached subject is either itself a container or that it has one or more containers that are accessible via a suitable accessor. In object mode, the exposer will have a fixed row count of one. In content mode, the number of rows will equal the number of objects in the specified container. Adding and deleting rows in content mode will result in objects being created and destroyed. Rows cannot be added nor deleted in object mode.
\par 
\par }
5030
Scribble5030
TInstantCustomExposer.ObjectClass
ObjectClass;ObjectClass,TInstantCustomExposer;TInstantCustomExposer,ObjectClass;



Imported
main

ObjectClass;ObjectClass_Property;TInstantCustomExposer_ObjectClass
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ObjectClass\cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5040\}\cf0\b  \cf1\b0\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class of objects being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClass: TClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The exposer uses dataset fields to access properties of exposed objects. ObjectClass specifies the common base class of the objects being exposed. By default, the accessor created by the exposer to access the subject will determine the class from the attached subject. \strike TInstantCustomExposer\strike0\{linkID=4790>main\} therefore introduces the ObjectClass property as read-only, but descendants may reintroduce this property as writable, allowing you to override the class determined by the accessor. \strike TInstantExposer\strike0\{linkID=6450>main\} is an example hereof.
\par 
\par }
5040
Scribble5040





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.ObjectClassName\strike0\{linkID=5050>main\}
\par }
5050
Scribble5050
TInstantCustomExposer.ObjectClassName
ObjectClassName;ObjectClassName,TInstantCustomExposer;TInstantCustomExposer,ObjectClassName;



Imported
main

ObjectClassName;ObjectClassName_Property;TInstantCustomExposer_ObjectClassName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ObjectClassName \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5060\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class name of objects being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClassName: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ObjectClassName specifies the name of the common class of the objects being exposed.
\par 
\par }
5060
Scribble5060





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.ObjectClass\strike0\{linkID=5030>main\}
\par }
5070
Scribble5070
TInstantCustomExposer.ObjectCount
ObjectCount;ObjectCount,TInstantCustomExposer;TInstantCustomExposer,ObjectCount;



Imported
main

ObjectCount;ObjectCount_Property;TInstantCustomExposer_ObjectCount
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ObjectCount \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5080\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the number of objects currently being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectCount: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 In content mode, ObjectCount will reflect the number of objects currently accessible within the exposed container. In object mode, ObjectCount will always be 1.
\par 
\par }
5080
Scribble5080





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.Objects\strike0\{linkID=5090>main\}
\par \strike TInstantCustomExposer.TotalCount\strike0\{linkID=5160>main\}
\par }
5090
Scribble5090
TInstantCustomExposer.Objects
Objects;Objects,TInstantCustomExposer;TInstantCustomExposer,Objects;



Imported
main

Objects;Objects_Property;TInstantCustomExposer_Objects
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Objects \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5100\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Array representing the objects contained by the exposed container.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Objects [\b Index\b0 : Integer]: TObject;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use this zero-based array to access the exposed objects programmatically when in content mode.
\par 
\par }
5100
Scribble5100





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.ObjectCount\strike0\{linkID=5070>main\}
\par \strike TInstantCustomExposer.TotalCount\strike0\{linkID=5160>main\}
\par }
5110
Scribble5110
TInstantCustomExposer.Options
Options;Options,TInstantCustomExposer;TInstantCustomExposer,Options;



Modified
main

Options;Options_Property;TInstantCustomExposer_Options
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Options \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the options of the exposer.
\par \pard\sb25\sa25\b\f1 property\b0  Options: \strike TInstantExposerOptions\strike0\{linkID=12340>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use \lang1033\f2 the \lang1040\f0 Options \lang1033\f2 property \lang1040\f0 to specify the options \lang1033\f2 to modify aspects of the \lang1040\f0 exposer\lang1033\f2 's behavior\lang1040\f0 .
\par \lang1033\f2 The default set of options is [\lang1040\f0 eoAutoApply\lang1033\f2 , \lang1040\f3 eoAutoRemember\lang1033\f2 ].\lang1040\f0 
\par 
\par }
5120
Scribble5120
TInstantCustomExposer.ReadOnly
ReadOnly;ReadOnly,TInstantCustomExposer;TInstantCustomExposer,ReadOnly;



Imported
main

ReadOnly;ReadOnly_Property;TInstantCustomExposer_ReadOnly
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ReadOnly \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies whether the exposer is read-only or writable.
\par \pard\sb25\sa25\b\f1 property\b0  \b ReadOnly\b0 : Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 ReadOnly determines whether the exposed objects can be modified through the exposer or not. If True, rows can be added or deleted and properties can be changed via their corresponding fields. If False, no changes can be made.
\par 
\par }
5130
Scribble5130
TInstantCustomExposer.Sorted
Sorted;Sorted,TInstantCustomExposer;TInstantCustomExposer,Sorted;



Imported
main

Sorted;Sorted_Property;TInstantCustomExposer_Sorted
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Sorted \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5140\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Specifies whether or not the exposed objects are sorted.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Sorted: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0\strike Objects\strike0\{linkID=5090>main\} in an exposed container can be sorted by assigning an \strike OnCompare\strike0\{linkID=5520>main\} event handler. The Sorted property determines whether sorting is enabled or not.
\par 
\par }
5140
Scribble5140





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.OnCompare\strike0\{linkID=5520>main\}
\par \strike TInstantCustomExposer.Limited\strike0\{linkID=5000>main\}
\par \strike TInstantCustomExposer.OnLimit\strike0\{linkID=5640>main\}
\par }
5150
Scribble5150
TInstantCustomExposer.Subject
Subject;Subject,TInstantCustomExposer;TInstantCustomExposer,Subject;



Imported
main

Subject;Subject_Property;TInstantCustomExposer_Subject
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Subject \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the object that is being exposed.
\par \pard\sb25\sa25\b\f1 property\b0  Subject: TObject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Subject is the main object of the object(s) being exposed. The class of the subject is used to find a suitable accessor with which the exposer can access the subject or objects contained within it. Whether the subject itself or objects contained within it are exposed, is determined by the current \strike Mode\strike0\{linkID=5020>main\} of the exposer.
\par 
\par }
5160
Scribble5160
TInstantCustomExposer.TotalCount
TInstantCustomExposer,TotalCount;TotalCount;TotalCount,TInstantCustomExposer;



Imported
main

TInstantCustomExposer_TotalCount;TotalCount;TotalCount_Property
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.TotalCount \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5170\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Specifies the total number of objects in the currently exposed container.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  TotalCount: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 In content mode, TotalCount will reflect the total number of objects within the exposed container. In object mode, TotalCount will always be 1.
\par 
\par }
5170
Scribble5170





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.ObjectCount\strike0\{linkID=5070>main\}
\par \strike TInstantCustomExposer.Objects\strike0\{linkID=5090>main\}
\par }
5180
Scribble5180
TInstantCustomExposer.AddObject
AddObject;AddObject,TInstantCustomExposer;TInstantCustomExposer,AddObject;



Imported
main

AddObject;AddObject_Method;TInstantCustomExposer_AddObject
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.AddObject \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Adds an object to the exposed container.
\par \pard\sb25\sa25\b\f1 function\b0  AddObject(AObject: TObject): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The object passed in AObject is added to the end of the container that is currently being exposed. The exposer is updated to reflect the change, making the added object visible as the corresponding row of the dataset.
\par Calling this method is only valid when the exposer is in content mode.
\par 
\par }
5190
Scribble5190
TInstantCustomExposer.ApplyChanges
ApplyChanges;ApplyChanges,TInstantCustomExposer;TInstantCustomExposer,ApplyChanges;



Imported
main

ApplyChanges;ApplyChanges_Method;TInstantCustomExposer_ApplyChanges
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ApplyChanges \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Saves pending changes.
\par \pard\sb25\sa25\b\f1 procedure\b0  ApplyChanges;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Saves changes made to the subject or objects contained in the subject. For \strike TInstantObject\strike0\{linkID=7390>main\} descendants this means that the persistent storage is updated for each changed object. Deleted objects will be disposed from the persistent storage and new objects will be added.
\par 
\par }
5200
Scribble5200
TInstantCustomExposer.AssignFieldValue
AssignFieldValue;AssignFieldValue,TInstantCustomExposer;TInstantCustomExposer,AssignFieldValue;



Imported
main

AssignFieldValue;AssignFieldValue_Method;TInstantCustomExposer_AssignFieldValue
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.AssignFieldValue \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Applies a given value to a specified field of the exposer.
\par \pard\sb25\sa25\b\f1 procedure\b0  AssignFieldValue(Field: TField; Value: Variant);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use this method when side effects of setting a property of an exposed object involve setting related properties of the same object and the values of the related properties must be visible in data-aware controls immediately. Normally, data-aware controls such as TDBEdit do not save an edited value before exiting the control. For an exposer this means that the underlying property of an edit control is not changed until the control is left. For changes to happen immediately when editing a property via an edit control, call AssignFieldValue with the field and new value from an OnChange event of the control.
\par 
\par }
5210
Scribble5210
TInstantCustomExposer.ChangesDisabled
ChangesDisabled;ChangesDisabled,TInstantCustomExposer;TInstantCustomExposer,ChangesDisabled;



Imported
main

ChangesDisabled;ChangesDisabled_Method;TInstantCustomExposer_ChangesDisabled
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ChangesDisabled \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5220\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Determines if the exposer responds to object changes.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  ChangesDisabled: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The ChangesDisabled property determines if the exposer responds to indirect modifications that occur to the objects is exposes. If the value of one of an objects attribute is changed, the object sends a notification. If ChangesDisabled is True, the exposer will not respond to such a notification and reflect the change that occurred. The mechanism is only effective when exposing \strike TInstantObject\strike0\{linkID=7390>main\} descendants.
\par 
\par }
5220
Scribble5220





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.DisableChanges\strike0\{linkID=5260>main\}
\par \strike TInstantCustomExposer.EnableChanges\strike0\{linkID=5280>main\}
\par }
5230
Scribble5230
TInstantCustomExposer.Clear
Clear;Clear,TInstantCustomExposer;TInstantCustomExposer,Clear;



Imported
main

Clear;Clear_Method;TInstantCustomExposer_Clear
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Clear \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Removes all objects from the exposed container.
\par \pard\sb25\sa25\b\f1 procedure\b0  Clear;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Removes all objects from the container that is currently being exposed. After calling this method, the exposer will be empty.
\par Calling this method is only valid when the exposer is in content mode.
\par 
\par }
5240
Scribble5240
TInstantCustomExposer.DeleteObject
DeleteObject;DeleteObject,TInstantCustomExposer;TInstantCustomExposer,DeleteObject;



Imported
main

DeleteObject;DeleteObject_Method;TInstantCustomExposer_DeleteObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.DeleteObject \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5250\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Deletes an object from the exposer.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  DeleteObject(\b Index\b0 : Integer);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 DeleteObject deletes the object at the position specified by the Index argument from the exposer without disposing the object persistently.
\par 
\par }
5250
Scribble5250





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.RemoveObject\strike0\{linkID=5450>main\}
\par }
5260
Scribble5260
TInstantCustomExposer.DisableChanges
DisableChanges;DisableChanges,TInstantCustomExposer;TInstantCustomExposer,DisableChanges;



Imported
main

DisableChanges;DisableChanges_Method;TInstantCustomExposer_DisableChanges
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.DisableChanges \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5270\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Disables responding to object changes.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  DisableChanges;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Disables the exposer from responding to indirect object modifications. DisableChanges can be nested. Each call to DisableChanges should have a corresponding call to \strike EnableChanges\strike0\{linkID=5280>main\}.
\par 
\par }
5270
Scribble5270





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.ChangesDisabled\strike0\{linkID=5210>main\}
\par \strike TInstantCustomExposer.EnableChanges\strike0\{linkID=5280>main\}
\par }
5280
Scribble5280
TInstantCustomExposer.EnableChanges
EnableChanges;EnableChanges,TInstantCustomExposer;TInstantCustomExposer,EnableChanges;



Imported
main

EnableChanges;EnableChanges_Method;TInstantCustomExposer_EnableChanges
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.EnableChanges \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5290\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Enables responding to object changes.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  EnableChanges;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Enables the exposer to respond to indirect object modifications. If the current disabled level is not nested, the call to EnableChanges enables responding. Otherwise EnableChanges only decrements the disabled nesting level.
\par 
\par }
5290
Scribble5290





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.ChangesDisabled\strike0\{linkID=5210>main\}
\par \strike TInstantCustomExposer.DisableChanges\strike0\{linkID=5260>main\}
\par }
5300
Scribble5300
TInstantCustomExposer.GetFieldStrings
GetFieldStrings;GetFieldStrings,TInstantCustomExposer;TInstantCustomExposer,GetFieldStrings;



Imported
main

GetFieldStrings;GetFieldStrings_Method;TInstantCustomExposer_GetFieldStrings
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.GetFieldStrings \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Loads a string list with the possible values of the specified field.
\par \pard\sb25\sa25\b\f1 function\b0  GetFieldStrings(Field: TField; Strings: TStrings): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call this method to load all possible values of a given field into a pick list.
\par Returns the number of items added.
\par 
\par }
5310
Scribble5310
TInstantCustomExposer.GotoObject
GotoObject;GotoObject,TInstantCustomExposer;TInstantCustomExposer,GotoObject;



Imported
main

GotoObject;GotoObject_Method;TInstantCustomExposer_GotoObject
FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.GotoObject \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Positions the exposer at a given object.
\par \pard\sb25\sa25\b\f1 function\b0  GotoObject(AObject: TObject): Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 If AObject is found in the exposed container, the current row is set to the row representing it.
\par The method returns True if the object was found. Otherwise the function returns False.
\par The method is only effective if the exposer is in amContent mode.
\par 
\par }
5320
Scribble5320
TInstantCustomExposer.HandleFieldError
HandleFieldError;HandleFieldError,TInstantCustomExposer;TInstantCustomExposer,HandleFieldError;



Imported
main

HandleFieldError;HandleFieldError_Method;TInstantCustomExposer_HandleFieldError
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.HandleFieldError \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Handles errors occurred during read or write of field values.
\par \pard\sb25\sa25\b\f1 function\b0  HandleFieldError(E: Exception; Field: TField; Value: Variant; \b Write\b0 : Boolean): Boolean; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Override this method to perform special operations on specific errors that occur when reading or writing field values of the exposer. If Write is True, a write operation was performed, if False a read operation was performed. If writing was attempted, the value passed in Value was written to the field. The return value of the method indicates whether the exception was handled or not.
\par 
\par }
5330
Scribble5330
TInstantCustomExposer.IncludeField
IncludeField;IncludeField,TInstantCustomExposer;TInstantCustomExposer,IncludeField;



Imported
main

IncludeField;IncludeField_Method;TInstantCustomExposer_IncludeField
FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.IncludeField \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines, if a field should be generated for the property with the specified fieldname.
\par \pard\sb25\sa25\b\f1 function\b0  IncludeField(FieldName: \b string\b0 ; \b Default\b0 : Boolean): Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 This method is called internally by the exposer to determine, if a field should be automatically generated for the property identified by the specified FieldName. FieldName contains the path to the property using dot-notation.
\par By default, only the field types specified by \strike FieldOptions\strike0\{linkID=4930>main\} are included. In addition, circular property references are avoided by excluding fields for multiple occurrences of the same relation.
\par Override this method to include or exclude specific fields when generating fields automatically.
\par 
\par }
5340
Scribble5340
TInstantCustomExposer.IndexOfObject
IndexOfObject;IndexOfObject,TInstantCustomExposer;TInstantCustomExposer,IndexOfObject;



Imported
main

IndexOfObject;IndexOfObject_Method;TInstantCustomExposer_IndexOfObject
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.IndexOfObject \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns the index of the specified object.
\par \pard\sb25\sa25\b\f1 function\b0  IndexOfObject(AObject: TObject): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 If the object passed in AObject is found in the exposed container, its index is returned. Otherwise -1 is returned.
\par Calling this method is only valid when the exposer is in content mode.
\par 
\par }
5350
Scribble5350
TInstantCustomExposer.InitField
InitField;InitField,TInstantCustomExposer;TInstantCustomExposer,InitField;



Imported
main

InitField;InitField_Method;TInstantCustomExposer_InitField
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.InitField \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Initializes a field of the exposer.
\par \pard\sb25\sa25\b\f1 procedure\b0  InitField(Field: TField); \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Used internally by the exposer to initialize fields that have been generated to access properties of exposed objects.
\par Override this method to perform any special field initialization.
\par 
\par }
5360
Scribble5360
TInstantCustomExposer.InitFieldDef
InitFieldDef;InitFieldDef,TInstantCustomExposer;TInstantCustomExposer,InitFieldDef;



Imported
main

InitFieldDef;InitFieldDef_Method;TInstantCustomExposer_InitFieldDef
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.InitFieldDef \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Initializes a field definition.
\par \pard\sb25\sa25\b\f1 procedure\b0  InitFieldDef(FieldDef: TFieldDef); \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Used internally by the exposer to initialize field definitions that have been generated to create fields for accessing properties of exposed objects.
\par Override this method to perform any special initialization of field definitions.
\par 
\par }
5370
Scribble5370
TInstantCustomExposer.InsertObject
InsertObject;InsertObject,TInstantCustomExposer;TInstantCustomExposer,InsertObject;



Imported
main

InsertObject;InsertObject_Method;TInstantCustomExposer_InsertObject
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.InsertObject \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Inserts an object into the exposed container.
\par \pard\sb25\sa25\b\f1 procedure\b0  InsertObject(AObject: TObject);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The object passed in AObject is inserted at the specified Index in the container that is currently being exposed. The exposer is updated to reflect the change, making the inserted object visible as the corresponding row of the dataset.
\par Calling this method is only valid when the exposer is in content mode.
\par 
\par }
5380
Scribble5380
TInstantCustomExposer.LoadFields
LoadFields;LoadFields,TInstantCustomExposer;TInstantCustomExposer,LoadFields;



Imported
main

LoadFields;LoadFields_Method;TInstantCustomExposer_LoadFields
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.LoadFields \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Loads fields from the current object.
\par \pard\sb25\sa25\b\f1 procedure\b0  LoadFields;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call LoadFields to load the field values from \strike CurrentObject\strike0\{linkID=4920>main\} into the active record buffer.
\par 
\par }
5390
Scribble5390
TInstantCustomExposer.PostChanges
PostChanges;PostChanges,TInstantCustomExposer;TInstantCustomExposer,PostChanges;



Imported
main

PostChanges;PostChanges_Method;TInstantCustomExposer_PostChanges
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.PostChanges \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Posts any changes made while in edit or insert mode.
\par \pard\sb25\sa25\b\f1 procedure\b0  PostChanges;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call this method to ensure that changes made during an edit or insert state are posted to the underlying object. If the exposer is in dsEdit or dsInsert mode, changes will be posted and the mode is set to dsBrowse.
\par 
\par }
5400
Scribble5400
TInstantCustomExposer.RefreshCurrentObject
RefreshCurrentObject;RefreshCurrentObject,TInstantCustomExposer;TInstantCustomExposer,RefreshCurrentObject;



Imported
main

RefreshCurrentObject;RefreshCurrentObject_Method;TInstantCustomExposer_RefreshCurrentObject
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.RefreshCurrentObject \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Refreshes the current object.
\par \pard\sb25\sa25\b\f1 procedure\b0  RefreshCurrentObject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use RefreshCurrentObject to refresh the object that is currently being exposed. The method is only effective if the current object is a \strike TInstantObject\strike0\{linkID=7390>main\} instance.
\par 
\par }
5410
Scribble5410
TInstantCustomExposer.RefreshData
RefreshData;RefreshData,TInstantCustomExposer;TInstantCustomExposer,RefreshData;



Imported
main

RefreshData;RefreshData_Method;TInstantCustomExposer_RefreshData
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.RefreshData \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Performs a complete refresh.
\par \pard\sb25\sa25\b\f1 procedure\b0  RefreshData;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call the RefreshData to perform a complete refresh when the exposer is \strike Limited\strike0\{linkID=5000>main\} or \strike Sorted\strike0\{linkID=5130>main\}. RefreshData will destroy the current object view and regenerate it.
\par 
\par }
5420
Scribble5420
TInstantCustomExposer.ReleaseObject
ReleaseObject;ReleaseObject,TInstantCustomExposer;TInstantCustomExposer,ReleaseObject;



Imported
main

ReleaseObject;ReleaseObject_Method;TInstantCustomExposer_ReleaseObject
FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.ReleaseObject \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa25\b\f1\fs18 procedure\b0  ReleaseObject(AObject: TObject);
\par 
\par }
5430
Scribble5430
TInstantCustomExposer.Remember
Remember;Remember,TInstantCustomExposer;TInstantCustomExposer,Remember;



Imported
main

Remember;Remember_Method;TInstantCustomExposer_Remember
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 TInstantCustomExposer.Remember \b0\fs16  
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5440\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Saves all fields of \strike CurrentObject\strike0\{linkID=4920>main\} internally making it possible to undo changes by calling \strike Revert\strike0\{linkID=5480>main\}.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Remember;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Changes made to properties of exposed objects through data-aware controls are written directly to the properties ensuring that any side effects are performed as well. This means that changes cannot be reverted simply by exiting edit or insert state with Cancel. Instead, it is necessary to call Remember prior to making changes via data-aware controls, if the changes need to be undone later. After calling Remember, changes can be reverted by calling \strike Revert\strike0\{linkID=5480>main\}.
\par 
\par }
5440
Scribble5440





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.Revert\strike0\{linkID=5480>main\}
\par }
5450
Scribble5450
TInstantCustomExposer.RemoveObject
RemoveObject;RemoveObject,TInstantCustomExposer;TInstantCustomExposer,RemoveObject;



Imported
main

RemoveObject;RemoveObject_Method;TInstantCustomExposer_RemoveObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.RemoveObject \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5460\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Removes an object from the exposer.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  RemoveObject(AObject: TObject): Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 RemoveObject removes an object from the exposer without disposing the object persistently.
\par 
\par }
5460
Scribble5460





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.DeleteObject\strike0\{linkID=5240>main\}
\par }
5470
Scribble5470
TInstantCustomExposer.Reset
Reset;Reset,TInstantCustomExposer;TInstantCustomExposer,Reset;



Imported
main

Reset;Reset_Method;TInstantCustomExposer_Reset
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Reset \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Completely resets the exposer.
\par \pard\sb25\sa25\b\f1 procedure\b0  Reset;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call this method to completely reset the exposer. Pending changes will be discarded and all fields will be re-created according to the current \strike ObjectClass\strike0\{linkID=5030>main\}. If the exposer was active prior to this call, it will be reopened. The exposer calls Reset internally when \strike Subject\strike0\{linkID=5150>main\} or \strike ObjectClass\strike0\{linkID=5030>main\} changes. It is normally not necessary to call this method explicitly.
\par 
\par }
5480
Scribble5480
TInstantCustomExposer.Revert
Revert;Revert,TInstantCustomExposer;TInstantCustomExposer,Revert;



Imported
main

Revert;Revert_Method;TInstantCustomExposer_Revert
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Revert \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5490\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Revert the properties of \strike CurrentObject\strike0\{linkID=4920>main\} to the field values saved when \strike Remember\strike0\{linkID=5430>main\} was called.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Revert;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Revert lets you undo changes made to \strike CurrentObject\strike0\{linkID=4920>main\} via data-aware controls. All field values will be reverted to the values saved when calling \strike Remember\strike0\{linkID=5430>main\}.
\par 
\par }
5490
Scribble5490





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.Remember\strike0\{linkID=5430>main\}
\par }
5500
Scribble5500
TInstantCustomExposer.Undo
TInstantCustomExposer,Undo;Undo;Undo,TInstantCustomExposer;



Imported
main

TInstantCustomExposer_Undo;Undo;Undo_Method
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.Undo \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Reverts pending changes.
\par \pard\sb25\sa25\b\f1 procedure\b0  Undo;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Undo to undo any pending changes when editing an object through the exposer. Undo reloads the attribute values of the object being edited.
\par 
\par }
5510
Scribble5510
TInstantCustomExposer.OnAddClassFieldDef
OnAddClassFieldDef;OnAddClassFieldDef,TInstantCustomExposer;TInstantCustomExposer,OnAddClassFieldDef;



Imported
main

OnAddClassFieldDef;OnAddClassFieldDef_Event;TInstantCustomExposer_OnAddClassFieldDef
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fmodern Courier New;}{\f3\fmodern\fcharset0 Courier New;}{\f4\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 TInstantCustomExposer.OnAddClassFieldDef \b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs every time a new \lang1033\f1 field definition\lang1040\f0  is created via the exposer.
\par \pard\sb25\sa25\b\f2 property\b0  On\lang1033\f3 AddClassFieldDef\lang1040\f2 : \cf2\strike TInstantAddClassFieldDefEvent\cf3\strike0\{linkID=12090>main\}\cf1 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnAddClassFieldDef\lang1033\f1  \lang1040\f0 event handler to \lang1033\f1 break out of the recursive creation process for field definitions\lang1040\f0 .\lang1033\f1  This event is particularly useful for improving exposer performance when \cf0\f4 f\lang3081 o\lang1033 Thorough is included in the exposer FieldO\cf1\f1 ptions property and there is a substantial heirarchy of container properties for the exposer's Subject.\lang1040\f0 
\par 
\par }
5520
Scribble5520
TInstantCustomExposer.OnCompare
OnCompare;OnCompare,TInstantCustomExposer;TInstantCustomExposer,OnCompare;



Imported
main

OnCompare;OnCompare_Event;TInstantCustomExposer_OnCompare
FALSE
16
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.OnCompare \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\strike Example 1\strike0\{linkID=5530>example\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs for each object in an exposed container to determine its sorted position.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnCompare: \strike TInstantCompareObjectsEvent\strike0\{linkID=12150>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnCompare event handler to decide the position of each object when the exposer is \strike Sorted\strike0\{linkID=5130>main\}.
\par Compare the sort values of the two passed objects and return the result in Compare: 
\par 
\par \ul\b Value\tab Meaning\f2                                                                    \ulnone\b0\f0 
\par < 0\tab Object1 is less than Object2
\par 0\tab Object1 equals Object2
\par > 0\tab Object1 is greater than Object2
\par \pard 
\par }
5530
Scribble5530
TInstantCustomExposer.OnCompare, Example 1




Imported



FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer.OnCompare\cf3\strike0\{linkID=5520\}\cf1\{keepn\} 
\par \pard\sb25\sa25\fs18 The following event handler will sort the TCustomer objects exposed by MyExposer by their Name property.
\par \pard\keep\f1 
\par procedure MyExposer.OnCompare(Object1, Object2: TObject; out Compare: Boolean);
\par begin
\par   Compare := AnsiCompareStr(TCustomer(Object1).Name, TCustomer(Object2).Name);
\par end;
\par 
\par }
5540
Scribble5540
TInstantCustomExposer.OnCreateObject
OnCreateObject;OnCreateObject,TInstantCustomExposer;TInstantCustomExposer,OnCreateObject;



Imported
main

OnCreateObject;OnCreateObject_Event;TInstantCustomExposer_OnCreateObject
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 TInstantCustomExposer.OnCreateObject \b0\fs16 
\par \cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs every time a new object is created via the exposer.
\par \pard\sb25\sa25\b\f1 property\b0  OnCreateObject: \strike TInstantCreateObjectEvent\strike0\{linkID=12260>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 By default, an exposer creates an instance of \strike ObjectClass\strike0\{linkID=5030>main\} whenever a new row is inserted or appended to it. Write an OnCreateObject event handler to initialize the new object or to create an object of a more specialized class.
\par 
\par }
5550
Scribble5550
TInstantCustomExposer.OnFieldError
OnFieldError;OnFieldError,TInstantCustomExposer;TInstantCustomExposer,OnFieldError;



Imported
main

OnFieldError;OnFieldError_Event;TInstantCustomExposer_OnFieldError
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.OnFieldError \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5560\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs whenever reading from or writing to a field results in an error.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnFieldError: \strike TInstantFieldErrorEvent\strike0\{linkID=12370>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnFieldError event handler to perform some operation on specific errors that occur during reading or writing of field values.
\par 
\par }
5560
Scribble5560





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.HandleFieldError\strike0\{linkID=5320>main\}
\par }
5570
Scribble5570
TInstantCustomExposer.OnIncludeField
OnIncludeField;OnIncludeField,TInstantCustomExposer;TInstantCustomExposer,OnIncludeField;



Imported
main

OnIncludeField;OnIncludeField_Event;TInstantCustomExposer_OnIncludeField
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.OnIncludeField \cf1\b0\fs16  
\par \pard\sb25\tx1435\tx2875\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5580\}\tab\strike Example 1\strike0\{linkID=5590>example\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Occurs for every published property of the class specified by \strike ObjectClass\strike0\{linkID=5030>main\} or related classes to determine whether to create a corresponding field or not.
\par \pard\sb25\sa25\tx1435\tx2875\b\f1 property\b0  OnIncludeField: \strike TInstantIncludeFieldEvent\strike0\{linkID=12430>main\};
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\lang1033\b0\f2 T\lang1040\f0 he default fields generated to access properties of exposed objects are determined by \cf2\lang1033\strike\f2 Field\lang1040\f0 Options\cf3\strike0\{linkID=4930\}\cf1 . Write an OnIncludeField event handler to explicitly include or exclude fields for specific properties.
\par 
\par }
5580
Scribble5580





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.IncludeField\strike0\{linkID=5330>main\}
\par }
5590
Scribble5590
TInstantCustomExposer.OnIncludeField, Example 1




Imported
example


FALSE
13
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer.OnIncludeField\cf3\strike0\{linkID=5570>main\}\cf1\{keepn\} 
\par \pard\sb25\sa25\fs18 The following code explicitly includes a field that would not have been included by default:
\par \pard\keep\f1 
\par procedure MyExposer.OnIncludeField(const FieldName: string; var Include: Boolean);
\par begin
\par   if SameText(FieldName, 'Address.Country.Name') then
\par     Include := True;
\par end;
\par 
\par }
5600
Scribble5600
TInstantCustomExposer.OnInitField
OnInitField;OnInitField,TInstantCustomExposer;TInstantCustomExposer,OnInitField;



Imported
main

OnInitField;OnInitField_Event;TInstantCustomExposer_OnInitField
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 TInstantCustomExposer.OnInitField \b0\fs16 
\par \pard\sb25\tx1435\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5610\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Occurs for every field generated by the exposer to initialize the field.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnInitField: \strike TInstantFieldEvent\strike0\{linkID=12380>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnInitField event handler to perform special initialization of fields.
\par 
\par }
5610
Scribble5610





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.InitField\strike0\{linkID=5350>main\}
\par }
5620
Scribble5620
TInstantCustomExposer.OnInitFieldDef
OnInitFieldDef;OnInitFieldDef,TInstantCustomExposer;TInstantCustomExposer,OnInitFieldDef;



Imported
main

OnInitFieldDef;OnInitFieldDef_Event;TInstantCustomExposer_OnInitFieldDef
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.OnInitFieldDef \cf1\b0\fs16 
\par \pard\sb25\tx1435\cf2\strike TInstantCustomExposer\cf3\strike0\{linkID=4790>main\}\cf1\tab\cf2\ul See Also\cf3\ulnone\{linkID=5630\}\cf1\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Occurs for every field definition generated by the exposer.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnInitFieldDef: \cf2\strike TInstantFieldDefEvent\cf3\strike0\{linkID=12360>main\}\cf1 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnInitFieldDef event handler to perform special initialization of field definitions created by the exposer.
\par 
\par }
5630
Scribble5630





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.InitFieldDef\strike0\{linkID=5360>main\}
\par }
5640
Scribble5640
TInstantCustomExposer.OnLimit
OnLimit;OnLimit,TInstantCustomExposer;TInstantCustomExposer,OnLimit;



Imported
main

OnLimit;OnLimit_Event;TInstantCustomExposer_OnLimit
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCustomExposer.OnLimit \cf1\b0\fs16  
\par \pard\sb25\tx1435\tx2875\strike TInstantCustomExposer\strike0\{linkID=4790>main\}\tab\ul See Also\ulnone\{linkID=5650\}\tab\strike Example 1\strike0\{linkID=5660>example\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Occurs for each object in an exposed container to decide whether to include the object or not.
\par \pard\sb25\sa25\tx1435\tx2875\b\f1 property\b0  OnLimit: \strike TInstantLimitObjectsEvent\strike0\{linkID=12460>main\};
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Write an OnLimit event handler to specify what objects to include in the dataset. Set Include to True to include the object passed in AObject, set it to False to exclude the object.
\par 
\par }
5650
Scribble5650





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.Limited\strike0\{linkID=5000>main\}
\par \strike TInstantCustomExposer.Sorted\strike0\{linkID=5130>main\}
\par \strike TInstantCustomExposer.OnCompare\strike0\{linkID=5520>main\}
\par }
5660
Scribble5660
TInstantCustomExposer.OnLimit, Example 1




Imported
example


FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \cf2\strike TInstantCustomExposer.OnLimit\cf3\strike0\{linkID=5640>main\}\cf1\{keepn\} 
\par \pard\sb25\sa25\fs18 The following event handler will limit MyExposer to include only the customers in California.
\par \pard\keep\f1 
\par procedure MyExposer.OnLimit(AObject: TObject; var Include: Boolean);
\par begin
\par   Include := TCustomer(AObject).Address.State = 'CA';
\par end;
\par 
\par }
5670
Scribble5670
TInstantDateTime
TInstantDateTime;


classessymbol:000240
Imported
main

TInstantDateTime;TInstantDateTime_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 TInstantDateTime \b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4260\ul Hierarchy\ulnone\{linkID=5680\}\tab\strike Members\strike0\{linkID=5750>nav\}\tab\strike Properties\strike0\{linkID=5700>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantDateTime represents a TDateTime value.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantDateTime = \b class\b0 (\strike TInstantSimple\strike0\{linkID=10430>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantDateTime holds a TDateTime as its value.
\par 
\par }
5680
Scribble5680





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10430>main\}
\par \tab |
\par \strike TInstantDateTime\strike0\{linkID=5670>main\}
\par 
\par }
5690
Scribble5690





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDateTime Fields \cf1\b0\fs16 
\par \strike TInstantDateTime\strike0\{linkID=5670>main\}\{keepn\} 
\par 
\par }
5700
Scribble5700





Imported



FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDateTime Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantDateTime\strike0\{linkID=5670>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=5710\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantDateTime
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=5770>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
5710
Scribble5710





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
5720
Scribble5720





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantDateTime Events \cf1\b0\fs16 
\par \strike TInstantDateTime\strike0\{linkID=5670>main\}\cf0\{keepn\}\cf1 
\par 
\par }
5730
Scribble5730





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDateTime Methods \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantDateTime\strike0\{linkID=5670>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=5740\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
5740
Scribble5740





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
5750
Scribble5750





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDateTime Members \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantDateTime\strike0\{linkID=5670>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=5760\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=5770>main\}
\par 
\par }
5760
Scribble5760





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
5770
Scribble5770
TInstantDateTime.Value
TInstantDateTime,Value;Value;Value,TInstantDateTime;



Imported
main

TInstantDateTime_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDateTime.Value \cf1\b0\fs16 
\par \cf2\strike TInstantDateTime\cf3\strike0\{linkID=5670>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the DateTime attribute
\par \pard\sb25\sa25\b\f1 property\b0  Value: TDateTime;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the DateTime attribute.
\par 
\par }
5780
Scribble5780
TInstantDBISAMConnector
TInstantDBISAMConnector;


classessymbol:000250
Imported
main

TInstantDBISAMConnector;TInstantDBISAMConnector_Object
FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBISAMConnector \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4280\tx5700\ul Hierarchy\ulnone\{linkID=5790\}\tab\strike Members\strike0\{linkID=5860>nav\}\tab\strike Properties\strike0\{linkID=5810>nav\}\tab\strike Methods\strike0\{linkID=5850>nav\}\tab\strike Unit: InstantDBISAM\strike0\{linkID=12910>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\strike\f1 TInstantConnectorClass\strike0\{linkID=12210>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \strike TInstantConnector\strike0\{linkID=3770>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\sb25\sa25\tx280\lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Transaction control
\par \lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Information about the database
\par \lang1033\f2\tab\lang1040\f0\{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
5790
Scribble5790





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3770>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9960>main\}
\par \tab |
\par \strike TInstantDBISAMConnector\strike0\{linkID=5780>main\}
\par 
\par }
5800
Scribble5800





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBISAMConnector Fields \cf1\b0\fs16  
\par \strike TInstantDBISAMConnector\strike0\{linkID=5780>main\}\{keepn\}
\par 
\par }
5810
Scribble5810





Imported



FALSE
28
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBISAMConnector Properties \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantDBISAMConnector\strike0\{linkID=5780>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=5820\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantDBISAMConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Database\strike0\{linkID=5880>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Session\strike0\{linkID=5890>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike SessionName\strike0\{linkID=5910>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=10060>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3870>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3890>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3910>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4000>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4080>main\}
\par 
\par }
5820
Scribble5820





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
5830
Scribble5830





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBISAMConnector Events \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantDBISAMConnector\strike0\{linkID=5780>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=5840\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=10070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=10090>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4290>main\}
\par 
\par }
5840
Scribble5840





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
5850
Scribble5850





Imported



FALSE
22
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantDBISAMConnector Methods \cf1\b0\fs16 
\par \cf2\strike TInstantDBISAMConnector\cf3\strike0\{linkID=5780>main\}\cf1\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantDBISAMConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasDatabase\strike0\{linkID=5930>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasSession\strike0\{linkID=5940>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4130>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4150>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4270>main\}
\par 
\par }
5860
Scribble5860





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBISAMConnector Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantDBISAMConnector\strike0\{linkID=5780>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=5870\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Database\strike0\{linkID=5880>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Session\strike0\{linkID=5890>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike SessionName\strike0\{linkID=5910>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasDatabase\strike0\{linkID=5930>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasSession\strike0\{linkID=5940>main\}
\par 
\par }
5870
Scribble5870





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
5880
Scribble5880
TInstantDBISAMConnector.Database
Database;Database,TInstantDBISAMConnector;TInstantDBISAMConnector,Database;



Imported
main

Database;Database_Property;TInstantDBISAMConnector_Database
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBISAMConnector.Database \cf1\b0\fs16 
\par \cf2\strike TInstantDBISAMConnector\cf3\strike0\{linkID=5780>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the database used by the connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Database: TDBISAMDatabase;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Database property to specify the database used by the connector component.
\par 
\par }
5890
Scribble5890
TInstantDBISAMConnector.Session
Session;Session,TInstantDBISAMConnector;TInstantDBISAMConnector,Session;



Imported
main

Session;Session_Property;TInstantDBISAMConnector_Session
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBISAMConnector.Session \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantDBISAMConnector\strike0\{linkID=5780>main\}\tab\ul See Also\ulnone\{linkID=5900\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Accesses the session component used by the database.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Session: TDBISAMSession;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use the Session property to access the session component used by the associated database component.
\par 
\par }
5900
Scribble5900





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantDBISAMConnector.Database\strike0\{linkID=5880>main\}
\par }
5910
Scribble5910
TInstantDBISAMConnector.SessionName
SessionName;SessionName,TInstantDBISAMConnector;TInstantDBISAMConnector,SessionName;



Imported
main

SessionName;SessionName_Property;TInstantDBISAMConnector_SessionName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBISAMConnector.SessionName \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantDBISAMConnector\strike0\{linkID=5780>main\}\tab\ul See Also\ulnone\{linkID=5920\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Determines the session name.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  SessionName: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use the SessionName property to determine the SessionName of the \strike Session\strike0\{linkID=5890>main\}. If no \strike Session\strike0\{linkID=5890>main\} is associated with the \strike Database\strike0\{linkID=5880>main\}, SessionName is blank.
\par 
\par }
5920
Scribble5920





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantDBISAMConnector.Session\strike0\{linkID=5890>main\}
\par }
5930
Scribble5930
TInstantDBISAMConnector.HasDatabase
HasDatabase;HasDatabase,TInstantDBISAMConnector;TInstantDBISAMConnector,HasDatabase;



Imported
main

HasDatabase;HasDatabase_Method;TInstantDBISAMConnector_HasDatabase
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBISAMConnector.HasDatabase \cf1\b0\fs16 
\par \strike TInstantDBISAMConnector\strike0\{linkID=5780>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if a database is associated with the connector.
\par \pard\sb25\sa25\b\f1 function\b0  HasDatabase: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasDatabase to determine if the \strike Database\strike0\{linkID=5880>main\} property of the connector is assigned. If a database component has been associated with the connector, HasDatabase returns True. Otherwise HasDatabase returns False.
\par 
\par }
5940
Scribble5940
TInstantDBISAMConnector.HasSession
HasSession;HasSession,TInstantDBISAMConnector;TInstantDBISAMConnector,HasSession;



Imported
main

HasSession;HasSession_Method;TInstantDBISAMConnector_HasSession
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBISAMConnector.HasSession \cf1\b0\fs16 
\par \strike TInstantDBISAMConnector\strike0\{linkID=5780>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if a session is associated with the connector.
\par \pard\sb25\sa25\b\f1 function\b0  HasSession: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasSession to determine if the \strike Session\strike0\{linkID=5890>main\} property of the connector is assigned. If a session component has been associated with the connector, HasSession returns True. Otherwise HasSession returns False.
\par 
\par }
5950
Scribble5950
TInstantDBXConnector
TInstantDBXConnector;


classessymbol:000260
Imported
main

TInstantDBXConnector;TInstantDBXConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDBXConnector \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul Hierarchy\ulnone\{linkID=5960\}\tab\strike Unit: InstantDBX\strike0\{linkID=12930>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\strike\f1 TInstantConnectorClass\strike0\{linkID=12210>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \strike TInstantConnector\strike0\{linkID=3770>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
5960
Scribble5960





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3770>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9960>main\}
\par \tab |
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3400>main\}
\par \tab |
\par \strike TInstantDBXConnector\strike0\{linkID=5950>main\}
\par 
\par }
5970
Scribble5970





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBXConnector Fields \cf1\b0\fs16 
\par \strike TInstantDBXConnector\strike0\{linkID=5950>main\}\{keepn\} 
\par 
\par }
5980
Scribble5980





Imported



FALSE
26
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBXConnector Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantDBXConnector\strike0\{linkID=5950>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=5990\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Connection\strike0\{linkID=3500>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=10060>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3870>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3890>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3910>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4000>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4080>main\}
\par 
\par }
5990
Scribble5990





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6000
Scribble6000





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBXConnector Events \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantDBXConnector\strike0\{linkID=5950>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6010\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=10070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=10090>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4290>main\}
\par 
\par }
6010
Scribble6010





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
6020
Scribble6020





Imported



FALSE
21
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantDBXConnector Methods \cf1\b0\fs16 
\par \strike TInstantDBXConnector\strike0\{linkID=5950>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=3510>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4130>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4150>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4270>main\}
\par 
\par }
6030
Scribble6030





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantDBXConnector Members \cf1\b0\fs16 
\par \strike TInstantDBXConnector\strike0\{linkID=5950>main\}\tab\ul Legend\ulnone\{linkID=6040\}\cf0\{keepn\}\cf1 
\par 
\par }
6040
Scribble6040





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6050
Scribble6050
TInstantElement
TInstantElement;


classessymbol:000270
Modified
main

TInstantElement;TInstantElement_Object
FALSE
16
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5700\ul Hierarchy\ulnone\{linkID=6060\}\tab\strike Members\strike0\{linkID=6130>nav\}\tab\strike Properties\strike0\{linkID=6080>nav\}\tab\strike Methods\strike0\{linkID=6110>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 TInstantElement is the ancestor of attribute classes that represent a relationship with a single object.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantElement = \b class\b0 (\strike TInstantComplex\strike0\{linkID=3190>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantElement is the ancestor of attribute classes that represent a relationship with a single object. TInstantElement introduces common properties and methods to:
\par \pard\fi-220\li460\sb25\sa25\tx480\{bmct bm3.BMP\}\tab Load and Save the object it represents from and to a stream.
\par \pard 
\par TInstantElement is abstract; so do not create instances of this class. Instead refer to the following concrete descendant classes: 
\par 
\par \pard\li220\b Element attribute classes\b0 
\par \strike TInstantPart\strike0\{linkID=9250>main\}
\par \strike TInstantReference\strike0\{linkID=9520>main\}
\par }
6060
Scribble6060





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3190>main\}
\par \tab |
\par \strike TInstantElement\strike0\{linkID=6050>main\}
\par 
\par }
6070
Scribble6070





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantElement Fields \cf1\b0\fs16 
\par \strike TInstantElement\strike0\{linkID=6050>main\}\{keepn\} 
\par 
\par }
6080
Scribble6080





Imported



FALSE
32
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantElement Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantElement\strike0\{linkID=6050>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6090\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantElement
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=6150>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3300>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3340>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
6090
Scribble6090





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6100
Scribble6100





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantElement Events\cf1\b0\fs16 
\par \strike TInstantElement\strike0\{linkID=6050>main\}\cf2\{keepn\}\cf1 
\par 
\par }
6110
Scribble6110





Imported



FALSE
29
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantElement Methods \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantElement\strike0\{linkID=6050>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6120\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantElement
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=6160>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=6170>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=6180>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike LoadObjectFromStream\strike0\{linkID=6190>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike SaveObjectToStream\strike0\{linkID=6210>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3360>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3370>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3380>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
6120
Scribble6120





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
6130
Scribble6130





Imported



FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantElement Members \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantElement\strike0\{linkID=6050>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6140\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=6150>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=6160>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=6170>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=6180>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike LoadObjectFromStream\strike0\{linkID=6190>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike SaveObjectToStream\strike0\{linkID=6210>main\}
\par 
\par }
6140
Scribble6140





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6150
Scribble6150
TInstantElement.Value
TInstantElement,Value;Value;Value,TInstantElement;



Imported
main

TInstantElement_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement.Value \cf1\b0\fs16 
\par \strike TInstantElement\strike0\{linkID=6050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the object that the attribute represents.
\par \pard\sb25\sa25\b\f1 property\b0  Value: \strike TInstantObject\strike0\{linkID=7390>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Value specifies the object that the attribute represents. The object is returned as a \strike TInstantObject\strike0\{linkID=7390>main\}. To access the object as its actual class type, Value should be cast to that type.
\par 
\par }
6160
Scribble6160
TInstantElement.AttachObject
AttachObject;AttachObject,TInstantElement;TInstantElement,AttachObject;



Imported
main

AttachObject;AttachObject_Method;TInstantElement_AttachObject
FALSE
16
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement.AttachObject \cf1\b0\fs16 
\par \strike TInstantElement\strike0\{linkID=6050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Attaches an object to the attribute.
\par \pard\sb25\sa25\b\f1 function\b0  AttachObject(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}): Boolean; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\b0 Attaches the object specified by the AObject argument to the attribute.
\par For the descendant classes of TInstantComplex this implies: 
\par 
\par \pard\tx2340\ul\b Class\tab Action\f2                                                                          \f0 
\par \ulnone\b0 TInstantElement\tab AObject is assigned as the attributes Value
\par TInstantContainer\tab AObject is added to the objects array
\par \pard 
\par If the object is successfully attached, the function returns True. Otherwise the function returns False.
\par }
6170
Scribble6170
TInstantElement.DetachObject
DetachObject;DetachObject,TInstantElement;TInstantElement,DetachObject;



Imported
main

DetachObject;DetachObject_Method;TInstantElement_DetachObject
FALSE
16
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement.DetachObject \cf1\b0\fs16 
\par \strike TInstantElement\strike0\{linkID=6050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Detaches an object from the attribute.
\par \pard\sb25\sa25\b\f1 function\b0  DetachObject(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}): Boolean; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\b0 Detaches the object specified by the AObject argument from the attribute.
\par For the descendant classes of TInstantComplex this implies: 
\par 
\par \pard\tx2220\ul\b Class\tab Action\f2                                                                                                 \ulnone\b0\f0 
\par TInstantElement\tab if the attribute Value equals AObject, the Value is set to nil.
\par TInstantContainer\tab AObject is removed from the attributes array of objects.
\par \pard 
\par If the object is successfully detached, the function returns True. Otherwise the function returns False.
\par }
6180
Scribble6180
TInstantElement.HasValue
HasValue;HasValue,TInstantElement;TInstantElement,HasValue;



Imported
main

HasValue;HasValue_Method;TInstantElement_HasValue
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement.HasValue \cf1\b0\fs16 
\par \strike TInstantElement\strike0\{linkID=6050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if the instance has been instantiated.
\par \pard\sb25\sa25\b\f1 function\b0  HasValue: Boolean; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasValue to determine if the instance associated with the element attribute has been instantiated. If the instance has been instantiated, HasValue returns True.
\par 
\par }
6190
Scribble6190
TInstantElement.LoadObjectFromStream
LoadObjectFromStream;LoadObjectFromStream,TInstantElement;TInstantElement,LoadObjectFromStream;



Imported
main

LoadObjectFromStream;LoadObjectFromStream_Method;TInstantElement_LoadObjectFromStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement.LoadObjectFromStream \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantElement\strike0\{linkID=6050>main\}\tab\ul See Also\ulnone\{linkID=6200\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Loads an object from a stream into the attribute.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  LoadObjectFromStream(AStream: TStream); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call LoadObjectFromStream to load an object from a stream into the attribute. The stream that holds the object is passed as the Stream argument. If the object in the stream does not comply with the validation rules of the attribute, an exception is raised.
\par 
\par }
6200
Scribble6200





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantElement.SaveObjectToStream\strike0\{linkID=6210>main\}
\par }
6210
Scribble6210
TInstantElement.SaveObjectToStream
SaveObjectToStream;SaveObjectToStream,TInstantElement;TInstantElement,SaveObjectToStream;



Imported
main

SaveObjectToStream;SaveObjectToStream_Method;TInstantElement_SaveObjectToStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantElement.SaveObjectToStream \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantElement\strike0\{linkID=6050>main\}\tab\ul See Also\ulnone\{linkID=6220\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Saves the object the attribute represents to a stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  SaveObjectToStream(AStream: TStream); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call SaveObjectToStream to save the object the attribute represents to a stream. The stream that the object should be saved to is passed as the Stream argument.
\par 
\par }
6220
Scribble6220





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantElement.LoadObjectFromStream\strike0\{linkID=6190>main\}
\par }
6230
Scribble6230
TInstantExplorer
TInstantExplorer;


classessymbol:000280
Imported
main

TInstantExplorer;TInstantExplorer_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4280\tx5700\ul Hierarchy\ulnone\{linkID=6240\}\tab\strike Members\strike0\{linkID=6300>nav\}\tab\strike Properties\strike0\{linkID=6260>nav\}\tab\strike Methods\strike0\{linkID=6290>nav\}\tab\strike Unit: InstantExplorer\strike0\{linkID=12950>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Allows navigation of objects within a tree.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantExplorer = \b class\b0 (TCustomControl)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 The Explorer contains a tree view by which the user can navigate objects and their relations.
\par 
\par }
6240
Scribble6240





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TCustomControl
\par \pard\li95\tx355\tab |
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}
\par 
\par }
6250
Scribble6250





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExplorer Fields \cf1\b0\fs16  
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\}
\par 
\par }
6260
Scribble6260





Imported



FALSE
18
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExplorer Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantExplorer\strike0\{linkID=6230>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6270\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantExplorer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AutoAdjust\strike0\{linkID=6320>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Layout\strike0\{linkID=6330>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike NodeTypes\strike0\{linkID=6340>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnChangeNode\strike0\{linkID=6350>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateNode\strike0\{linkID=6360>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateNodeData\strike0\{linkID=6370>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetImageIndex\strike0\{linkID=6380>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetNodeText\strike0\{linkID=6390>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIncludeNode\strike0\{linkID=6400>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RootObject\strike0\{linkID=6410>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ShowRoot\strike0\{linkID=6420>main\}
\par 
\par }
6270
Scribble6270





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
6280
Scribble6280





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantExplorer Events \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\cf0\{keepn\}\cf1 
\par 
\par }
6290
Scribble6290





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantExplorer Methods \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantExplorer
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=6430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Refresh\strike0\{linkID=6440>main\}
\par 
\par }
6300
Scribble6300





Imported



FALSE
21
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExplorer Members \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantExplorer\strike0\{linkID=6230>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6310\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AutoAdjust\strike0\{linkID=6320>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Layout\strike0\{linkID=6330>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike NodeTypes\strike0\{linkID=6340>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnChangeNode\strike0\{linkID=6350>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateNode\strike0\{linkID=6360>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateNodeData\strike0\{linkID=6370>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetImageIndex\strike0\{linkID=6380>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetNodeText\strike0\{linkID=6390>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIncludeNode\strike0\{linkID=6400>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RootObject\strike0\{linkID=6410>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ShowRoot\strike0\{linkID=6420>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=6430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Refresh\strike0\{linkID=6440>main\}
\par 
\par }
6310
Scribble6310





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
6320
Scribble6320
TInstantExplorer.AutoAdjust
AutoAdjust;AutoAdjust,TInstantExplorer;TInstantExplorer,AutoAdjust;



Imported
main

AutoAdjust;AutoAdjust_Property;TInstantExplorer_AutoAdjust
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.AutoAdjust \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if the explorer is automatically adjusted.
\par \pard\sb25\sa25\b\f1 property\b0  AutoAdjust: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 When AutoAdjust is True the explorer automatically resizes the tree and the detail view to the same height or width when the explorer is resized.
\par 
\par }
6330
Scribble6330
TInstantExplorer.Layout
Layout;Layout,TInstantExplorer;TInstantExplorer,Layout;



Imported
main

Layout;Layout_Property;TInstantExplorer_Layout
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.Layout \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the layout of the explorer.
\par \pard\sb25\sa25\b\f1 property\b0  Layout: \strike TInstantExplorerLayout\strike0\{linkID=12310>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Set Layout to specify whether to include a detail view and how the detail view should be displayed.
\par 
\par }
6340
Scribble6340
TInstantExplorer.NodeTypes
NodeTypes;NodeTypes,TInstantExplorer;TInstantExplorer,NodeTypes;



Imported
main

NodeTypes;NodeTypes_Property;TInstantExplorer_NodeTypes
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.NodeTypes \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines which node types to include in the explorer.
\par \pard\sb25\sa25\b\f1 property\b0  NodeTypes: \strike TInstantExplorerNodeTypes\strike0\{linkID=12330>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Only the node types specified in NodeTypes will be included in the explorer. By default all node types are included.
\par 
\par }
6350
Scribble6350
TInstantExplorer.OnChangeNode
OnChangeNode;OnChangeNode,TInstantExplorer;TInstantExplorer,OnChangeNode;



Imported
main

OnChangeNode;OnChangeNode_Property;TInstantExplorer_OnChangeNode
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.OnChangeNode \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the selected node changes.
\par \pard\sb25\sa25\b\f1 property\b0  OnChangeNode: TInstantExplorerNodeEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnChangeNode event handler to perform special operations when the selected node is changed.
\par 
\par }
6360
Scribble6360
TInstantExplorer.OnCreateNode
OnCreateNode;OnCreateNode,TInstantExplorer;TInstantExplorer,OnCreateNode;



Imported
main

OnCreateNode;OnCreateNode_Property;TInstantExplorer_OnCreateNode
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.OnCreateNode \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the explorer creates a new node.
\par \pard\sb25\sa25\b\f1 property\b0  OnCreateNode: TInstantExplorerCreateNodeEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 When navigating through the explorer, nodes are created as required. Write an OnCreateNode event handler to control the creation of new nodes in the tree.
\par 
\par }
6370
Scribble6370
TInstantExplorer.OnCreateNodeData
OnCreateNodeData;OnCreateNodeData,TInstantExplorer;TInstantExplorer,OnCreateNodeData;



Imported
main

OnCreateNodeData;OnCreateNodeData_Property;TInstantExplorer_OnCreateNodeData
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.OnCreateNodeData \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the explorer creates data for a node.
\par \pard\sb25\sa25\b\f1 property\b0  OnCreateNodeData: TInstantExplorerCreateNodeDataEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The data of a node describes the node and the object associated with the node. Write an OnCreateNodeData event handler to control the creation of node data.
\par 
\par }
6380
Scribble6380
TInstantExplorer.OnGetImageIndex
OnGetImageIndex;OnGetImageIndex,TInstantExplorer;TInstantExplorer,OnGetImageIndex;



Imported
main

OnGetImageIndex;OnGetImageIndex_Property;TInstantExplorer_OnGetImageIndex
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.OnGetImageIndex \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when determining the image of a node.
\par \pard\sb25\sa25\b\f1 property\b0  OnGetImageIndex: TInstantExplorerNodeEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnGetImageIndex event handler to control what image to use for a given node.
\par 
\par }
6390
Scribble6390
TInstantExplorer.OnGetNodeText
OnGetNodeText;OnGetNodeText,TInstantExplorer;TInstantExplorer,OnGetNodeText;



Imported
main

OnGetNodeText;OnGetNodeText_Property;TInstantExplorer_OnGetNodeText
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.OnGetNodeText \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when determining the text of a node.
\par \pard\sb25\sa25\b\f1 property\b0  OnGetNodeText: TInstantExplorerGetNodeTextEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnGetText event handler to control the text of a given node.
\par 
\par }
6400
Scribble6400
TInstantExplorer.OnIncludeNode
OnIncludeNode;OnIncludeNode,TInstantExplorer;TInstantExplorer,OnIncludeNode;



Imported
main

OnIncludeNode;OnIncludeNode_Property;TInstantExplorer_OnIncludeNode
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.OnIncludeNode \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs for every node to determine whether to include the node or not.
\par \pard\sb25\sa25\b\f1 property\b0  OnIncludeNode: TInstantExplorerIncludeNodeEvent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnIncludeNode event handler to control what nodes to include in addition to the \strike NodeTypes\strike0\{linkID=6340>main\} property.
\par 
\par }
6410
Scribble6410
TInstantExplorer.RootObject
RootObject;RootObject,TInstantExplorer;TInstantExplorer,RootObject;



Imported
main

RootObject;RootObject_Property;TInstantExplorer_RootObject
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.RootObject \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the object in the root of the explorer.
\par \pard\sb25\sa25\b\f1 property\b0  RootObject: TObject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Assign an object to this property to start exploring from the object.
\par 
\par }
6420
Scribble6420
TInstantExplorer.ShowRoot
ShowRoot;ShowRoot,TInstantExplorer;TInstantExplorer,ShowRoot;



Imported
main

ShowRoot;ShowRoot_Property;TInstantExplorer_ShowRoot
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.ShowRoot \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if the root object is visible or not.
\par \pard\sb25\sa25\b\f1 property\b0  ShowRoot: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 If you do not want the root object to be represented by a node in the tree, set ShowRoot to False.
\par 
\par }
6430
Scribble6430
TInstantExplorer.Clear
Clear;Clear,TInstantExplorer;TInstantExplorer,Clear;



Imported
main

Clear;Clear_Method;TInstantExplorer_Clear
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.Clear \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Clears the explorer.
\par \pard\sb25\sa25\b\f1 procedure\b0  Clear;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Clear to clear the content of the explorer.
\par 
\par }
6440
Scribble6440
TInstantExplorer.Refresh
Refresh;Refresh,TInstantExplorer;TInstantExplorer,Refresh;



Imported
main

Refresh;Refresh_Method;TInstantExplorer_Refresh
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorer.Refresh \cf1\b0\fs16 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Refreshes the explorer.
\par \pard\sb25\sa25\b\f1 procedure\b0  Refresh;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Refresh to rebuild the nodes of the explorer from the root object.
\par 
\par }
6450
Scribble6450
TInstantExposer
TInstantExposer;


classessymbol:000290
Imported
main

TInstantExposer;TInstantExposer_Object
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4260\ul Hierarchy\ulnone\{linkID=6460\}\tab\strike Members\strike0\{linkID=6540>nav\}\tab\strike Properties\strike0\{linkID=6480>nav\}\tab\strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Provides dataset-based access to objects.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantExposer = \b class\b0 (\strike TInstantCustomExposer\strike0\{linkID=4790>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantExposer provides dataset-based access to objects. The exposed objects are represented as rows and their published properties are represented as columns. The object that is to be exposed is specified at runtime by the \strike Subject\strike0\{linkID=6650>main\} property. The exposer is capable of either exposing the published properties of the subject itself or, if the subject is a container, the published properties of the objects contained in the subject. The way, the subject is exposed is specified by the \strike Mode\strike0\{linkID=6600>main\} property. If the subject has multiple containers, as \strike TInstantObject\strike0\{linkID=7390>main\} instances may have, the name of the container is specified by the \strike ContainerName\strike0\{linkID=6560>main\} property.
\par Master-Detail relationships can be defined using the \strike MasterSource\strike0\{linkID=6580>main\}, \strike MasterProperty\strike0\{linkID=6570>main\} and \strike ContainerName\strike0\{linkID=6560>main\} properties.
\par 
\par }
6460
Scribble6460





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TDataSet
\par \pard\li95\tx355\tab |
\par \strike TInstantCustomExposer\strike0\{linkID=4790>main\}
\par \tab |
\par \strike TInstantExposer\strike0\{linkID=6450>main\}
\par 
\par }
6470
Scribble6470





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExposer Fields \cf1\b0\fs16 
\par \strike TInstantExposer\strike0\{linkID=6450>main\}\{keepn\} 
\par 
\par }
6480
Scribble6480





Imported



FALSE
32
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExposer Properties \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantExposer\strike0\{linkID=6450>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6490\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ContainerName\strike0\{linkID=6560>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike MasterProperty\strike0\{linkID=6570>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike MasterSource\strike0\{linkID=6580>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Mode\strike0\{linkID=6600>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ObjectClass\strike0\{linkID=6610>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ObjectClassName\strike0\{linkID=6630>main\}
\par \{bmct bm0.BMP\}\{bmct bm7.BMP\} \strike Subject\strike0\{linkID=6650>main\}
\par \pard\sb55\sa55\tx355\b TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Accessor\strike0\{linkID=4900>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ContainerName\strike0\{linkID=4910>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike CurrentObject\strike0\{linkID=4920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike FieldOptions\strike0\{linkID=4930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike HasSubject\strike0\{linkID=4950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsChanged\strike0\{linkID=4980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Limited\strike0\{linkID=5000>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Mode\strike0\{linkID=5020>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClass\strike0\{linkID=5030>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClassName\strike0\{linkID=5050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=5070>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=5090>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Options\strike0\{linkID=5110>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ReadOnly\strike0\{linkID=5120>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Sorted\strike0\{linkID=5130>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Subject\strike0\{linkID=5150>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike TotalCount\strike0\{linkID=5160>main\}
\par 
\par }
6490
Scribble6490





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par \{bmct bm7.BMP\} write only
\par 
\par }
6500
Scribble6500





Imported



FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExposer Events \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantExposer\strike0\{linkID=6450>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6510\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCompare\strike0\{linkID=5520>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateObject\strike0\{linkID=5540>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnFieldError\strike0\{linkID=5550>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIncludeField\strike0\{linkID=5570>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitField\strike0\{linkID=5600>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitFieldDef\strike0\{linkID=5620>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnLimit\strike0\{linkID=5640>main\}
\par 
\par }
6510
Scribble6510





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
6520
Scribble6520





Imported



FALSE
33
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExposer Methods \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantExposer\strike0\{linkID=6450>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6530\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddObject\strike0\{linkID=5180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ApplyChanges\strike0\{linkID=5190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AssignFieldValue\strike0\{linkID=5200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ChangesDisabled\strike0\{linkID=5210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=5230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DeleteObject\strike0\{linkID=5240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DisableChanges\strike0\{linkID=5260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnableChanges\strike0\{linkID=5280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetFieldStrings\strike0\{linkID=5300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GotoObject\strike0\{linkID=5310>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike HandleFieldError\strike0\{linkID=5320>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike IncludeField\strike0\{linkID=5330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOfObject\strike0\{linkID=5340>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitField\strike0\{linkID=5350>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitFieldDef\strike0\{linkID=5360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike InsertObject\strike0\{linkID=5370>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFields\strike0\{linkID=5380>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike PostChanges\strike0\{linkID=5390>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshCurrentObject\strike0\{linkID=5400>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshData\strike0\{linkID=5410>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReleaseObject\strike0\{linkID=5420>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remember\strike0\{linkID=5430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RemoveObject\strike0\{linkID=5450>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Reset\strike0\{linkID=5470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Revert\strike0\{linkID=5480>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Undo\strike0\{linkID=5500>main\}
\par 
\par }
6530
Scribble6530





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
6540
Scribble6540





Imported



FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantExposer Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantExposer\strike0\{linkID=6450>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6550\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ContainerName\strike0\{linkID=6560>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike MasterProperty\strike0\{linkID=6570>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike MasterSource\strike0\{linkID=6580>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Mode\strike0\{linkID=6600>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ObjectClass\strike0\{linkID=6610>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ObjectClassName\strike0\{linkID=6630>main\}
\par \{bmct bm0.BMP\}\{bmct bm7.BMP\} \strike Subject\strike0\{linkID=6650>main\}
\par 
\par }
6550
Scribble6550





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par \{bmct bm7.BMP\} write only
\par 
\par }
6560
Scribble6560
TInstantExposer.ContainerName
ContainerName;ContainerName,TInstantExposer;TInstantExposer,ContainerName;



Imported
main

ContainerName;ContainerName_Property;TInstantExposer_ContainerName
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.ContainerName \cf1\b0\fs16 
\par \strike TInstantExposer\strike0\{linkID=6450>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the name of the container whose objects are to be exposed.
\par \pard\sb25\sa25\b\f1 property\b0  ContainerName;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use ContainerName to specify the name of the container in the subject which contains the objects that are to be exposed. If the Mode of the exposer is not amContent, ContainerName has no effect.
\par 
\par }
6570
Scribble6570
TInstantExposer.MasterProperty
MasterProperty;MasterProperty,TInstantExposer;TInstantExposer,MasterProperty;



Imported
main

MasterProperty;MasterProperty_Property;TInstantExposer_MasterProperty
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.MasterProperty \cf1\b0\fs16 
\par \strike TInstantExposer\strike0\{linkID=6450>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the master property for a detail exposer in a master-detail relationship.
\par \pard\sb25\sa25\b\f1 property\b0  MasterProperty: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use MasterProperty to specify the master property for a detail exposer in a master-detail relationship. The MasterProperty specifies the property of the master exposers CurrentObject that should serve as \strike Subject\strike0\{linkID=6650>main\} for detail exposer. If no masterproperty is specified, the \strike Subject\strike0\{linkID=6650>main\} of the detail exposer will be the CurrentObject of the master exposer.
\par MasterProperty is only used if a \strike MasterSource\strike0\{linkID=6580>main\} is specified.
\par 
\par }
6580
Scribble6580
TInstantExposer.MasterSource
MasterSource;MasterSource,TInstantExposer;TInstantExposer,MasterSource;



Imported
main

MasterSource;MasterSource_Property;TInstantExposer_MasterSource
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.MasterSource \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantExposer\strike0\{linkID=6450>main\}\tab\ul See Also\ulnone\{linkID=6590\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the name of the master data source to use for establishing a master-detail relationship.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  MasterSource: TDataSource;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 MasterSource specifies the name of the data source component whose DataSet property identifies the exposer used as the Master exposer. An exposer that defines a MasterSource becomes a detail exposer. The detail exposer exposes the details of the CurrentObject of the master exposer.
\par 
\par }
6590
Scribble6590





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantExposer.MasterProperty\strike0\{linkID=6570>main\}
\par \strike TInstantExposer.ContainerName\strike0\{linkID=6560>main\}
\par }
6600
Scribble6600
TInstantExposer.Mode
Mode;Mode,TInstantExposer;TInstantExposer,Mode;



Imported


Mode;Mode_Property;TInstantExposer_Mode
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.Mode \cf1\b0\fs16 
\par \strike TInstantExposer\strike0\{linkID=6450>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies how the attached subject is being exposed.
\par \pard\sb25\sa25\b\f1 property\b0  Mode;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 An exposer can operate in one of two possible modes; object or content. The access mode specified in the Mode property determines the current mode of the exposer. When in object mode, the properties of the attached subject are available via dataset fields in the exposer. In content mode, the properties of objects contained in the subject are available instead. Content mode requires that the attached subject is either itself a container or that it has one or more containers that are accessible via a suitable accessor. In object mode, the exposer will have a fixed row count of one. In content mode, the number of rows will equal the number of objects in the specified container. Adding and deleting rows in content mode will result in objects being created and destroyed. Rows cannot be added nor deleted in object mode.
\par 
\par }
6610
Scribble6610
TInstantExposer.ObjectClass
ObjectClass;ObjectClass,TInstantExposer;TInstantExposer,ObjectClass;



Imported
main

ObjectClass;ObjectClass_Property;TInstantExposer_ObjectClass
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.ObjectClass \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantExposer\strike0\{linkID=6450>main\}\tab\ul See Also\ulnone\{linkID=6620\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class of objects being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The exposer uses dataset fields to access properties of exposed objects. ObjectClass specifies the common base class of the objects being exposed. By default, the accessor created by the exposer to access the subject will determine the class from the attached subject. TInstantCustomExposer therefore introduces the ObjectClass property as read-only, but descendants may reintroduce this property as writable, allowing you to override the class determined by the accessor. TInstantExposer is an example hereof.
\par 
\par }
6620
Scribble6620





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantExposer.ObjectClassName\strike0\{linkID=6630>main\}
\par }
6630
Scribble6630
TInstantExposer.ObjectClassName
ObjectClassName;ObjectClassName,TInstantExposer;TInstantExposer,ObjectClassName;



Imported
main

ObjectClassName;ObjectClassName_Property;TInstantExposer_ObjectClassName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.ObjectClassName \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantExposer\strike0\{linkID=6450>main\}\tab\ul See Also\ulnone\{linkID=6640\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class name of objects being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClassName;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ObjectClassName specifies the name of the common class of the objects being exposed.
\par 
\par }
6640
Scribble6640





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantExposer.ObjectClass\strike0\{linkID=6610>main\}
\par }
6650
Scribble6650
TInstantExposer.Subject
Subject;Subject,TInstantExposer;TInstantExposer,Subject;



Imported
main

Subject;Subject_Property;TInstantExposer_Subject
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExposer.Subject \cf1\b0\fs16 
\par \strike TInstantExposer\strike0\{linkID=6450>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the object that is being exposed.
\par \pard\sb25\sa25\b\f1 property\b0  Subject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Subject is the main object of the object(s) being exposed. The class of the subject is used to find a suitable accessor with which the exposer can access the subject or objects contained within it. Whether the subject itself or objects contained within it are exposed, is determined by the current Mode of the exposer.
\par 
\par }
6660
Scribble6660
TInstantFileStream
TInstantFileStream;


classessymbol:000300
Imported
main

TInstantFileStream;TInstantFileStream_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFileStream \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4260\ul Hierarchy\ulnone\{linkID=6670\}\tab\strike Members\strike0\{linkID=6720>nav\}\tab\strike Methods\strike0\{linkID=6710>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Provides stream-based access to data stored in a file.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantFileStream = \b class\b0 (\strike TInstantStream\strike0\{linkID=10540>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Use TInstantFileStream to access data in disk files. Like all \strike TInstantStream\strike0\{linkID=10540>main\} objects, TInstantFileStream uses a source stream that handles the streaming. The Source stream of TInstantFileStream is a TFileStream object.
\par 
\par }
6670
Scribble6670





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TStream
\par \pard\li95\tx355\tab |
\par \strike TInstantStream\strike0\{linkID=10540>main\}
\par \tab |
\par \strike TInstantFileStream\strike0\{linkID=6660>main\}
\par 
\par }
6680
Scribble6680





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFileStream Fields \cf1\b0\fs16  
\par \strike TInstantFileStream\strike0\{linkID=6660>main\}\{keepn\}
\par 
\par }
6690
Scribble6690





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantFileStream Properties \cf1\b0\fs16 
\par \strike TInstantFileStream\strike0\{linkID=6660>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FreeSource\strike0\{linkID=10610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Source\strike0\{linkID=10620>main\}
\par 
\par }
6700
Scribble6700





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantFileStream Events \cf1\b0\fs16 
\par \strike TInstantFileStream\strike0\{linkID=6660>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnProcessObject\strike0\{linkID=10820>main\}
\par 
\par }
6710
Scribble6710





Imported



FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantFileStream Methods \cf1\b0\fs16 
\par \strike TInstantFileStream\strike0\{linkID=6660>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantFileStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=6730>main\}
\par \pard\sb55\sa55\b TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AlignStream\strike0\{linkID=10640>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10650>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObject\strike0\{linkID=10660>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObjectRes\strike0\{linkID=10680>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResHeader\strike0\{linkID=10700>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResourceFileHeader\strike0\{linkID=10720>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObject\strike0\{linkID=10740>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObjectRes\strike0\{linkID=10760>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceFileHeader\strike0\{linkID=10780>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceHeader\strike0\{linkID=10800>main\}
\par 
\par }
6720
Scribble6720





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantFileStream Members \cf1\b0\fs16 
\par \strike TInstantFileStream\strike0\{linkID=6660>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=6730>main\}
\par 
\par }
6730
Scribble6730
TInstantFileStream.Create
Create;Create,TInstantFileStream;TInstantFileStream,Create;



Imported
main

Create;Create_Method;TInstantFileStream_Create
FALSE
31
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFileStream.Create \cf1\b0\fs16 
\par \strike TInstantFileStream\strike0\{linkID=6660>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Creates an instance of \strike TInstantFileStream\strike0\{linkID=6660>main\}.
\par \pard\sb25\sa25\b\f1 constructor\b0  Create(\b const\b0  FileName: \b string\b0 ; Mode: Word);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Create to create a \strike TInstantFileStream\strike0\{linkID=6660>main\} object. The FileName argument specifies the name of the file. The Mode argument specifies how the file should be opened. If the file cannot be opened, Create raises an exception.
\par \pard\f2 The Mode parameter consists of an open mode and a share mode or'ed together.
\par 
\par The open mode must be one of the following values: 
\par 
\par \pard\tx2000\ul\b Value\tab Meaning                                                                                                       \ulnone\b0 
\par fmCreate\tab Create a file with the given name. 
\par \tab If a file with the given name exists, open the file in write mode.
\par fmOpenRead\tab Open the file for reading only.
\par fmOpenWrite\tab Open the file for writing only. Writing to the file completely replaces 
\par \tab the current content.
\par fmOpenReadWrite\tab Open the file to modify the current content rather than replace it.
\par \pard 
\par The share mode must be one of the following values: 
\par 
\par \pard\tx2040\ul\b Value\tab Meaning                              \ulnone\b0 
\par fmShareCompat\tab Sharing is compatible with the way FCBs are opened.
\par fmShareExclusive\tab Other applications cannot open the file for any reason.
\par fmShareDenyWrite\tab Other applications can open the file for reading but not for writing.
\par fmShareDenyRead\tab Other applications can open the file for writing but not for reading.
\par fmShareDenyNone\tab No attempt is made to prevent other applications from 
\par \tab reading from or writing to the file.\f0 
\par \pard 
\par }
6740
Scribble6740
TInstantFlashFilerConnector
TInstantFlashFilerConnector;


classessymbol:000310
Imported
main

TInstantFlashFilerConnector;TInstantFlashFilerConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFlashFilerConnector \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul Hierarchy\ulnone\{linkID=6750\}\tab\strike Unit: InstantFlashFiler\strike0\{linkID=12990>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\strike\f1 TInstantConnectorClass\strike0\{linkID=12210>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \strike TInstantConnector\strike0\{linkID=3770>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
6750
Scribble6750





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3770>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9960>main\}
\par \tab |
\par \strike TInstantFlashFilerConnector\strike0\{linkID=6740>main\}
\par 
\par }
6760
Scribble6760





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFlashFilerConnector Fields \cf1\b0\fs16  
\par \strike TInstantFlashFilerConnector\strike0\{linkID=6740>main\}\{keepn\}
\par 
\par }
6770
Scribble6770





Imported



FALSE
24
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFlashFilerConnector Properties \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantFlashFilerConnector\strike0\{linkID=6740>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6780\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=10060>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3870>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3890>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3910>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4000>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4080>main\}
\par 
\par }
6780
Scribble6780





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6790
Scribble6790





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFlashFilerConnector Events \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantFlashFilerConnector\strike0\{linkID=6740>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6800\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=10070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=10090>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4290>main\}
\par 
\par }
6800
Scribble6800





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
6810
Scribble6810





Imported



FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantFlashFilerConnector Methods \cf1\b0\fs16 
\par \strike TInstantFlashFilerConnector\strike0\{linkID=6740>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4130>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4150>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4270>main\}
\par 
\par }
6820
Scribble6820





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFlashFilerConnector Members \cf1\b0\fs16 
\par \strike TInstantFlashFilerConnector\strike0\{linkID=6740>main\}\tab\ul Legend\ulnone\{linkID=6830\}\cf0\{keepn\}\cf1 
\par 
\par }
6830
Scribble6830





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6840
Scribble6840
TInstantFloat
TInstantFloat;


classessymbol:000320
Imported
main

TInstantFloat;TInstantFloat_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFloat \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5680\ul Hierarchy\ulnone\{linkID=6860\}\tab\strike Members\strike0\{linkID=6930>nav\}\tab\strike Properties\strike0\{linkID=6880>nav\}\tab\ul See Also\ulnone\{linkID=6850\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 TInstantFloat represents a Double value.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantFloat = \b class\b0 (\strike TInstantNumeric\strike0\{linkID=7290>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantFloat holds a Double as its value.
\par 
\par }
6850
Scribble6850





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantInteger\strike0\{linkID=7070>main\}
\par \strike TInstant\lang1033\f1 Currency\lang1040\strike0\f0\{linkID=\lang1033\f1 4670\lang1040\f0 >main\}
\par 
\par }
6860
Scribble6860





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10430>main\}
\par \tab |
\par \strike TInstantNumeric\strike0\{linkID=7290>main\}
\par \tab |
\par \strike TInstantFloat\strike0\{linkID=6840>main\}
\par 
\par }
6870
Scribble6870





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFloat Fields \cf1\b0\fs16  
\par \strike TInstantFloat\strike0\{linkID=6840>main\}\{keepn\}
\par 
\par }
6880
Scribble6880





Imported



FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFloat Properties \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantFloat\strike0\{linkID=6840>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6890\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantFloat
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=6950>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
6890
Scribble6890





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6900
Scribble6900





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantFloat Events \cf1\b0\fs16 
\par \strike TInstantFloat\strike0\{linkID=6840>main\}\cf0\{keepn\}\cf1 
\par 
\par }
6910
Scribble6910





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFloat Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantFloat\strike0\{linkID=6840>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6920\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
6920
Scribble6920





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
6930
Scribble6930





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantFloat Members \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantFloat\strike0\{linkID=6840>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=6940\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=6950>main\}
\par 
\par }
6940
Scribble6940





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
6950
Scribble6950
TInstantFloat.Value
TInstantFloat,Value;Value;Value,TInstantFloat;



Imported
main

TInstantFloat_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFloat.Value \cf1\b0\fs16 
\par \strike TInstantFloat\strike0\{linkID=6840>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the Float attribute
\par \pard\sb25\sa25\b\f1 property\b0  Value: Double;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the Float attribute.
\par 
\par }
6960
Scribble6960
TInstantIBXConnector
TInstantIBXConnector;


classessymbol:000330
Imported
main

TInstantIBXConnector;TInstantIBXConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantIBXConnector \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4260\ul Hierarchy\ulnone\{linkID=6970\}\tab\strike Members\strike0\{linkID=7040>nav\}\tab\strike Properties\strike0\{linkID=6990>nav\}\tab\strike Unit: InstantIBX\strike0\{linkID=13010>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\strike\f1 TInstantConnectorClass\strike0\{linkID=12210>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \strike TInstantConnector\strike0\{linkID=3770>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
6970
Scribble6970





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3770>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9960>main\}
\par \tab |
\par \strike TInstantConnectionBasedConnector\strike0\{linkID=3400>main\}
\par \tab |
\par \strike TInstantIBXConnector\strike0\{linkID=6960>main\}
\par 
\par }
6980
Scribble6980





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantIBXConnector Fields \cf1\b0\fs16 
\par \strike TInstantIBXConnector\strike0\{linkID=6960>main\}\{keepn\} 
\par 
\par }
6990
Scribble6990





Imported



FALSE
28
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantIBXConnector Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantIBXConnector\strike0\{linkID=6960>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=7000\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantIBXConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=7060>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Connection\strike0\{linkID=3500>main\}
\par \pard\sb55\sa55\tx355\b TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=10060>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3870>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3890>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3910>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4000>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4080>main\}
\par 
\par }
7000
Scribble7000





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
7010
Scribble7010





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantIBXConnector Events \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantIBXConnector\strike0\{linkID=6960>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=7020\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=10070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=10090>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4290>main\}
\par 
\par }
7020
Scribble7020





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
7030
Scribble7030





Imported



FALSE
21
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantIBXConnector Methods \cf1\b0\fs16 
\par \strike TInstantIBXConnector\strike0\{linkID=6960>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnectionBasedConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasConnection\strike0\{linkID=3510>main\}
\par \pard\sb55\sa55\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4130>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4150>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4270>main\}
\par 
\par }
7040
Scribble7040





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantIBXConnector Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantIBXConnector\strike0\{linkID=6960>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=7050\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connection\strike0\{linkID=7060>main\}
\par 
\par }
7050
Scribble7050





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
7060
Scribble7060
TInstantIBXConnector.Connection
Connection;Connection,TInstantIBXConnector;TInstantIBXConnector,Connection;



Imported
main

Connection;Connection_Property;TInstantIBXConnector_Connection
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantIBXConnector.Connection \cf1\b0\fs16 
\par \cf2\strike TInstantIBXConnector\cf3\strike0\{linkID=6960>main\}\cf1\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the connection used by the connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Connection: TIBDatabase;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Connection property to specify the connection used by the connector component.
\par 
\par }
7070
Scribble7070
TInstantInteger
TInstantInteger;


classessymbol:000340
Imported
main

TInstantInteger;TInstantInteger_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantInteger \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5700\ul Hierarchy\ulnone\{linkID=7090\}\tab\strike Members\strike0\{linkID=7160>nav\}\tab\strike Properties\strike0\{linkID=7110>nav\}\tab\ul See Also\ulnone\{linkID=7080\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 TInstantInteger represents a 32-bit Integer value.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantInteger = \b class\b0 (\strike TInstantNumeric\strike0\{linkID=7290>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantInteger holds a 32-bit Integer as its value.
\par 
\par }
7080
Scribble7080





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantFloat\strike0\{linkID=6840>main\}
\par }
7090
Scribble7090





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10430>main\}
\par \tab |
\par \strike TInstantNumeric\strike0\{linkID=7290>main\}
\par \tab |
\par \strike TInstantInteger\strike0\{linkID=7070>main\}
\par 
\par }
7100
Scribble7100





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantInteger Fields \cf1\b0\fs16  
\par \strike TInstantInteger\strike0\{linkID=7070>main\}\{keepn\}
\par 
\par }
7110
Scribble7110





Imported



FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantInteger Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantInteger\strike0\{linkID=7070>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=7120\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantInteger
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=7180>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
7120
Scribble7120





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
7130
Scribble7130





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantInteger Events \cf1\b0\fs16 
\par \strike TInstantInteger\strike0\{linkID=7070>main\}\cf0\{keepn\}\cf1 
\par 
\par }
7140
Scribble7140





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantInteger Methods \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantInteger\strike0\{linkID=7070>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=7150\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
7150
Scribble7150





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
7160
Scribble7160





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantInteger Members \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantInteger\strike0\{linkID=7070>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=7170\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=7180>main\}
\par 
\par }
7170
Scribble7170





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
7180
Scribble7180
TInstantInteger.Value
TInstantInteger,Value;Value;Value,TInstantInteger;



Imported
main

TInstantInteger_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantInteger.Value \cf1\b0\fs16 
\par \strike TInstantInteger\strike0\{linkID=7070>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the Integer attribute
\par \pard\sb25\sa25\b\f1 property\b0  Value: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the Integer attribute.
\par 
\par }
7190
Scribble7190
TInstantMemo
TInstantMemo;


classessymbol:000350
Imported
main

TInstantMemo;TInstantMemo_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantMemo \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul Hierarchy\ulnone\{linkID=7200\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 TInstantMemo represents a memo.
\par \pard\sb25\sa25\tx1435\f1 TInstantMemo = \b class\b0 (\strike TInstantBlob\strike0\{linkID=2680>main\})
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantMemo holds a memo as its value. A memo is special binary large object (Blob) that contain multi-line text data.
\par 
\par }
7200
Scribble7200





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10430>main\}
\par \tab |
\par \strike TInstantBlob\strike0\{linkID=2680>main\}
\par \tab |
\par \strike TInstantMemo\strike0\{linkID=7190>main\}
\par 
\par }
7210
Scribble7210





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantMemo Fields \cf1\b0\fs16  
\par \strike TInstantMemo\strike0\{linkID=7190>main\}\{keepn\}
\par 
\par }
7220
Scribble7220





Imported



FALSE
28
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantMemo Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantMemo\strike0\{linkID=7190>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=7230\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantBlob
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Size\strike0\{linkID=2790>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=2800>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
7230
Scribble7230





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
7240
Scribble7240





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantMemo Events \cf1\b0\fs16 
\par \strike TInstantMemo\strike0\{linkID=7190>main\}\cf0\{keepn\}\cf1 
\par 
\par }
7250
Scribble7250





Imported



FALSE
25
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantMemo Methods \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantMemo\strike0\{linkID=7190>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=7260\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantBlob
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=2810>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadDataFromStream\strike0\{linkID=2820>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadBuffer\strike0\{linkID=2830>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveDataToStream\strike0\{linkID=2840>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteBuffer\strike0\{linkID=2850>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
7260
Scribble7260





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
7270
Scribble7270





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantMemo Members \cf1\b0\fs16 
\par \strike TInstantMemo\strike0\{linkID=7190>main\}\tab\ul Legend\ulnone\{linkID=7280\}\cf0\{keepn\}\cf1 
\par 
\par }
7280
Scribble7280





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
7290
Scribble7290
TInstantNumeric
TInstantNumeric;


classessymbol:000360
Imported
main

TInstantNumeric;TInstantNumeric_Object
FALSE
16
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantNumeric \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul Hierarchy\ulnone\{linkID=7300\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 TInstantNumeric is the ancestor of attribute classes that represent a numeric value.
\par \pard\sb25\sa25\tx1435\f1 TInstantNumeric = \b class\b0 (\strike TInstantSimple\strike0\{linkID=10430>main\})
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantNumeric is the ancestor of attribute classes that represent a numeric value.
\par \pard\strike 
\par \strike0 TInstantNumeric is abstract; so do not create instances of this class. Instead refer to the following concrete descendant classes:
\par 
\par \b Numeric attribute classes
\par \b0\strike TInstantInteger\strike0\{linkID=7070>main\}
\par \strike TInstantFloat\strike0\{linkID=6840>main\}
\par \strike TInstant\lang1033\f2 Currency\lang1040\strike0\f0\{linkID=\lang1033\f2 4670\lang1040\f0 >main\}
\par }
7300
Scribble7300





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10430>main\}
\par \tab |
\par \strike TInstantNumeric\strike0\{linkID=7290>main\}
\par 
\par }
7310
Scribble7310





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantNumeric Fields \cf1\b0\fs16  
\par \strike TInstantNumeric\strike0\{linkID=7290>main\}\{keepn\}
\par 
\par }
7320
Scribble7320





Imported



FALSE
25
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantNumeric Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantNumeric\strike0\{linkID=7290>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=7330\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
7330
Scribble7330





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
7340
Scribble7340





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantNumeric Events \cf1\b0\fs16 
\par \strike TInstantNumeric\strike0\{linkID=7290>main\}\cf0\{keepn\}\cf1 
\par 
\par }
7350
Scribble7350





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantNumeric Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantNumeric\strike0\{linkID=7290>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=7360\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
7360
Scribble7360





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
7370
Scribble7370





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantNumeric Members \cf1\b0\fs16 
\par \strike TInstantNumeric\strike0\{linkID=7290>main\}\tab\ul Legend\ulnone\{linkID=7380\}\cf0\{keepn\}\cf1 
\par 
\par }
7380
Scribble7380





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
7390
Scribble7390
TInstantObject
TInstantObject;


classessymbol:000370
Imported
main

TInstantObject;TInstantObject_Object
FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5720\tx7100\tx8520\tx9940\ul Hierarchy\ulnone\{linkID=7420\}\tab\strike Members\strike0\{linkID=7490>nav\}\tab\strike Properties\strike0\{linkID=7440>nav\}\tab\strike Methods\strike0\{linkID=7470>nav\}\tab\strike Events\strike0\{linkID=7460>nav\}\tab\ul See Also\ulnone\{linkID=7400\}\tab\strike Example 1\strike0\{linkID=7410>example\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\tx7195\tx8635\fs18 The ancestor for classes with persistence capabilities.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\tx8635\f1 TInstantObject = \b class\b0 (\strike TInstantStreamable\strike0\{linkID=10830>main\}, IUnknown)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\tx8635\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\tx8635\b0 TInstantObject implements the methods required to manage persistent objects. It is the fundamental ancestor of classes that have the ability to store, retrieve and dispose their instances to and from a database.
\par To enable persistence capabilities for a class, the only requirement is that it ultimately descends from TInstantObject and that class and attribute metadata is specified as part of the class declaration. Furthermore attribute fields need to be declared for the attributes of the class. Attribute fields contain instances of \strike TInstantAttribute\strike0\{linkID=2170>main\} descendants. The attribute objects are created and destroyed automatically.
\par Instances of classes descending from TInstantObject exist only once in memory. This means that if an object has been retrieved from the database, any subsequent requests for the same object will be given a reference to the instance already in memory. Instances will not be removed from memory until the last dependent reference is destroyed.
\par 
\par }
7400
Scribble7400





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \strike TInstantExposer\strike0\{linkID=6450>main\}
\par }
7410
Scribble7410
TInstantObject, Example 1
TInstantObject,Example 1;



Imported
example


FALSE
36
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\keep\f1\fs18 TPerson = class(TInstantObject)
\par \{\- stored                                   
\par   DateOfBirth: DateTime default 'Now';     
\par   FirstName: String(20);                   
\par   Gender: Integer;                         
\par   LastName: String(20);                    
\par   MiddleName: String(50); \}                
\par   _DateOfBirth: \strike TInstantDateTime\strike0\{linkID=5670>main\};          
\par   _FirstName: \strike TInstantString\strike0\{linkID=11000>main\};              
\par   _Gender: \strike TInstantInteger\strike0\{linkID=7070>main\};                
\par   _LastName: \strike TInstantString\strike0\{linkID=11000>main\};               
\par   _MiddleName: \strike TInstantString\strike0\{linkID=11000>main\};             
\par private
\par   function GetDateOfBirth: TDate;
\par   function GetFirstName: string;
\par   function GetGender: TGender;
\par   function GetLastName: string;
\par   function GetMiddleName: string;
\par   procedure SetDateOfBirth(const Value: TDate);
\par   procedure SetFirstName(const Value: string);
\par   procedure SetGender(const Value: TGender);
\par   procedure SetLastName(const Value: string);
\par   procedure SetMiddleName(const Value: string);
\par published
\par   property DateOfBirth: TDate read GetDateOfBirth write SetDateOfBirth;
\par   property FirstName: string read GetFirstName write SetFirstName;
\par   property Gender: TGender read GetGender write SetGender;
\par   property LastName: string read GetLastName write SetLastName;
\par   property MiddleName: string read GetMiddleName write SetMiddleName;
\par end;
\par 
\par }
7420
Scribble7420





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantObject\strike0\{linkID=7390>main\}
\par 
\par }
7430
Scribble7430





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantObject Fields \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par 
\par }
7440
Scribble7440





Imported



FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantObject Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantObject\strike0\{linkID=7390>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=7450\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantObject
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Caption\strike0\{linkID=7510>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=7530>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike DefaultContainer\strike0\{linkID=7540>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike HasDefaultContainer\strike0\{linkID=7560>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Id\strike0\{linkID=7570>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsAbandoned\strike0\{linkID=7590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=7600>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=7620>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIdChanged\strike0\{linkID=7630>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsOwned\strike0\{linkID=7650>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsPersistent\strike0\{linkID=7670>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectChangeCount\strike0\{linkID=7680>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectClass\strike0\{linkID=7690>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=7700>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Objects\strike0\{linkID=7720>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=7740>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OwnerAttribute\strike0\{linkID=7760>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike PersistentId\strike0\{linkID=7770>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RefCount\strike0\{linkID=7790>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike UpdateCount\strike0\{linkID=7810>main\}
\par 
\par }
7450
Scribble7450





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
7460
Scribble7460





Imported



FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantObject Events \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantObject
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnAfterContentChange\strike0\{linkID=9080>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnAttributeChanged\strike0\{linkID=9100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnBeforeContentChange\strike0\{linkID=9110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnChange\strike0\{linkID=9130>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnError\strike0\{linkID=9150>main\}
\par 
\par }
7470
Scribble7470





Imported



FALSE
82
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantObject Methods \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantObject\strike0\{linkID=7390>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=7480\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantObject
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike _AddRef\strike0\{linkID=7820>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike _Release\strike0\{linkID=7840>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Abandon\strike0\{linkID=7860>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddObject\strike0\{linkID=7880>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddRef\strike0\{linkID=7900>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterAddRef\strike0\{linkID=7920>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterAssign\strike0\{linkID=7940>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterContentChange\strike0\{linkID=7960>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterCreate\strike0\{linkID=7980>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterCreateAttributes\strike0\{linkID=8000>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterDispose\strike0\{linkID=8020>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterRefresh\strike0\{linkID=8040>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterRetrieve\strike0\{linkID=8060>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterStore\strike0\{linkID=8080>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ApplyState\strike0\{linkID=8100>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Assign\strike0\{linkID=8120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AttributeByName\strike0\{linkID=8140>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AttributeChanged\strike0\{linkID=8160>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeAssign\strike0\{linkID=8180>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeContentChange\strike0\{linkID=8200>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeCreateAttributes\strike0\{linkID=8220>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeDispose\strike0\{linkID=8240>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeRefresh\strike0\{linkID=8260>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeRelease\strike0\{linkID=8280>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeStore\strike0\{linkID=8290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CanDispose\strike0\{linkID=8310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CanStore\strike0\{linkID=8320>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Changed\strike0\{linkID=8330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ChangesDisabled\strike0\{linkID=8350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CheckId\strike0\{linkID=8370>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ClassType\strike0\{linkID=8380>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ClearObjects\strike0\{linkID=8390>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike constructor Clone(Source: TInstantObject; AConnector: TInstantConnector); virtual; overload;\strike0\{linkID=8410>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function Clone(AConnector: TInstantConnector): TInstantObject; overload;\strike0\{linkID=8430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ContainerByName\strike0\{linkID=8450>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=8470>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=8490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DeleteObject\strike0\{linkID=8500>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Destruct\strike0\{linkID=8520>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DisableChanges\strike0\{linkID=8540>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Dispose\strike0\{linkID=8570>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike DisposeOwnedObject\strike0\{linkID=8590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnableChanges\strike0\{linkID=8600>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EqualsPersistentSignature\strike0\{linkID=8620>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EqualsSignature\strike0\{linkID=8640>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Finalize\strike0\{linkID=8660>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FindAttribute\strike0\{linkID=8680>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FindContainer\strike0\{linkID=8700>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike GenerateId\strike0\{linkID=8720>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike HandleError\strike0\{linkID=8740>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOfObject\strike0\{linkID=8760>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=8780>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike InsertObject\strike0\{linkID=8800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsOperationAllowed\strike0\{linkID=8820>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Metadata\strike0\{linkID=8840>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike OwnedObjectChanged\strike0\{linkID=8850>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike OwnerChanged\strike0\{linkID=8870>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike QueryInterface\strike0\{linkID=8880>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Refresh\strike0\{linkID=8890>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshAll\strike0\{linkID=8910>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Release\strike0\{linkID=8920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RemoveObject\strike0\{linkID=8940>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ResetAttributes\strike0\{linkID=8960>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike RestoreState\strike0\{linkID=8970>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Retrieve\strike0\{linkID=8990>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike SaveState\strike0\{linkID=9010>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Store\strike0\{linkID=9030>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Unchanged\strike0\{linkID=9050>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike VerifyOperation\strike0\{linkID=9060>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
7480
Scribble7480





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
7490
Scribble7490





Imported



FALSE
103
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantObject Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantObject\strike0\{linkID=7390>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=7500\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Caption\strike0\{linkID=7510>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=7530>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike DefaultContainer\strike0\{linkID=7540>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike HasDefaultContainer\strike0\{linkID=7560>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Id\strike0\{linkID=7570>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsAbandoned\strike0\{linkID=7590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=7600>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=7620>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIdChanged\strike0\{linkID=7630>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsOwned\strike0\{linkID=7650>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsPersistent\strike0\{linkID=7670>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectChangeCount\strike0\{linkID=7680>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectClass\strike0\{linkID=7690>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=7700>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Objects\strike0\{linkID=7720>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=7740>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike OwnerAttribute\strike0\{linkID=7760>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike PersistentId\strike0\{linkID=7770>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RefCount\strike0\{linkID=7790>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike UpdateCount\strike0\{linkID=7810>main\}
\par \pard\sb55\sa55\tx355\b Events
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnAfterContentChange\strike0\{linkID=9080>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnAttributeChanged\strike0\{linkID=9100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnBeforeContentChange\strike0\{linkID=9110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnChange\strike0\{linkID=9130>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnError\strike0\{linkID=9150>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike _AddRef\strike0\{linkID=7820>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike _Release\strike0\{linkID=7840>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Abandon\strike0\{linkID=7860>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddObject\strike0\{linkID=7880>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddRef\strike0\{linkID=7900>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterAddRef\strike0\{linkID=7920>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterAssign\strike0\{linkID=7940>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterContentChange\strike0\{linkID=7960>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterCreate\strike0\{linkID=7980>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterCreateAttributes\strike0\{linkID=8000>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterDispose\strike0\{linkID=8020>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterRefresh\strike0\{linkID=8040>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterRetrieve\strike0\{linkID=8060>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AfterStore\strike0\{linkID=8080>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ApplyState\strike0\{linkID=8100>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Assign\strike0\{linkID=8120>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AttributeByName\strike0\{linkID=8140>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike AttributeChanged\strike0\{linkID=8160>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeAssign\strike0\{linkID=8180>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeContentChange\strike0\{linkID=8200>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeCreateAttributes\strike0\{linkID=8220>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeDispose\strike0\{linkID=8240>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeRefresh\strike0\{linkID=8260>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeRelease\strike0\{linkID=8280>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike BeforeStore\strike0\{linkID=8290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CanDispose\strike0\{linkID=8310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CanStore\strike0\{linkID=8320>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Changed\strike0\{linkID=8330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ChangesDisabled\strike0\{linkID=8350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CheckId\strike0\{linkID=8370>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ClassType\strike0\{linkID=8380>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ClearObjects\strike0\{linkID=8390>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike constructor Clone(Source: TInstantObject; AConnector: TInstantConnector); virtual; overload;\strike0\{linkID=8410>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function Clone(AConnector: TInstantConnector): TInstantObject; overload;\strike0\{linkID=8430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ContainerByName\strike0\{linkID=8450>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=8470>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=8490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DeleteObject\strike0\{linkID=8500>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Destruct\strike0\{linkID=8520>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DisableChanges\strike0\{linkID=8540>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Dispose\strike0\{linkID=8570>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike DisposeOwnedObject\strike0\{linkID=8590>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnableChanges\strike0\{linkID=8600>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EqualsPersistentSignature\strike0\{linkID=8620>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EqualsSignature\strike0\{linkID=8640>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Finalize\strike0\{linkID=8660>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FindAttribute\strike0\{linkID=8680>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FindContainer\strike0\{linkID=8700>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike GenerateId\strike0\{linkID=8720>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike HandleError\strike0\{linkID=8740>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOfObject\strike0\{linkID=8760>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=8780>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike InsertObject\strike0\{linkID=8800>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsOperationAllowed\strike0\{linkID=8820>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Metadata\strike0\{linkID=8840>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike OwnedObjectChanged\strike0\{linkID=8850>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike OwnerChanged\strike0\{linkID=8870>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike QueryInterface\strike0\{linkID=8880>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Refresh\strike0\{linkID=8890>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshAll\strike0\{linkID=8910>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Release\strike0\{linkID=8920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RemoveObject\strike0\{linkID=8940>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ResetAttributes\strike0\{linkID=8960>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike RestoreState\strike0\{linkID=8970>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Retrieve\strike0\{linkID=8990>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike SaveState\strike0\{linkID=9010>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Store\strike0\{linkID=9030>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Unchanged\strike0\{linkID=9050>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike VerifyOperation\strike0\{linkID=9060>main\}
\par 
\par }
7500
Scribble7500





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
7510
Scribble7510
TInstantObject.Caption
Caption;Caption,TInstantObject;TInstantObject,Caption;



Imported
main

Caption;Caption_Property;TInstantObject_Caption
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Caption \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7520\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the text string that identifies the object to the user.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Caption: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Caption specifies the text string that identifies the object. By default the \strike Id\strike0\{linkID=7570>main\} of the object is returned. If a different behavior is required the GetCaption method must be overridden.
\par 
\par }
7520
Scribble7520





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Id\strike0\{linkID=7570>main\}
\par }
7530
Scribble7530
TInstantObject.Connector
Connector;Connector,TInstantObject;TInstantObject,Connector;



Imported
main

Connector;Connector_Property;TInstantObject_Connector
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Connector \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the Connector associated with the instance.
\par \pard\sb25\sa25\b\f1 property\b0  Connector: \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Connector specifies the connector associated with the instance. The connector serves as the conduit between the instance and the database where the instance is or should be stored.
\par 
\par }
7540
Scribble7540
TInstantObject.DefaultContainer
DefaultContainer;DefaultContainer,TInstantObject;TInstantObject,DefaultContainer;



Imported
main

DefaultContainer;DefaultContainer_Property;TInstantObject_DefaultContainer
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.DefaultContainer \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7550\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 The default container attribute for the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  DefaultContainer: \strike TInstantContainer\strike0\{linkID=4300>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 DefaultContainer returns the default container attribute for the instance. The name of the Default container is specified as part of the metadata for the class. The DefaultContainer enables a convenient way of accessing instances of \strike TInstantObject\strike0\{linkID=7390>main\} descendants that mainly serves as containers. \strike TInstantObject\strike0\{linkID=7390>main\} introduces several methods that accesses the default container attribute.
\par 
\par }
7550
Scribble7550





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Objects\strike0\{linkID=7720>main\}
\par }
7560
Scribble7560
TInstantObject.HasDefaultContainer
HasDefaultContainer;HasDefaultContainer,TInstantObject;TInstantObject,HasDefaultContainer;



Imported
main

HasDefaultContainer;HasDefaultContainer_Property;TInstantObject_HasDefaultContainer
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.HasDefaultContainer \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines is a default container exists for the instance.
\par \pard\sb25\sa25\b\f1 property\b0  HasDefaultContainer: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasDefaultContainer to determine if a default container exists for the instance.
\par 
\par }
7570
Scribble7570
TInstantObject.Id
Id;Id,TInstantObject;TInstantObject,Id;



Imported
main

Id;Id_Property;TInstantObject_Id
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Id \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7580\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the unique Id of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Id: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The Id is the identification of an object. To store an object in a database, it must have an unique signature. The signature denotes the combination of the class name and the Id of the instance. The Id may be a generated value, but it can also be composed out of one or more key attribute of the class. If the instance does not have Id when it is stored, an Id is generated automatically. Override the GetId and SetId to customize the way a class manages its Id.
\par 
\par }
7580
Scribble7580





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Caption\strike0\{linkID=7510>main\}
\par }
7590
Scribble7590
TInstantObject.IsAbandoned
IsAbandoned;IsAbandoned,TInstantObject;TInstantObject,IsAbandoned;



Imported
main

IsAbandoned;IsAbandoned_Property;TInstantObject_IsAbandoned
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsAbandoned \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if the object has been abandoned by its connector
\par \pard\sb25\sa25\b\f1 property\b0  IsAbandoned: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use IsAbandoned to determine if the instance has been abandoned by its connector. If a connector is destroyed prematurely, it automatically abandons all objects that may still be used in the application. These objects are even if they have been abandoned intact with the exception that they cannot be stored, retrieve or refreshed.
\par 
\par }
7600
Scribble7600
TInstantObject.IsChanged
IsChanged;IsChanged,TInstantObject;TInstantObject,IsChanged;



Imported
main

IsChanged;IsChanged_Property;TInstantObject_IsChanged
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsChanged \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7610\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies if the instance is changed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsChanged: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 IsChanged returns True if the instance has been marked as changed, either by setting IsChanged to True directly, because some of its attributes were changed or the \strike Changed\strike0\{linkID=8330>main\} method was explicitly called.
\par 
\par }
7610
Scribble7610





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Changed\strike0\{linkID=8330>main\}
\par }
7620
Scribble7620
TInstantObject.IsDefault
IsDefault;IsDefault,TInstantObject;TInstantObject,IsDefault;



Imported
main

IsDefault;IsDefault_Property;TInstantObject_IsDefault
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsDefault \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if the instance is default.
\par \pard\sb25\sa25\b\f1 property\b0  IsDefault: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 IsDefault returns True if all the attributes of the instance have default values and the \strike Id\strike0\{linkID=7570>main\} property of the instance contains and empty string.
\par 
\par }
7630
Scribble7630
TInstantObject.IsIdChanged
IsIdChanged;IsIdChanged,TInstantObject;TInstantObject,IsIdChanged;



Imported


IsIdChanged;IsIdChanged_Property;TInstantObject_IsIdChanged
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsIdChanged \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7640\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies if the \strike Id\strike0\{linkID=7570>main\} has been changed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsIdChanged: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 IsIdChanged returns True if the \strike Id\strike0\{linkID=7570>main\} of the instance has been changed since the instance was either retrieved from the database or created.
\par 
\par }
7640
Scribble7640





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.IsChanged\strike0\{linkID=7600>main\}
\par }
7650
Scribble7650
TInstantObject.IsOwned
IsOwned;IsOwned,TInstantObject;TInstantObject,IsOwned;



Imported
main

IsOwned;IsOwned_Property;TInstantObject_IsOwned
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsOwned \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7660\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies if the instance has an owner.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  IsOwned: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 IsOwned returns True if the instance has an owner.
\par 
\par }
7660
Scribble7660





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Owner\strike0\{linkID=7740>main\}
\par }
7670
Scribble7670
TInstantObject.IsPersistent
IsPersistent;IsPersistent,TInstantObject;TInstantObject,IsPersistent;



Imported
main

IsPersistent;IsPersistent_Property;TInstantObject_IsPersistent
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsPersistent \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies if the instance has been stored.
\par \pard\sb25\sa25\b\f1 property\b0  IsPersistent: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 IsPersistent returns True if the instance has been stored to the database.
\par 
\par }
7680
Scribble7680
TInstantObject.ObjectChangeCount
ObjectChangeCount;ObjectChangeCount,TInstantObject;TInstantObject,ObjectChangeCount;



Imported
main

ObjectChangeCount;ObjectChangeCount_Property;TInstantObject_ObjectChangeCount
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ObjectChangeCount \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Returns the number of changed objects in the default container of the instance.
\par \pard\sb25\sa25\b\f1 property\b0  ObjectChangeCount: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 ObjectChangeCount returns the number of changed objects in the default container of the instance. If no default container is specified, ObjectChangeCount raises an exception.
\par 
\par }
7690
Scribble7690
TInstantObject.ObjectClass
ObjectClass;ObjectClass,TInstantObject;TInstantObject,ObjectClass;



Imported
main

ObjectClass;ObjectClass_Property;TInstantObject_ObjectClass
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ObjectClass \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns the class type for the default container of the instance.
\par \pard\sb25\sa25\b\f1 property\b0  ObjectClass: TInstantObjectClass;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 ObjectClass returns the minimum required class type for the default container of the instance. If no default container is specified, ObjectClass raises an exception.
\par 
\par }
7700
Scribble7700
TInstantObject.ObjectCount
ObjectCount;ObjectCount,TInstantObject;TInstantObject,ObjectCount;



Imported
main

ObjectCount;ObjectCount_Property;TInstantObject_ObjectCount
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ObjectCount \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7710\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Returns the number of objects in the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectCount: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ObjectCount returns the number of objects in the default container of the instance. If no default container is specified, ObjectCount raises an exception.
\par 
\par }
7710
Scribble7710





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Objects\strike0\{linkID=7720>main\}
\par }
7720
Scribble7720
TInstantObject.Objects
Objects;Objects,TInstantObject;TInstantObject,Objects;



Imported
main

Objects;Objects_Property;TInstantObject_Objects
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Objects \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7730\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies a reference to an object at a given position in the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Objects [\b Index\b0 : Integer]: \strike TInstantObject\strike0\{linkID=7390>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use Objects to obtain a reference or change a reference to an object at a specified position in the default container of the instance. The Index argument indicates the zero-based index of the object. Use Objects with the \strike ObjectCount\strike0\{linkID=7700>main\} property to iterate through all of the objects in the default container. If no default container is specified, Objects raises an exception.
\par 
\par }
7730
Scribble7730





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.ObjectCount\strike0\{linkID=7700>main\}
\par }
7740
Scribble7740
TInstantObject.Owner
Owner;Owner,TInstantObject;TInstantObject,Owner;



Imported
main

Owner;Owner_Property;TInstantObject_Owner
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Owner \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7750\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the object that owns the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Owner: \strike TInstantObject\strike0\{linkID=7390>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use Owner to access the owner of the instance. The owning object is responsible for the creation as well as the destruction of the instance. If the instance is not owned, Owner returns nil.
\par 
\par }
7750
Scribble7750





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.IsOwned\strike0\{linkID=7650>main\}
\par }
7760
Scribble7760
TInstantObject.OwnerAttribute
OwnerAttribute;OwnerAttribute,TInstantObject;TInstantObject,OwnerAttribute;



Imported
main

OwnerAttribute;OwnerAttribute_Property;TInstantObject_OwnerAttribute
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OwnerAttribute \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies the context of an owned object.
\par \pard\sb25\sa25\b\f1 property\b0  OwnerAttribute: \strike TInstantComplex\strike0\{linkID=3190>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use OwnerAttribute to obtain a reference to the attribute object that constitutes the context for the instance.
\par 
\par }
7770
Scribble7770
TInstantObject.PersistentId
PersistentId;PersistentId,TInstantObject;TInstantObject,PersistentId;



Imported
main

PersistentId;PersistentId_Property;TInstantObject_PersistentId
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.PersistentId \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7780\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Contains the persistent \strike Id\strike0\{linkID=7570>main\} of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  PersistentId: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 PersistentId returns the persistent \strike Id\strike0\{linkID=7570>main\} of the instance. Since the \strike Id\strike0\{linkID=7570>main\} of the Instance may change, PersistentId keeps the value of the \strike Id\strike0\{linkID=7570>main\} when it was retrieved from the database.
\par 
\par }
7780
Scribble7780





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Id\strike0\{linkID=7570>main\}
\par }
7790
Scribble7790
TInstantObject.RefCount
RefCount;RefCount,TInstantObject;TInstantObject,RefCount;



Imported
main

RefCount;RefCount_Property;TInstantObject_RefCount
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.RefCount \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7800\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Indicates the number of references to the instance.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  RefCount: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 RefCount is the number of references to the instance. RefCount is used to determine when the instance can be removed from memory. When RefCount is zero, the object can be removed. RefCount is automatically incremented when references to the instance are retrieved, and is automatically decremented when the references are destroyed. RefCount is incremented \strike AddRef\strike0\{linkID=7900>main\} method and decremented by the \strike Release\strike0\{linkID=8920>main\} method.
\par 
\par }
7800
Scribble7800





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AddRef\strike0\{linkID=7900>main\}
\par \strike TInstantObject.Release\strike0\{linkID=8920>main\}
\par }
7810
Scribble7810
TInstantObject.UpdateCount
TInstantObject,UpdateCount;UpdateCount;UpdateCount,TInstantObject;



Imported
main

TInstantObject_UpdateCount;UpdateCount;UpdateCount_Property
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.UpdateCount \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies how many times the instance was updated in the database
\par \pard\sb25\sa25\b\f1 property\b0  UpdateCount: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 UpdateCount specifies how many times the instance was updated in the database.
\par 
\par }
7820
Scribble7820
TInstantObject._AddRef
_AddRef;_AddRef,TInstantObject;TInstantObject,_AddRef;



Imported
main

_AddRef;_AddRef_Method;TInstantObject__AddRef
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject._AddRef \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7830\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Increments the reference count for the number of references dependent on the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  _AddRef: Integer; \b stdcall\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 _AddRef implements the IUnknown interface method, \strike AddRef\strike0\{linkID=7900>main\}, defined by COM. It calls the \strike AddRef\strike0\{linkID=7900>main\} method which increments the reference count for the instance. _AddRef returns the resulting value of the reference count for the instance.
\par 
\par }
7830
Scribble7830





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject._Release\strike0\{linkID=7840>main\}
\par }
7840
Scribble7840
TInstantObject._Release
_Release;_Release,TInstantObject;TInstantObject,_Release;



Imported
main

_Release;_Release_Method;TInstantObject__Release
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject._Release \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7850\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Decrements the reference count for the number of references dependent on the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  _Release: Integer; \b stdcall\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 _Release implements the IUnknown interface method, \strike Release\strike0\{linkID=8920>main\}, defined by COM. It calls the \strike Release\strike0\{linkID=8920>main\} method which decrements the reference count for the instance. _Release returns the resulting value of the reference count for the instance.
\par 
\par }
7850
Scribble7850





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject._AddRef\strike0\{linkID=7820>main\}
\par }
7860
Scribble7860
TInstantObject.Abandon
Abandon;Abandon,TInstantObject;TInstantObject,Abandon;



Imported
main

Abandon;Abandon_Method;TInstantObject_Abandon
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Abandon \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7870\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Abandons the object
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Abandon;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Abandon to set the instance in a state where it no longer attempts to store, dispose or refresh itself when the relevant methods are used. Abandon is called automatically by the connector associated with the instance if the connector is destroyed prematurely.
\par 
\par }
7870
Scribble7870





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.IsAbandoned\strike0\{linkID=7590>main\}
\par }
7880
Scribble7880
TInstantObject.AddObject
AddObject;AddObject,TInstantObject;TInstantObject,AddObject;



Imported
main

AddObject;AddObject_Method;TInstantObject_AddObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AddObject \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7890\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Adds an object to the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  AddObject(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}): Integer; \b overload\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AddObject adds an object to the default container of the instance. If no default container is specified, AddObject raises an exception.
\par 
\par }
7890
Scribble7890





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DefaultContainer\strike0\{linkID=7540>main\}
\par \strike TInstantContainer.Add\strike0\{linkID=4450>main\}
\par }
7900
Scribble7900
TInstantObject.AddRef
AddRef;AddRef,TInstantObject;TInstantObject,AddRef;



Imported
main

AddRef;AddRef_Method;TInstantObject_AddRef
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AddRef \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7910\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Increments the reference count for the number of references dependent on the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  AddRef: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AddRef increments the reference count for the instance and returns the resulting value of the reference count. Although it should not normally be necessary to call AddRef directly, it can be called to safeguard an object before calling a method that could result in a premature destruction of the object, and after the method returns, call the \strike Release\strike0\{linkID=8920>main\} method to decrement the count.
\par 
\par }
7910
Scribble7910





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Release\strike0\{linkID=8920>main\}
\par }
7920
Scribble7920
TInstantObject.AfterAddRef
AfterAddRef;AfterAddRef,TInstantObject;TInstantObject,AfterAddRef;



Imported
main

AfterAddRef;AfterAddRef_Method;TInstantObject_AfterAddRef
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterAddRef \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7930\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after a reference has been added to the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterAddRef; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterAddRef is called automatically immediately after a reference has been added to the instance. Do not call it explicitly in your applications. The AfterAddRef method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks when references are added to instances of the class.
\par 
\par }
7930
Scribble7930





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeRelease\strike0\{linkID=8280>main\}
\par }
7940
Scribble7940
TInstantObject.AfterAssign
AfterAssign;AfterAssign,TInstantObject;TInstantObject,AfterAssign;



Imported
main

AfterAssign;AfterAssign_Method;TInstantObject_AfterAssign
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterAssign \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7950\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after assigning the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterAssign; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterAssign is called automatically immediately after assignment has been performed using the \strike Assign\strike0\{linkID=8120>main\} method of the instance. Do not call it explicitly in your applications. The AfterAssign method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to assignment without overriding the \strike Assign\strike0\{linkID=8120>main\} method.
\par 
\par }
7950
Scribble7950





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeAssign\strike0\{linkID=8180>main\}
\par }
7960
Scribble7960
TInstantObject.AfterContentChange
AfterContentChange;AfterContentChange,TInstantObject;TInstantObject,AfterContentChange;



Imported
main

AfterContentChange;AfterContentChange_Method;TInstantObject_AfterContentChange
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterContentChange \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7970\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called automatically after the content of a container has changed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterContentChange(Container: \strike TInstantContainer\strike0\{linkID=4300>main\}; ChangeType: \strike TInstantContentChangeType\strike0\{linkID=12240>main\}; \b Index\b0 : Integer; AObject: \strike TInstantObject\strike0\{linkID=7390>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterContentChange is called automatically after the content of a container has changed. Do not call it explicitly in your applications. The AfterContentChange method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks after the content of a container has changed. The Container is specified by the Container argument. The ChangeType specifies the type of change that occurred. The Index argument specifies the index in the containers array of objects where the change occurred. The AObject argument holds a reference to the object for which the change occurred. Please note that this reference may be unassigned.
\par 
\par }
7970
Scribble7970





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeContentChange\strike0\{linkID=8200>main\}
\par \strike TInstantObject.OnAfterContentChange\strike0\{linkID=9080>main\}
\par }
7980
Scribble7980
TInstantObject.AfterCreate
AfterCreate;AfterCreate,TInstantObject;TInstantObject,AfterCreate;



Imported
main

AfterCreate;AfterCreate_Method;TInstantObject_AfterCreate
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterCreate \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=7990\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after the new instance has been created.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterCreate; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterCreate is called automatically immediately after the new instance has been created using the \strike Create\strike0\{linkID=8470>main\} constructor. Do not call it explicitly in your applications. The AfterCreate method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the creation of new objects.
\par 
\par }
7990
Scribble7990





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Create\strike0\{linkID=8470>main\}
\par \strike TInstantObject.AfterRetrieve\strike0\{linkID=8060>main\}
\par \strike TInstantObject.Initialize\strike0\{linkID=8780>main\}
\par }
8000
Scribble8000
TInstantObject.AfterCreateAttributes
AfterCreateAttributes;AfterCreateAttributes,TInstantObject;TInstantObject,AfterCreateAttributes;



Imported
main

AfterCreateAttributes;AfterCreateAttributes_Method;TInstantObject_AfterCreateAttributes
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterCreateAttributes \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8010\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called after the attributes have been created.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterCreateAttributes; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterCreateAttributes is called automatically immediately after the attributes of the instance have been created. Do not call it explicitly in your applications. The AfterCreateAttributes method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the creation of attributes.
\par 
\par }
8010
Scribble8010





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeCreateAttributes\strike0\{linkID=8220>main\}
\par }
8020
Scribble8020
TInstantObject.AfterDispose
AfterDispose;AfterDispose,TInstantObject;TInstantObject,AfterDispose;



Imported
main

AfterDispose;AfterDispose_Method;TInstantObject_AfterDispose
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterDispose \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8030\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after the instance has been disposed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterDispose; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterDispose is called automatically immediately after the instance has been disposed. Do not call it explicitly in your applications. The AfterDispose method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks after instances are disposed.
\par 
\par }
8030
Scribble8030





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeDispose\strike0\{linkID=8240>main\}
\par \strike TInstantObject.Dispose\strike0\{linkID=8570>main\}
\par }
8040
Scribble8040
TInstantObject.AfterRefresh
AfterRefresh;AfterRefresh,TInstantObject;TInstantObject,AfterRefresh;



Imported
main

AfterRefresh;AfterRefresh_Method;TInstantObject_AfterRefresh
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterRefresh \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8050\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after the instance has been refreshed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterRefresh; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterRefresh is called automatically immediately after the instance has been refreshed. Do not call it explicitly in your applications. The AfterRefresh method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks after instances are refreshed.
\par 
\par }
8050
Scribble8050





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeRefresh\strike0\{linkID=8260>main\}
\par \strike TInstantObject.Refresh\strike0\{linkID=8890>main\}
\par }
8060
Scribble8060
TInstantObject.AfterRetrieve
AfterRetrieve;AfterRetrieve,TInstantObject;TInstantObject,AfterRetrieve;



Imported
main

AfterRetrieve;AfterRetrieve_Method;TInstantObject_AfterRetrieve
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterRetrieve \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8070\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after the instance has been retrieved.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterRetrieve; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterRetrieve is called automatically immediately after the instance has been retrieved using the \strike Retrieve\strike0\{linkID=8990>main\} constructor. Do not call it explicitly in your applications. The AfterRetrieve method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the retrieval of existing objects.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  AfterRetrieve is not only called when a persistent object is brought from the database into memory for the first time, but also for subsequent requests for the object. Therefore no memory allocation should be performed here.
\par 
\par }
8070
Scribble8070





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Retrieve\strike0\{linkID=8990>main\}
\par \strike TInstantObject.Initialize\strike0\{linkID=8780>main\}
\par \strike TInstantObject.AfterCreate\strike0\{linkID=7980>main\}
\par }
8080
Scribble8080
TInstantObject.AfterStore
AfterStore;AfterStore,TInstantObject;TInstantObject,AfterStore;



Imported
main

AfterStore;AfterStore_Method;TInstantObject_AfterStore
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AfterStore \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8090\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after the instance has been stored.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AfterStore; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AfterStore is called automatically immediately after the instance has been stored. Do not call it explicitly in your applications. The AfterStore method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks after instances are stored.
\par 
\par }
8090
Scribble8090





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeStore\strike0\{linkID=8290>main\}
\par \strike TInstantObject.Store\strike0\{linkID=9030>main\}
\par }
8100
Scribble8100
TInstantObject.ApplyState
ApplyState;ApplyState,TInstantObject;TInstantObject,ApplyState;



Imported
main

ApplyState;ApplyState_Method;TInstantObject_ApplyState
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ApplyState \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8110\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Applies the state of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  ApplyState; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ApplyState applies the state of the instance. ApplyState is called automatically. Do not call it explicitly in your applications.
\par 
\par }
8110
Scribble8110





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.SaveState\strike0\{linkID=9010>main\}
\par \strike TInstantObject.RestoreState\strike0\{linkID=8970>main\}
\par }
8120
Scribble8120
TInstantObject.Assign
Assign;Assign,TInstantObject;TInstantObject,Assign;



Imported
main

Assign;Assign_Method;TInstantObject_Assign
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Assign \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8130\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Copies the attributes of another object to the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Assign(Source: TPersistent); \b override\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Assign to copy the attributes of the Source object to the instance. Immediately before and after performing the assignment of the attributes, Assign calls the \strike BeforeAssign\strike0\{linkID=8180>main\} and \strike AfterAssign\strike0\{linkID=7940>main\} methods.
\par 
\par }
8130
Scribble8130





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.BeforeAssign\strike0\{linkID=8180>main\}
\par \strike TInstantObject.AfterAssign\strike0\{linkID=7940>main\}
\par }
8140
Scribble8140
TInstantObject.AttributeByName
AttributeByName;AttributeByName,TInstantObject;TInstantObject,AttributeByName;



Imported
main

AttributeByName;AttributeByName_Method;TInstantObject_AttributeByName
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AttributeByName \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8150\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Searches for an attribute by the its name.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  AttributeByName(\b const\b0  AttributeName: \b string\b0 ): \strike TInstantAttribute\strike0\{linkID=2170>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call AttributeByName to search for an attribute by its name. AttributeByName returns the TAttribute object for the specified attribute name. It is only rarely necessary to call AttributeByName since fields are declared for the attributes. If the Attribute does not exist, AttributeByName raises an exception.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  An application should not access the attributes of objects directly. Instead the classes that hold the attributes should also introduce properties and methods through which the attributes can be manipulated. Using this approach, attributes and the logic accompanying them can be encapsulated in the classes to which they belong.
\par 
\par }
8150
Scribble8150





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.FindAttribute\strike0\{linkID=8680>main\}
\par }
8160
Scribble8160
TInstantObject.AttributeChanged
AttributeChanged;AttributeChanged,TInstantObject;TInstantObject,AttributeChanged;



Imported
main

AttributeChanged;AttributeChanged_Method;TInstantObject_AttributeChanged
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.AttributeChanged \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8170\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after an attribute has changed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  AttributeChanged(Attribute: \strike TInstantAttribute\strike0\{linkID=2170>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 AttributeChanged is called automatically immediately after an attribute has changed. Do not call it explicitly in your applications. The AttributeChanged method implemented by \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override AttributeChanged when creating a class that needs to perform special tasks related to the change of attributes.
\par 
\par }
8170
Scribble8170





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Changed\strike0\{linkID=8330>main\}
\par }
8180
Scribble8180
TInstantObject.BeforeAssign
BeforeAssign;BeforeAssign,TInstantObject;TInstantObject,BeforeAssign;



Imported
main

BeforeAssign;BeforeAssign_Method;TInstantObject_BeforeAssign
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeAssign \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8190\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately before assigning the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  BeforeAssign; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 BeforeAssign is called automatically immediately before assignment is performed using the \strike Assign\strike0\{linkID=8120>main\} method of the instance. Do not call it explicitly in your applications. The BeforeAssign method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to assignment without overriding the \strike Assign\strike0\{linkID=8120>main\} method.
\par 
\par }
8190
Scribble8190





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterAssign\strike0\{linkID=7940>main\}
\par }
8200
Scribble8200
TInstantObject.BeforeContentChange
BeforeContentChange;BeforeContentChange,TInstantObject;TInstantObject,BeforeContentChange;



Imported
main

BeforeContentChange;BeforeContentChange_Method;TInstantObject_BeforeContentChange
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeContentChange \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8210\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called automatically before the content of a container is to be changed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  BeforeContentChange(Container: \strike TInstantContainer\strike0\{linkID=4300>main\}; ChangeType: \strike TInstantContentChangeType\strike0\{linkID=12240>main\}; \b Index\b0 : Integer; AObject: \strike TInstantObject\strike0\{linkID=7390>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 BeforeContentChange is called automatically before the content of a container is changed. Do not call it explicitly in your applications. The BeforeContentChange method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks before the content of a container is changed. The Container is specified by the Container argument. The ChangeType specifies the type of change that will occur. The Index argument specifies the index in the containers array of objects where the change will occur. The AObject argument holds a reference to the object for which the change will occur. Please note that this reference may be unassigned.
\par 
\par }
8210
Scribble8210





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterContentChange\strike0\{linkID=7960>main\}
\par \strike TInstantObject.OnBeforeContentChange\strike0\{linkID=9110>main\}
\par }
8220
Scribble8220
TInstantObject.BeforeCreateAttributes
BeforeCreateAttributes;BeforeCreateAttributes,TInstantObject;TInstantObject,BeforeCreateAttributes;



Imported
main

BeforeCreateAttributes;BeforeCreateAttributes_Method;TInstantObject_BeforeCreateAttributes
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeCreateAttributes \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8230\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Called before the attributes are created.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  BeforeCreateAttributes; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 BeforeCreateAttributes is called automatically immediately before the attributes of the instance are created. Do not call it explicitly in your applications. The BeforeCreateAttributes method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the creation of attributes.
\par 
\par }
8230
Scribble8230





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterCreateAttributes\strike0\{linkID=8000>main\}
\par }
8240
Scribble8240
TInstantObject.BeforeDispose
BeforeDispose;BeforeDispose,TInstantObject;TInstantObject,BeforeDispose;



Imported
main

BeforeDispose;BeforeDispose_Method;TInstantObject_BeforeDispose
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeDispose \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8250\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately before the instance is disposed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  BeforeDispose; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 BeforeDispose is called automatically immediately before the instance is disposed. Do not call it explicitly in your applications. The BeforeDispose method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks before instances are disposed.
\par 
\par }
8250
Scribble8250





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterDispose\strike0\{linkID=8020>main\}
\par \strike TInstantObject.Dispose\strike0\{linkID=8570>main\}
\par }
8260
Scribble8260
TInstantObject.BeforeRefresh
BeforeRefresh;BeforeRefresh,TInstantObject;TInstantObject,BeforeRefresh;



Imported
main

BeforeRefresh;BeforeRefresh_Method;TInstantObject_BeforeRefresh
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeRefresh \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8270\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately before the instance is refreshed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  BeforeRefresh; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 BeforeRefresh is called automatically immediately before the instance is refreshed. Do not call it explicitly in your applications. The BeforeRefresh method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks before instances are refreshed.
\par 
\par }
8270
Scribble8270





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterRefresh\strike0\{linkID=8040>main\}
\par \strike TInstantObject.Refresh\strike0\{linkID=8890>main\}
\par }
8280
Scribble8280
TInstantObject.BeforeRelease
BeforeRelease;BeforeRelease,TInstantObject;TInstantObject,BeforeRelease;



Imported
main

BeforeRelease;BeforeRelease_Method;TInstantObject_BeforeRelease
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeRelease \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Called automatically immediately before a reference to the instance is removed.
\par \pard\sb25\sa25\b\f1 procedure\b0  BeforeRelease; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 BeforeRelease is called automatically immediately before a reference to the instance is removed. Do not call it explicitly in your applications. The BeforeRelease method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks when references to instances of the class are removed.
\par 
\par }
8290
Scribble8290
TInstantObject.BeforeStore
BeforeStore;BeforeStore,TInstantObject;TInstantObject,BeforeStore;



Imported
main

BeforeStore;BeforeStore_Method;TInstantObject_BeforeStore
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.BeforeStore \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8300\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately before the instance is stored.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  BeforeStore; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 BeforeStore is called automatically immediately before the instance is stored. Do not call it explicitly in your applications. The \strike AfterStore\strike0\{linkID=8080>main\} method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks before instances are stored.
\par 
\par }
8300
Scribble8300





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterStore\strike0\{linkID=8080>main\}
\par \strike TInstantObject.Store\strike0\{linkID=9030>main\}
\par }
8310
Scribble8310
TInstantObject.CanDispose
CanDispose;CanDispose,TInstantObject;TInstantObject,CanDispose;



Imported
main

CanDispose;CanDispose_Method;TInstantObject_CanDispose
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.CanDispose \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines the if it is possible to dispose the instance.
\par \pard\sb25\sa25\b\f1 function\b0  CanDispose: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use CanDispose to determine if it is possible to dispose the instance.
\par 
\par }
8320
Scribble8320
TInstantObject.CanStore
CanStore;CanStore,TInstantObject;TInstantObject,CanStore;



Imported
main

CanStore;CanStore_Method;TInstantObject_CanStore
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.CanStore \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines the if it is possible to store the instance.
\par \pard\sb25\sa25\b\f1 function\b0  CanStore: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use CanStore to determine if it is possible to store the instance.
\par 
\par }
8330
Scribble8330
TInstantObject.Changed
Changed;Changed,TInstantObject;TInstantObject,Changed;



Imported
main

Changed;Changed_Method;TInstantObject_Changed
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Changed \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8340\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Generates an \strike OnChange\strike0\{linkID=9130>main\} event, and marks the Instance as changed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Changed; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Changed generates an \strike OnChange\strike0\{linkID=9130>main\} event, and marks the instance as changed by setting its \strike IsChanged\strike0\{linkID=7600>main\} property to True. If the instance is owned, the owner is notified about the change. It should normally not be necessary to call Changed directly since it is called if a change occurs to the instance. If changes are disabled, none of the above is performed.
\par 
\par }
8340
Scribble8340





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.ChangesDisabled\strike0\{linkID=8350>main\}
\par }
8350
Scribble8350
TInstantObject.ChangesDisabled
ChangesDisabled;ChangesDisabled,TInstantObject;TInstantObject,ChangesDisabled;



Imported
main

ChangesDisabled;ChangesDisabled_Method;TInstantObject_ChangesDisabled
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ChangesDisabled \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8360\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Determines if change notification and change of state is disabled for the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  ChangesDisabled: Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ChangesDisabled determines if the instance will recognize and notify occurring changes. If the value is True the instance is isolated, it neither recognizes nor notifies about changes.
\par 
\par }
8360
Scribble8360





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DisableChanges\strike0\{linkID=8540>main\}
\par \strike TInstantObject.EnableChanges\strike0\{linkID=8600>main\}
\par }
8370
Scribble8370
TInstantObject.CheckId
CheckId;CheckId,TInstantObject;TInstantObject,CheckId;



Imported
main

CheckId;CheckId_Method;TInstantObject_CheckId
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.CheckId \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Checks if the instance has a valid \strike Id\strike0\{linkID=7570>main\}
\par \pard\sb25\sa25\b\f1 procedure\b0  CheckId;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call CheckId to verify that the instance has a valid \strike Id\strike0\{linkID=7570>main\}. If the instance does not initially have an \strike Id\strike0\{linkID=7570>main\} when calling CheckId, an \strike Id\strike0\{linkID=7570>main\} is generated by the \strike InstantGenerateId\strike0\{linkID=11520>main\} function. If the instance initially has an \strike Id\strike0\{linkID=7570>main\}, this \strike Id\strike0\{linkID=7570>main\} is validated by calling the \strike InstantIsValidObjectId\strike0\{linkID=11590>main\} function.
\par 
\par }
8380
Scribble8380
TInstantObject.ClassType
ClassType;ClassType,TInstantObject;TInstantObject,ClassType;



Imported
main

ClassType;ClassType_Method;TInstantObject_ClassType
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ClassType \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns a pointer to the class type of the instance.
\par \pard\sb25\sa25\b\f1 function\b0  ClassType: TInstantObjectClass;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 ClassType determines the type of the instance an object. It is rarely necessary to call ClassType directly. Instead, use the is or as operator.
\par 
\par }
8390
Scribble8390
TInstantObject.ClearObjects
ClearObjects;ClearObjects,TInstantObject;TInstantObject,ClearObjects;



Imported
main

ClearObjects;ClearObjects_Method;TInstantObject_ClearObjects
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ClearObjects \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8400\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Removes all objects in the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  ClearObjects;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ClearObjects clears the default container of the instance. If no default container is specified, ClearObjects raises an exception.
\par 
\par }
8400
Scribble8400





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DefaultContainer\strike0\{linkID=7540>main\}
\par }
8410
Scribble8410
TInstantObject.Clone
Clone;Clone,TInstantObject;TInstantObject,Clone;



Imported
main

Clone;Clone_Method;TInstantObject_Clone
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Clone \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8420\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Copy-constructor that duplicates an object.
\par \pard\sb25\sa25\tx1435\b\f1 constructor\b0  \strike Clone\strike0\{linkID=8430>main\}(Source: \strike TInstantObject\strike0\{linkID=7390>main\}; AConnector: \strike TInstantConnector\strike0\{linkID=3770>main\}); \b virtual\b0 ; \b overload\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Creates a new instance that should duplicate another object specified by the Source argument. The AConnector argument can optionally be used to specify the connector associated with the duplicate object. If AConnector is not assigned, the default connector is used for the newly created instance. If also no default \strike Connector\strike0\{linkID=7530>main\} is specified, an exception is raised.
\par 
\par }
8420
Scribble8420





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Create\strike0\{linkID=8470>main\}
\par \strike TInstantObject.Retrieve\strike0\{linkID=8990>main\}
\par }
8430
Scribble8430
TInstantObject.Clone
Clone;Clone,TInstantObject;TInstantObject,Clone;



Imported
main

Clone;Clone_Method;TInstantObject_Clone
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Clone \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8440\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Creates and returns a duplicate of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  Clone(AConnector: \strike TInstantConnector\strike0\{linkID=3770>main\}): \strike TInstantObject\strike0\{linkID=7390>main\}; \b overload\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Clone to obtain a duplicate of the instance. The AConnector argument can be used to specify the connector associated with the duplicate object. If AConnector is not assigned (default) the connector associated with the instance is used.
\par 
\par }
8440
Scribble8440





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Clone\strike0\{linkID=8430>main\}
\par \strike TInstantObject.Assign\strike0\{linkID=8120>main\}
\par }
8450
Scribble8450
TInstantObject.ContainerByName
ContainerByName;ContainerByName,TInstantObject;TInstantObject,ContainerByName;



Imported
main

ContainerByName;ContainerByName_Method;TInstantObject_ContainerByName
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ContainerByName \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8460\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Finds a container attribute for the instance by the its name.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  ContainerByName(\b const\b0  ContainerName: \b string\b0 ): \strike TInstantContainer\strike0\{linkID=4300>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call ContainerByName to find a container attribute by its name. ContainerByName returns the TContainer object for the specified attribute name. It is only rarely necessary to use ContainerByName since attribute fields are declared for container attributes. If the container Attribute does not exist, ContainerByName raises an exception.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  An application should not access the attributes of objects directly. Instead the classes that hold the attributes should also introduce properties and methods through which the attributes can be manipulated. Using this approach, attributes and the logic accompanying them can be encapsulated in the classes to which they belong.
\par 
\par }
8460
Scribble8460





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.FindContainer\strike0\{linkID=8700>main\}
\par }
8470
Scribble8470
TInstantObject.Create
Create;Create,TInstantObject;TInstantObject,Create;



Imported
main

Create;Create_Method;TInstantObject_Create
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Create \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8480\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Constructor that creates a new instance.
\par \pard\sb25\sa25\tx1435\b\f1 constructor\b0  Create(AConnector: \strike TInstantConnector\strike0\{linkID=3770>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Create to construct a new instance of a \strike TInstantObject\strike0\{linkID=7390>main\} descendant. The AConnector argument can optionally be used to specify the connector associated with the instance. If AConnector is not assigned, the default connector is used for the newly created instance. If also no default \strike Connector\strike0\{linkID=7530>main\} is specified, an exception is raised.
\par 
\par }
8480
Scribble8480





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Clone\strike0\{linkID=8430>main\}
\par \strike TInstantObject.Retrieve\strike0\{linkID=8990>main\}
\par }
8490
Scribble8490
TInstantObject.CreateInstance
CreateInstance;CreateInstance,TInstantObject;TInstantObject,CreateInstance;



Imported
main

CreateInstance;CreateInstance_Method;TInstantObject_CreateInstance
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.CreateInstance \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Creates an instance for streaming purposes.
\par \pard\sb25\sa25\b\f1 class\b0  \b function\b0  CreateInstance(Arg: Pointer): \strike TInstantStreamable\strike0\{linkID=10830>main\}; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 CreateInstance is used by the streaming mechanism of InstantObjects to create instances of classes descending from \strike TInstantObject\strike0\{linkID=7390>main\}. If assigned, the Arg argument contains a reference to the connector to be used for the newly created instance.
\par 
\par }
8500
Scribble8500
TInstantObject.DeleteObject
DeleteObject;DeleteObject,TInstantObject;TInstantObject,DeleteObject;



Imported
main

DeleteObject;DeleteObject_Method;TInstantObject_DeleteObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.DeleteObject \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8510\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Deletes an object from the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  DeleteObject(\b Index\b0 : Integer);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 DeleteObject deletes the object at the position specified by the Index argument from the default container of the instance. If no default container is specified, DeleteObject raises an exception.
\par 
\par }
8510
Scribble8510





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DefaultContainer\strike0\{linkID=7540>main\}
\par \strike TInstantObject.RemoveObject\strike0\{linkID=8940>main\}
\par }
8520
Scribble8520
TInstantObject.Destruct
Destruct;Destruct,TInstantObject;TInstantObject,Destruct;



Imported
main

Destruct;Destruct_Method;TInstantObject_Destruct
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Destruct \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8530\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called automatically when the instance is destroyed for the ultimately last time.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Destruct; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Destruct is called automatically when the last reference to a non-persistent (either a newly created or disposed) instance is destroyed. Do not call it explicitly in your applications. The Destruct method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the final destruction of an object.
\par 
\par }
8530
Scribble8530





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Create\strike0\{linkID=8470>main\}
\par }
8540
Scribble8540
TInstantObject.DisableChanges
DisableChanges;DisableChanges,TInstantObject;TInstantObject,DisableChanges;



Imported
main

DisableChanges;DisableChanges_Method;TInstantObject_DisableChanges
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.DisableChanges \cf1\b0\fs16 
\par \pard\sb25\tx1435\tx2875\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8550\}\tab\strike Example 1\strike0\{linkID=8560>example\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Disables change notification and change of state for the instance.
\par \pard\sb25\sa25\tx1435\tx2875\b\f1 procedure\b0  DisableChanges;
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Disables change notification and change of state for the instance. Use DisableChanges to "isolate" the instance. The instance will neither recognize change notification nor notify about occurring changes. DisableChanges can be nested. Each call to DisableChanges should have a corresponding call to \strike EnableChanges\strike0\{linkID=8600>main\}.
\par 
\par }
8550
Scribble8550





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.EnableChanges\strike0\{linkID=8600>main\}
\par \strike TInstantObject.ChangesDisabled\strike0\{linkID=8350>main\}
\par }
8560
Scribble8560
TInstantObject.DisableChanges, Example 1




Imported
example


FALSE
23
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantObject.DisableChanges\strike0\{linkID=8540>main\}\{keepn\} 
\par \pard\keep\f1\fs18 Nested call to DisableChanges.
\par 
\par procedure DoNothing(Obj: \strike TInstantObject\strike0\{linkID=7390>main\});
\par begin
\par   Obj.DisableChanges;
\par   Obj.\strike EnableChanges\strike0\{linkID=8600>main\};
\par end;
\par 
\par procedure DoSomething(Obj: \strike TInstantObject\strike0\{linkID=7390>main\});
\par begin
\par   Obj.DisableChanges;
\par   try
\par     DoNothing(Obj);
\par   finally
\par     Obj.\strike EnableChanges\strike0\{linkID=8600>main\};
\par   end;
\par end;
\par 
\par }
8570
Scribble8570
TInstantObject.Dispose
Dispose;Dispose,TInstantObject;TInstantObject,Dispose;



Imported
main

Dispose;Dispose_Method;TInstantObject_Dispose
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 TInstantObject.Dispose \b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8580\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Disposes the instance from the database.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Dispose(ConflictAction: \strike TInstantConflictAction\strike0\{linkID=12180>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Dispose disposes the instance from the database. After the instance has been disposed it has the same state as a newly created instance. This means that a disposed object can be stored in the database again if required. Immediately before and after performing the disposal of the instance, Dispose calls the \strike BeforeDispose\strike0\{linkID=8240>main\} and \strike AfterDispose\strike0\{linkID=8020>main\} methods. If the instance is owned, Dispose removes the object from its owner, and the owner is requested to store itself in order to persist the removal. If the instance has not yet been stored Dispose does nothing. The ConflictAction argument specifies how the Dispose operation should respond to conflicts.
\par 
\par }
8580
Scribble8580





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Store\strike0\{linkID=9030>main\}
\par }
8590
Scribble8590
TInstantObject.DisposeOwnedObject
DisposeOwnedObject;DisposeOwnedObject,TInstantObject;TInstantObject,DisposeOwnedObject;



Imported
main

DisposeOwnedObject;DisposeOwnedObject_Method;TInstantObject_DisposeOwnedObject
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.DisposeOwnedObject \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Disposes an owned object persistently.
\par \pard\sb25\sa25\b\f1 procedure\b0  DisposeOwnedObject(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}; ConflictAction: \strike TInstantConflictAction\strike0\{linkID=12180>main\});
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Disposes an owned object by removing the object from the attribute in the owning instance that hold it and store the owning instance.
\par 
\par }
8600
Scribble8600
TInstantObject.EnableChanges
EnableChanges;EnableChanges,TInstantObject;TInstantObject,EnableChanges;



Imported
main

EnableChanges;EnableChanges_Method;TInstantObject_EnableChanges
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.EnableChanges \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8610\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Enables change notification and change of state for the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  EnableChanges;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call EnableChanges to enable change notification and change of state for the instance. If the current disabled level is not nested, the call to EnableChanges enables change notification and change of state. Otherwise EnableChanges only decrements the disabled nesting level.
\par 
\par }
8610
Scribble8610





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DisableChanges\strike0\{linkID=8540>main\}
\par \strike TInstantObject.ChangesDisabled\strike0\{linkID=8350>main\}
\par }
8620
Scribble8620
TInstantObject.EqualsPersistentSignature
EqualsPersistentSignature;EqualsPersistentSignature,TInstantObject;TInstantObject,EqualsPersistentSignature;



Imported
main

EqualsPersistentSignature;EqualsPersistentSignature_Method;TInstantObject_EqualsPersistentSignature
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.EqualsPersistentSignature \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8630\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Compares the persistent signature of the instance with another signature.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  EqualsPersistentSignature(\b const\b0  AObjectClassName: \b string\b0 ; \b const\b0  AObjectId: \b string\b0 ): Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call EqualsPersistentSignature to compare the persistent signature of the instance with the signature passed as the AObjectClassName and AObjectId arguments. Since the \strike Id\strike0\{linkID=7570>main\} of the instance may have changed, the persistent signature denotes the combination of the class name and the \strike PersistentId\strike0\{linkID=7770>main\} of the instance. If the instance is persistent and the values are equal, EqualsPersistentSignature returns True.
\par 
\par }
8630
Scribble8630





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.EqualsSignature\strike0\{linkID=8640>main\}
\par }
8640
Scribble8640
TInstantObject.EqualsSignature
EqualsSignature;EqualsSignature,TInstantObject;TInstantObject,EqualsSignature;



Imported
main

EqualsSignature;EqualsSignature_Method;TInstantObject_EqualsSignature
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.EqualsSignature \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8650\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Compares the signature of the instance with another signature.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  EqualsSignature(\b const\b0  AObjectClassName: \b string\b0 ; \b const\b0  AObjectId: \b string\b0 ): Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call EqualsSignature to compare the signature of the instance with the signature passed as the AObjectClassName and AObjectId arguments. The signature denotes the combination of the class name and \strike Id\strike0\{linkID=7570>main\} of the instance. If the values are equal, EqualsSignature returns True.
\par 
\par }
8650
Scribble8650





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.EqualsPersistentSignature\strike0\{linkID=8620>main\}
\par }
8660
Scribble8660
TInstantObject.Finalize
Finalize;Finalize,TInstantObject;TInstantObject,Finalize;



Imported
main

Finalize;Finalize_Method;TInstantObject_Finalize
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Finalize \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8670\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately before memory is deallocated for the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Finalize; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Finalize is called automatically immediately before memory is deallocated for the instance. Do not call it explicitly in your applications. The Finalize method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the deallocation of memory for an object.
\par 
\par }
8670
Scribble8670





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Initialize\strike0\{linkID=8780>main\}
\par }
8680
Scribble8680
TInstantObject.FindAttribute
FindAttribute;FindAttribute,TInstantObject;TInstantObject,FindAttribute;



Imported
main

FindAttribute;FindAttribute_Method;TInstantObject_FindAttribute
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.FindAttribute \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8690\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Searches for an attribute by the its name.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  FindAttribute(\b const\b0  AttributeName: \b string\b0 ): \strike TInstantAttribute\strike0\{linkID=2170>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call FindAttribute to search for an attribute by its name. FindAttribute returns the \strike TInstantAttribute\strike0\{linkID=2170>main\} object for the specified attribute name. It is only rarely necessary to call FindAttribute since fields for the attributes are present in the class declaration. If the Attribute does not exist, FindAttribute returns nil.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  An application should not access the attributes of objects directly. Instead the classes that hold the attributes should also introduce properties and methods through which the attributes can be manipulated. Using this approach, attributes and the logic accompanying them can be encapsulated in the classes to which they belong.
\par 
\par }
8690
Scribble8690





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AttributeByName\strike0\{linkID=8140>main\}
\par }
8700
Scribble8700
TInstantObject.FindContainer
FindContainer;FindContainer,TInstantObject;TInstantObject,FindContainer;



Imported
main

FindContainer;FindContainer_Method;TInstantObject_FindContainer
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.FindContainer \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8710\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Searches for a container by the its name.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  FindContainer(\b const\b0  ContainerName: \b string\b0 ): \strike TInstantContainer\strike0\{linkID=4300>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call FindContainer to search for a container by its name. FindContainer returns the \strike TInstantContainer\strike0\{linkID=4300>main\} object for the specified attribute name. It is only rarely necessary to call FindContainer since fields for the containers are present in the class declaration. If the container does not exist, FindContainer returns nil.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  An application should not access the attributes of objects directly. Instead the classes that hold the attributes should also introduce properties and methods through which the attributes can be manipulated. Using this approach, attributes and the logic accompanying them can be encapsulated in the classes to which they belong.
\par 
\par }
8710
Scribble8710





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.ContainerByName\strike0\{linkID=8450>main\}
\par }
8720
Scribble8720
TInstantObject.GenerateId
GenerateId;GenerateId,TInstantObject;TInstantObject,GenerateId;



Imported
main

GenerateId;GenerateId_Method;TInstantObject_GenerateId
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.GenerateId \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8730\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Generates an object id
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  GenerateId: \b string\b0 ; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 GenerateId is called automatically to generate an \strike Id\strike0\{linkID=7570>main\} for the instance. Normally it is not necessary to call this method explicitly. By default GenerateId calls \strike InstantGenerateId\strike0\{linkID=11520>main\}. Override this method to customize the \strike Id\strike0\{linkID=7570>main\} generation mechanism for a descendant class.
\par 
\par }
8730
Scribble8730





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantConnector.GenerateId\strike0\{linkID=4190>main\}
\par }
8740
Scribble8740
TInstantObject.HandleError
HandleError;HandleError,TInstantObject;TInstantObject,HandleError;



Imported
main

HandleError;HandleError_Method;TInstantObject_HandleError
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.HandleError \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8750\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called automatically when an error occurs to generate an \strike OnError\strike0\{linkID=9150>main\} event.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  HandleError(OperationType: \strike TInstantOperationType\strike0\{linkID=12490>main\}; E: Exception; \b var\b0  Action: \strike TInstantErrorAction\strike0\{linkID=12280>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 HandleError is called automatically to handle errors that occur when the instance is stored, disposed or refreshed. Do not call it explicitly in your applications. The HandleError method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform special error handling tasks. The OperationType argument specifies during which kind of operation the error occurred. The E argument contains the causing Exception object. Use the Action argument to specify what kind of action should be performed in response to the Error.
\par 
\par }
8750
Scribble8750





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.OnError\strike0\{linkID=9150>main\}
\par }
8760
Scribble8760
TInstantObject.IndexOfObject
IndexOfObject;IndexOfObject,TInstantObject;TInstantObject,IndexOfObject;



Imported
main

IndexOfObject;IndexOfObject_Method;TInstantObject_IndexOfObject
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IndexOfObject \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8770\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Returns the index of a specified object in the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  IndexOfObject(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}): Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call IndexOf to get the zero-based index for a specified object in the default container of the instance. If an object is not in the container, IndexOfObject returns -1.
\par If an object appears more than once, IndexOfObject returns the index of the first occurrence of the object. If no default container is specified, IndexOfObject raises an exception.
\par 
\par }
8770
Scribble8770





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DefaultContainer\strike0\{linkID=7540>main\}
\par }
8780
Scribble8780
TInstantObject.Initialize
Initialize;Initialize,TInstantObject;TInstantObject,Initialize;



Imported
main

Initialize;Initialize_Method;TInstantObject_Initialize
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Initialize \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8790\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after memory has been allocated for the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Initialize; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Initialize is called automatically immediately after memory has been allocated for the instance. Do not call it explicitly in your applications. The Initialize method implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to perform tasks in relation to the allocation of memory for an object. Initialize is the called when creating a new instance as well as when an existing instance is retrieved. Attribute objects have been created.
\par 
\par }
8790
Scribble8790





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Finalize\strike0\{linkID=8660>main\}
\par \strike TInstantObject.AfterCreate\strike0\{linkID=7980>main\}
\par \strike TInstantObject.AfterRetrieve\strike0\{linkID=8060>main\}
\par }
8800
Scribble8800
TInstantObject.InsertObject
InsertObject;InsertObject,TInstantObject;TInstantObject,InsertObject;



Imported
main

InsertObject;InsertObject_Method;TInstantObject_InsertObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.InsertObject \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8810\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Adds an object at a given position in the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InsertObject(\b Index\b0 : Integer; AObject: \strike TInstantObject\strike0\{linkID=7390>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Insert to add an object at a position specified by the zero-based Index argument. Insert adds the object at the specified position, shifting the object that previously occupied that position, and all subsequent objects, up. If no default container is specified, InsertObject raises an exception.
\par 
\par }
8810
Scribble8810





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AddObject\strike0\{linkID=7880>main\}
\par }
8820
Scribble8820
TInstantObject.IsOperationAllowed
IsOperationAllowed;IsOperationAllowed,TInstantObject;TInstantObject,IsOperationAllowed;



Imported
main

IsOperationAllowed;IsOperationAllowed_Method;TInstantObject_IsOperationAllowed
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.IsOperationAllowed \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8830\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Determines whether a specific operation is allowed or not.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  IsOperationAllowed(OperationType: \strike TInstantOperationType\strike0\{linkID=12490>main\}): Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use the IsOperationAllowed method to determine whether a specific operation is allowed for the instance. If the operation is allowed, the method returns True.
\par 
\par }
8830
Scribble8830





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.VerifyOperation\strike0\{linkID=9060>main\}
\par }
8840
Scribble8840
TInstantObject.Metadata
Metadata;Metadata,TInstantObject;TInstantObject,Metadata;



Imported
main

Metadata;Metadata_Method;TInstantObject_Metadata
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Metadata \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Contains a reference to the metadata object associated with the class.
\par \pard\sb25\sa25\b\f1 class\b0  \b function\b0  Metadata: TInstantClassMetadata; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Metadata returns the metadata object associated with the class. The metadata object contains the specification for the class and the metadata for the attributes the class introduces. If no Metadata is associated with the class, an exception is raised. Metadata is used internally by the classes of the InstantObjects framework, and should normally not be accessed from your applications.
\par 
\par }
8850
Scribble8850
TInstantObject.OwnedObjectChanged
OwnedObjectChanged;OwnedObjectChanged,TInstantObject;TInstantObject,OwnedObjectChanged;



Imported
main

OwnedObjectChanged;OwnedObjectChanged_Method;TInstantObject_OwnedObjectChanged
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OwnedObjectChanged \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8860\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Called automatically immediately after an owned object has changed.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  OwnedObjectChanged(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 OwnedObjectChanged is called automatically immediately after an owned object has changed. Do not call it explicitly in your applications. The OwnedObjectChanged method implemented by \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override OwnedObjectChanged when creating a class that needs to perform special tasks related to the change of owned objects.
\par 
\par }
8860
Scribble8860





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Changed\strike0\{linkID=8330>main\}
\par }
8870
Scribble8870
TInstantObject.OwnerChanged
OwnerChanged;OwnerChanged,TInstantObject;TInstantObject,OwnerChanged;



Imported
main

OwnerChanged;OwnerChanged_Method;TInstantObject_OwnerChanged
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OwnerChanged \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Called automatically immediately after the owner of the instance has changed.
\par \pard\sb25\sa25\b\f1 procedure\b0  OwnerChanged(OldOwner: \strike TInstantObject\strike0\{linkID=7390>main\}; OldOwnerAttribute: \strike TInstantComplex\strike0\{linkID=3190>main\}); \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 OwnerChanged is called automatically immediately after the owner of the instance has changed. Do not call it explicitly in your applications. The OwnerChanged method implemented by \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override OwnerChanged when creating a class that needs to perform special tasks related to the change of the owner. The OldOwner argument specifies the former owner of the instance and the OldOwnerAttribute argument specifies the former attribute to which the instance was associated.
\par 
\par }
8880
Scribble8880
TInstantObject.QueryInterface
QueryInterface;QueryInterface,TInstantObject;TInstantObject,QueryInterface;



Imported
main

QueryInterface;QueryInterface_Method;TInstantObject_QueryInterface
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.QueryInterface \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns a reference to a specified interface if that interface is supported by the instance.
\par \pard\sb25\sa25\b\f1 function\b0  QueryInterface(\b const\b0  IID: TGUID; \b out\b0  Obj): HResult; \b virtual\b0 ; \b stdcall\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 QueryInterface implements the IUnknown interface method, QueryInterface, defined by COM. For instances that support interfaces, QueryInterface returns a reference to the interface specified by the IID argument, as the Obj argument. If the instance does not support the interface, the Obj argument returns nil.
\par 
\par }
8890
Scribble8890
TInstantObject.Refresh
Refresh;Refresh,TInstantObject;TInstantObject,Refresh;



Imported
main

Refresh;Refresh_Method;TInstantObject_Refresh
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Refresh \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8900\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Refreshes the attributes of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Refresh;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Refresh to ensure that attributes of the instance has the latest values from the database. Immediately before and after performing the refresh of the instance, Refresh calls the \strike BeforeRefresh\strike0\{linkID=8260>main\} and \strike AfterRefresh\strike0\{linkID=8040>main\} methods. If the instance is longer in the database, Refresh raises an exception. If the instance is owned, the owner is requested to refresh itself.
\par 
\par }
8900
Scribble8900





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.RefreshAll\strike0\{linkID=8910>main\}
\par }
8910
Scribble8910
TInstantObject.RefreshAll
RefreshAll;RefreshAll,TInstantObject;TInstantObject,RefreshAll;



Imported
main

RefreshAll;RefreshAll_Method;TInstantObject_RefreshAll
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.RefreshAll \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Refreshes all instances associated with a connector object.
\par \pard\sb25\sa25\b\f1 class\b0  \b procedure\b0  RefreshAll(AConnector: \strike TInstantConnector\strike0\{linkID=3770>main\}; Progress: \strike TInstantProgressEvent\strike0\{linkID=12520>main\});
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call RefreshAll to refresh all instances of the class associated with a connector object. The \strike Connector\strike0\{linkID=7530>main\} argument can optionally be used to specify a \strike Connector\strike0\{linkID=7530>main\} object. If the connector is not specified, RefreshAll uses the default connector. Use the progress argument to attach a progress event in order to receive progress information during the refresh process.
\par 
\par }
8920
Scribble8920
TInstantObject.Release
Release;Release,TInstantObject;TInstantObject,Release;



Imported
main

Release;Release_Method;TInstantObject_Release
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Release \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8930\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Decrements the reference count for the number of references dependent on the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  Release: Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Release decrements the reference count and returns the resulting value of the reference count for the instance. It should not normally be necessary to call Release directly from your applications.
\par 
\par }
8930
Scribble8930





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AddRef\strike0\{linkID=7900>main\}
\par }
8940
Scribble8940
TInstantObject.RemoveObject
RemoveObject;RemoveObject,TInstantObject;TInstantObject,RemoveObject;



Imported
main

RemoveObject;RemoveObject_Method;TInstantObject_RemoveObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.RemoveObject \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8950\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Removes an object from the default container of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  RemoveObject(AObject: \strike TInstantObject\strike0\{linkID=7390>main\}): Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 RemoveObject removes an object from the default container of the instance. If no default container is specified, \strike DeleteObject\strike0\{linkID=8500>main\} raises an exception.
\par 
\par }
8950
Scribble8950





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.DefaultContainer\strike0\{linkID=7540>main\}
\par \strike TInstantObject.DeleteObject\strike0\{linkID=8500>main\}
\par }
8960
Scribble8960
TInstantObject.ResetAttributes
ResetAttributes;ResetAttributes,TInstantObject;TInstantObject,ResetAttributes;



Imported
main

ResetAttributes;ResetAttributes_Method;TInstantObject_ResetAttributes
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.ResetAttributes \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Resets the values of the attributes to their default values.
\par \pard\sb25\sa25\b\f1 procedure\b0  ResetAttributes;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use ResetAttribute\lang1033\f2 s\lang1040\f0  to reset the values of all attributes of the instance to their default values.
\par 
\par }
8970
Scribble8970
TInstantObject.RestoreState
RestoreState;RestoreState,TInstantObject;TInstantObject,RestoreState;



Imported
main

RestoreState;RestoreState_Method;TInstantObject_RestoreState
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.RestoreState \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=8980\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Restores the state of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  RestoreState; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 RestoreState restores the state of the instance. RestoreState is called automatically. Do not call it explicitly in your applications.
\par 
\par }
8980
Scribble8980





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.SaveState\strike0\{linkID=9010>main\}
\par \strike TInstantObject.ApplyState\strike0\{linkID=8100>main\}
\par }
8990
Scribble8990
TInstantObject.Retrieve
Retrieve;Retrieve,TInstantObject;TInstantObject,Retrieve;



Imported
main

Retrieve;Retrieve_Method;TInstantObject_Retrieve
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Retrieve \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=9000\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Constructor that retrieves an existing instance from the database.
\par \pard\sb25\sa25\tx1435\b\f1 constructor\b0  Retrieve(\b const\b0  AObjectId: \b string\b0 ; CreateIfMissing: Boolean; \strike Refresh\strike0\{linkID=8890>main\}: Boolean; AConnector: \strike TInstantConnector\strike0\{linkID=3770>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call Retrieve to retrieve an existing instance of a \strike TInstantObject\strike0\{linkID=7390>main\} descendant. Use the AObjectId argument to specify the \strike Id\strike0\{linkID=7570>main\} of the object that should be retrieved. If the object does not exist in the database, the CreateIfMissing argument can be set to True to enable creation of a new instance with the specified \strike Id\strike0\{linkID=7570>main\} instead. The \strike Refresh\strike0\{linkID=8890>main\} argument can be set to True to specify that if the object has already been retrieved from the database and resides in memory, it should be refreshed. The AConnector argument can optionally be used to specify the connector associated with the instance. If AConnector is not assigned, the default connector is used for the newly created instance. If also no default \strike Connector\strike0\{linkID=7530>main\} is specified, an exception is raised.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  Instances of \strike TInstantObject\strike0\{linkID=7390>main\} descendants exist only in one instance in memory. In order for the reference tracking mechanism to work correctly, no custom Retrieve constructors must be introduced in descendant classes.
\par 
\par }
9000
Scribble9000





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Create\strike0\{linkID=8470>main\}
\par \strike TInstantObject.Clone\strike0\{linkID=8430>main\}
\par }
9010
Scribble9010
TInstantObject.SaveState
SaveState;SaveState,TInstantObject;TInstantObject,SaveState;



Imported
main

SaveState;SaveState_Method;TInstantObject_SaveState
FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.SaveState \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=9020\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Saves the state of the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  SaveState; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 SaveState saves the state of the instance. The state of the instance denotes the values of:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab The \strike IsChanged\strike0\{linkID=7600>main\} property
\par \{bmct bm3.BMP\}\tab The \strike UpdateCount\strike0\{linkID=7810>main\} property
\par \{bmct bm3.BMP\}\tab The \strike PersistentId\strike0\{linkID=7770>main\} property
\par \pard\sb25\sa25\tx495 
\par SaveState is called automatically. Do not call it explicitly in your applications.
\par 
\par }
9020
Scribble9020





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.ApplyState\strike0\{linkID=8100>main\}
\par \strike TInstantObject.RestoreState\strike0\{linkID=8970>main\}
\par }
9030
Scribble9030
TInstantObject.Store
Store;Store,TInstantObject;TInstantObject,Store;



Imported
main

Store;Store_Method;TInstantObject_Store
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Store \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=9040\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Stores an object in the database
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  Store(ConflictAction: \strike TInstantConflictAction\strike0\{linkID=12180>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Store stores the instance in the database. If the instance has not yet been stored a new instance is added to the database. Otherwise the existing instance is updated. Immediately before and after performing the store of the instance, Store calls the \strike BeforeStore\strike0\{linkID=8290>main\} and \strike AfterStore\strike0\{linkID=8080>main\} methods. If the instance is owned, the owner is requested to Store itself. The ConflictAction argument specifies how the store operation should respond to conflicts.
\par 
\par }
9040
Scribble9040





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Dispose\strike0\{linkID=8570>main\}
\par }
9050
Scribble9050
TInstantObject.Unchanged
TInstantObject,Unchanged;Unchanged;Unchanged,TInstantObject;



Imported
main

TInstantObject_Unchanged;Unchanged;Unchanged_Method
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.Unchanged \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Marks the instance as unchanged.
\par \pard\sb25\sa25\b\f1 procedure\b0  Unchanged;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Unchanged marks the instance as unchanged by setting its \strike IsChanged\strike0\{linkID=7600>main\} property to False. It should normally not be necessary to call Unchanged directly since it is called automatically if an instance is no longer changed.
\par 
\par }
9060
Scribble9060
TInstantObject.VerifyOperation
TInstantObject,VerifyOperation;VerifyOperation;VerifyOperation,TInstantObject;



Imported
main

TInstantObject_VerifyOperation;VerifyOperation;VerifyOperation_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.VerifyOperation \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=9070\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Called automatically to verify that an operation may be carried out.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  VerifyOperation(OperationType: \strike TInstantOperationType\strike0\{linkID=12490>main\}): \strike TInstantVerificationResult\strike0\{linkID=12600>main\}; \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 VerifyOperation is called automatically to verify that a specific operation may be carried out. Do not call it explicitly in your applications. The VerifyOperation implemented in \strike TInstantObject\strike0\{linkID=7390>main\} does nothing. Override this method when creating a class that needs to verify operations before they are carried out. The method returns vrOk by default.
\par 
\par }
9070
Scribble9070





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.IsOperationAllowed\strike0\{linkID=8820>main\}
\par }
9080
Scribble9080
TInstantObject.OnAfterContentChange
OnAfterContentChange;OnAfterContentChange,TInstantObject;TInstantObject,OnAfterContentChange;



Imported
main

OnAfterContentChange;OnAfterContentChange_Event;TInstantObject_OnAfterContentChange
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OnAfterContentChange \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=9090\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Occurs after the content of a container has changed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnAfterContentChange: \strike TInstantContentChangeEvent\strike0\{linkID=12220>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnAfterContentChange event handler to take specific action after the content of a container of the instance has changed. The event does not occur if \strike DisableChanges\strike0\{linkID=8540>main\} has been called.
\par 
\par }
9090
Scribble9090





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterContentChange\strike0\{linkID=7960>main\}
\par }
9100
Scribble9100
TInstantObject.OnAttributeChanged
OnAttributeChanged;OnAttributeChanged,TInstantObject;TInstantObject,OnAttributeChanged;



Imported
main

OnAttributeChanged;OnAttributeChanged_Event;TInstantObject_OnAttributeChanged
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OnAttributeChanged \cf1\b0\fs16 
\par \strike TInstantObject\strike0\{linkID=7390>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Occurs when the value of an attribute has changed.
\par \pard\sb25\sa25\b\f1 property\b0  OnAttributeChanged: \strike TInstantAttributeChangeEvent\strike0\{linkID=12120>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Write an OnAttributeChanged event handler to take specific action immediately after an attribute of the instance has changed. The Sender argument contains a reference to the object which the changed attribute, specified by the Attribute argument, belongs to. The event does not occur if \strike DisableChanges\strike0\{linkID=8540>main\} has been called.
\par 
\par }
9110
Scribble9110
TInstantObject.OnBeforeContentChange
OnBeforeContentChange;OnBeforeContentChange,TInstantObject;TInstantObject,OnBeforeContentChange;



Imported
main

OnBeforeContentChange;OnBeforeContentChange_Event;TInstantObject_OnBeforeContentChange
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OnBeforeContentChange \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=9120\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs before the content of a container is changed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnBeforeContentChange: \strike TInstantContentChangeEvent\strike0\{linkID=12220>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnBeforeContentChange event handler to take specific action before the content of a container of the instance is changed. The event does not occur if \strike DisableChanges\strike0\{linkID=8540>main\} has been called.
\par 
\par }
9120
Scribble9120





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AfterContentChange\strike0\{linkID=7960>main\}
\par }
9130
Scribble9130
TInstantObject.OnChange
OnChange;OnChange,TInstantObject;TInstantObject,OnChange;



Imported
main

OnChange;OnChange_Event;TInstantObject_OnChange
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OnChange \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=9140\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Occurs when the instance is changed
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnChange: \strike TInstantNotifyEvent\strike0\{linkID=12470>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnChange event handler to take specific action immediately after the instance has changed. The Sender argument contains a reference to the changed instance. The event does not occur if \strike DisableChanges\strike0\{linkID=8540>main\} has been called.
\par 
\par }
9140
Scribble9140





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Changed\strike0\{linkID=8330>main\}
\par \strike TInstantObject.DisableChanges\strike0\{linkID=8540>main\}
\par }
9150
Scribble9150
TInstantObject.OnError
OnError;OnError,TInstantObject;TInstantObject,OnError;



Imported
main

OnError;OnError_Event;TInstantObject_OnError
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObject.OnError \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantObject\strike0\{linkID=7390>main\}\tab\ul See Also\ulnone\{linkID=9160\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Occurs when the instance encounters an error during a store, dispose or refresh operation.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnError: \strike TInstantErrorEvent\strike0\{linkID=12300>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnError event handler to respond to errors that arise when storing, disposing or refreshing an instance.
\par 
\par }
9160
Scribble9160





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.HandleError\strike0\{linkID=8740>main\}
\par }
9170
Scribble9170
TInstantOwnedCollection
TInstantOwnedCollection;


classessymbol:000380
Imported
main

TInstantOwnedCollection;TInstantOwnedCollection_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantOwnedCollection \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4260\ul Hierarchy\ulnone\{linkID=9180\}\tab\strike Members\strike0\{linkID=9230>nav\}\tab\strike Methods\strike0\{linkID=9220>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantOwnedCollection is a collection that has an owner.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantOwnedCollection = \b class\b0 (\strike TInstantCollection\strike0\{linkID=2970>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Use TInstantOwnedCollection to either create collection instances that has an owned, or descend from TInstantOwnedCollection to create collection classes that has an owner.
\par 
\par }
9180
Scribble9180





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TCollection
\par \pard\li95\tx355\tab |
\par \strike TInstantCollection\strike0\{linkID=2970>main\}
\par \tab |
\par \strike TInstantOwnedCollection\strike0\{linkID=9170>main\}
\par 
\par }
9190
Scribble9190





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantOwnedCollection Fields \cf1\b0\fs16 
\par \strike TInstantOwnedCollection\strike0\{linkID=9170>main\}\{keepn\} 
\par 
\par }
9200
Scribble9200





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantOwnedCollection Properties \cf1\b0\fs16 
\par \strike TInstantOwnedCollection\strike0\{linkID=9170>main\}\cf0\{keepn\}\cf1 
\par 
\par }
9210
Scribble9210





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantOwnedCollection Events \cf1\b0\fs16 
\par \strike TInstantOwnedCollection\strike0\{linkID=9170>main\}\cf0\{keepn\}\cf1 
\par 
\par }
9220
Scribble9220





Imported



FALSE
14
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantOwnedCollection Methods \cf1\b0\fs16 
\par \strike TInstantOwnedCollection\strike0\{linkID=9170>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantOwnedCollection
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Owner\strike0\{linkID=9240>main\}
\par \pard\sb55\sa55\b TInstantCollection
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Find\strike0\{linkID=3040>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetItemNames\strike0\{linkID=3050>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function IndexOf(const AName: string): Integer; overload;\strike0\{linkID=3060>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike function IndexOf(Item: TInstantCollectionItem): Integer; overload;\strike0\{linkID=3070>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=3080>main\}
\par 
\par }
9230
Scribble9230





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantOwnedCollection Members \cf1\b0\fs16 
\par \strike TInstantOwnedCollection\strike0\{linkID=9170>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Owner\strike0\{linkID=9240>main\}
\par 
\par }
9240
Scribble9240
TInstantOwnedCollection.Owner
Owner;Owner,TInstantOwnedCollection;TInstantOwnedCollection,Owner;



Imported
main

Owner;Owner_Method;TInstantOwnedCollection_Owner
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantOwnedCollection.Owner \cf1\b0\fs16 
\par \strike TInstantOwnedCollection\strike0\{linkID=9170>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Indicates the owner of the collection.
\par \pard\sb25\sa25\b\f1 function\b0  Owner: TPersistent;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Owner to determine the owner of the collection. Although no assumptions can be made, the owner is usually the object that is responsible for creating and destroying the collection.
\par 
\par }
9250
Scribble9250
TInstantPart
TInstantPart;


classessymbol:000390
Imported
main

TInstantPart;TInstantPart_Object
FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantPart \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5720\tx7100\ul Hierarchy\ulnone\{linkID=9280\}\tab\strike Members\strike0\{linkID=9350>nav\}\tab\strike Methods\strike0\{linkID=9330>nav\}\tab\ul See Also\ulnone\{linkID=9260\}\tab\strike Example 1\strike0\{linkID=9270>example\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 TInstantPart represents a part relationship to a single object.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\f1 TInstantPart = \b class\b0 (\strike TInstantElement\strike0\{linkID=6050>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantPart represents a part relationship to a single object. TInstantPart mainly implements functionality that has been introduced by its abstract ancestors. TInstantPart claims responsibility of an object that is set as its Value. This means that even though the reference to a particular object has been created independently of the part attribute, it is taken over and eventually destroyed by the part attribute if the object is set as the Value of the part attribute.
\par When attempting to get an unassigned Value of a part attribute, an instance of the class type specified by the RequiredClass property is created and returned by the part attribute. This implies that the Value of a part attribute is always assigned.
\par If the part attribute is owned, the owner of the part attribute will become the owner of the part object. When a part object is changed it notifies its owner.
\par Part Objects are retrieved from the database when their owning object is retrieved.
\par \pard\fi-195\li195\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b Note: \b0  Objects that serve as parts should be considered as integrated, replaceable entities of their owner. An object can participate in only one part relationship at the time. If the owner object is stored, disposed or refreshed, it is supposed cascade the store, dispose or refresh operation to its part objects.
\par 
\par }
9260
Scribble9260





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReference\strike0\{linkID=9520>main\}
\par }
9270
Scribble9270
TInstantPart, Example 1
TInstantPart,Example 1;



Imported
example


FALSE
22
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantPart\strike0\{linkID=9250>main\}\{keepn\} 
\par \pard\keep\f1\fs18 Setting the value of a part attribute. Note that the created Obj instance is
\par only destroyed if an error occurs when setting the value of the part
\par attribute. Otherwise the reference is taken over by the part attribute.
\par 
\par procedure CreatePartObject(AClass: TInstantObjectClass; Part: TInstantPart);
\par var
\par   Obj: \strike TInstantObject\strike0\{linkID=7390>main\};
\par begin
\par   Obj := AClass.Create;
\par   try
\par     Part.Value := Obj;
\par   except
\par     Obj.Free;
\par     raise;
\par   end;
\par end;
\par 
\par }
9280
Scribble9280





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3190>main\}
\par \tab |
\par \strike TInstantElement\strike0\{linkID=6050>main\}
\par \tab |
\par \strike TInstantPart\strike0\{linkID=9250>main\}
\par 
\par }
9290
Scribble9290





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantPart Fields \cf1\b0\fs16 
\par \strike TInstantPart\strike0\{linkID=9250>main\}\{keepn\} 
\par 
\par }
9300
Scribble9300





Imported



FALSE
32
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantPart Properties \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantPart\strike0\{linkID=9250>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=9310\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantElement
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=6150>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3300>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3340>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
9310
Scribble9310





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
9320
Scribble9320





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantPart Events \cf1\b0\fs16 
\par \strike TInstantPart\strike0\{linkID=9250>main\}\cf0\{keepn\}\cf1 
\par 
\par }
9330
Scribble9330





Imported



FALSE
32
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantPart Methods \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantPart\strike0\{linkID=9250>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=9340\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantPart
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=9370>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=9380>main\}
\par \pard\sb55\sa55\tx355\b TInstantElement
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=6160>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=6170>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=6180>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike LoadObjectFromStream\strike0\{linkID=6190>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike SaveObjectToStream\strike0\{linkID=6210>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3360>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3370>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3380>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
9340
Scribble9340





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
9350
Scribble9350





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantPart Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantPart\strike0\{linkID=9250>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=9360\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=9370>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=9380>main\}
\par 
\par }
9360
Scribble9360





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
9370
Scribble9370
TInstantPart.HasValue
HasValue;HasValue,TInstantPart;TInstantPart,HasValue;



Imported
main

HasValue;HasValue_Method;TInstantPart_HasValue
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantPart.HasValue \cf1\b0\fs16 
\par \strike TInstantPart\strike0\{linkID=9250>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines if the instance has been instantiated.
\par \pard\sb25\sa25\b\f1 function\b0  HasValue: Boolean; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasValue to determine if the instance associated with the element attribute has been instantiated. If the instance has been instantiated, HasValue returns True.
\par 
\par }
9380
Scribble9380
TInstantPart.Unchanged
TInstantPart,Unchanged;Unchanged;Unchanged,TInstantPart;



Imported
main

TInstantPart_Unchanged;Unchanged;Unchanged_Method
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantPart.Unchanged \cf1\b0\fs16 
\par \strike TInstantPart\strike0\{linkID=9250>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Marks the attribute as unchanged.
\par \pard\sb25\sa25\b\f1 procedure\b0  Unchanged; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Unchanged marks the attribute as unchanged by setting its IsChanged property to False. It should normally not be necessary to call Unchanged directly since it is called automatically if an attribute is no longer changed.
\par 
\par }
9390
Scribble9390
TInstantParts
TInstantParts;


classessymbol:000400
Imported
main

TInstantParts;TInstantParts_Object
FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantParts \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5720\tx7100\ul Hierarchy\ulnone\{linkID=9420\}\tab\strike Members\strike0\{linkID=9490>nav\}\tab\strike Methods\strike0\{linkID=9470>nav\}\tab\ul See Also\ulnone\{linkID=9400\}\tab\strike Example 1\strike0\{linkID=9410>example\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 TInstantParts represents a part relationship to multiple objects.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\f1 TInstantParts = \b class\b0 (\strike TInstantContainer\strike0\{linkID=4300>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantParts represents a part relationship to multiple object. TInstantParts mainly implements functionality that has been introduced by its abstract ancestors. TInstantParts claims responsibility of an object that is added to its array of objects. This means that even though the reference to a particular object has been created independently of the parts attribute, it is taken over and eventually destroyed by the parts attribute if the object is added to the parts attributes array of objects.
\par If the parts attribute is owned, the owner of the parts attribute will become the owner of the part object. When a part object is changed it notifies its owner.
\par Part Objects are retrieved from the database when their owning object is retrieved.
\par \pard\fi-195\li195\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b Note: \b0  Objects that serve as parts should be considered as integrated, replaceable entities of their owner. An object can participate in only one part relationship at the time. If the owner object is stored, disposed or refreshed, it is supposed cascade the store, dispose or refresh operation to its part objects.
\par 
\par }
9400
Scribble9400





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReferences\strike0\{linkID=9780>main\}
\par }
9410
Scribble9410
TInstantParts, Example 1
TInstantParts,Example 1;



Imported
example


FALSE
23
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantParts\strike0\{linkID=9390>main\}\{keepn\}
\par \pard\keep\f1\fs18 Adding an object to the parts attributes array of objects. Note that the
\par created Obj instance is only destroyed if an error occurs when adding it to
\par the parts attributes array of objects. Otherwise the reference is taken over
\par by the parts attribute.
\par 
\par procedure CreatePartsObject(AClass: TInstantObjectClass; Parts: TInstantParts);
\par var
\par   Obj: \strike TInstantObject\strike0\{linkID=7390>main\};
\par begin
\par   Obj := AClass.Create;
\par   try
\par     Parts.Add(Obj);
\par   except
\par     Obj.Free;
\par     raise;
\par   end;
\par end;
\par 
\par }
9420
Scribble9420





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3190>main\}
\par \tab |
\par \strike TInstantContainer\strike0\{linkID=4300>main\}
\par \tab |
\par \strike TInstantParts\strike0\{linkID=9390>main\}
\par 
\par }
9430
Scribble9430





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantParts Fields \cf1\b0\fs16 
\par \strike TInstantParts\strike0\{linkID=9390>main\}\{keepn\} 
\par 
\par }
9440
Scribble9440





Imported



FALSE
34
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantParts Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantParts\strike0\{linkID=9390>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=9450\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantContainer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ChangeCount\strike0\{linkID=4400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Count\strike0\{linkID=4410>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Items\strike0\{linkID=4430>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3300>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3340>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
9450
Scribble9450





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
9460
Scribble9460





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantParts Events \cf1\b0\fs16 
\par \strike TInstantParts\strike0\{linkID=9390>main\}\cf0\{keepn\}\cf1 
\par 
\par }
9470
Scribble9470





Imported



FALSE
40
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantParts Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantParts\strike0\{linkID=9390>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=9480\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantParts
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=9510>main\}
\par \pard\sb55\sa55\tx355\b TInstantContainer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Add\strike0\{linkID=4450>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=4470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=4480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Delete\strike0\{linkID=4490>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=4510>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Exchange\strike0\{linkID=4520>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasItem\strike0\{linkID=4540>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOf\strike0\{linkID=4550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Insert\strike0\{linkID=4560>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadObjectsFromStream\strike0\{linkID=4580>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Move\strike0\{linkID=4600>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=4620>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveObjectsToStream\strike0\{linkID=4640>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Sort\strike0\{linkID=4660>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3360>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3370>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3380>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
9480
Scribble9480





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
9490
Scribble9490





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantParts Members \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantParts\strike0\{linkID=9390>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=9500\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=9510>main\}
\par 
\par }
9500
Scribble9500





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
9510
Scribble9510
TInstantParts.Unchanged
TInstantParts,Unchanged;Unchanged;Unchanged,TInstantParts;



Imported
main

TInstantParts_Unchanged;Unchanged;Unchanged_Method
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantParts.Unchanged \cf1\b0\fs16 
\par \strike TInstantParts\strike0\{linkID=9390>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Marks the attribute as unchanged.
\par \pard\sb25\sa25\b\f1 procedure\b0  Unchanged; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Unchanged marks the attribute as unchanged by setting its IsChanged property to False. It should normally not be necessary to call Unchanged directly since it is called automatically if an attribute is no longer changed.
\par 
\par }
9520
Scribble9520
TInstantReference
TInstantReference;


classessymbol:000410
Imported
main

TInstantReference;TInstantReference_Object
FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5720\tx7100\tx8520\ul Hierarchy\ulnone\{linkID=9550\}\tab\strike Members\strike0\{linkID=9620>nav\}\tab\strike Properties\strike0\{linkID=9570>nav\}\tab\strike Methods\strike0\{linkID=9600>nav\}\tab\ul See Also\ulnone\{linkID=9530\}\tab\strike Example 1\strike0\{linkID=9540>example\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\tx7195\fs18 TInstantReference represents a reference relationship to a single object.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\f1 TInstantReference = \b class\b0 (\strike TInstantElement\strike0\{linkID=6050>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\b0 TInstantReference represents a reference relationship to a single object. Although TInstantReference introduces properties and methods that can be used to reference objects, it mainly implements functionality that has been introduced by its abstract ancestors.
\par TInstantReference takes its own reference to an object that is set as its Value. This means that an object that has been created independently of the reference attribute should also be destroyed independently of the reference attribute even though it has been set as its Value.
\par The Value of a reference attribute may be unassigned.
\par Reference relationships may be heterogeneous. This means that an object may reference objects that are stored in another database. The Connector property of TInstantReference is therefore writable. To enable this distributed behavior the Connector property should simply be assigned to a Connector object that connects to the right database.
\par Referenced objects are retrieved on demand. This means that the reference attribute will not retrieve the object it references until it is required. If a reference attribute references a non-existing object its Value property is nil.
\par \pard\fi-195\li195\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\b Note: \b0  Referenced Objects should be considered as loosely coupled entities of other objects. No ownership is claimed by the object that defines the reference relationship. This implies that an object can participate in as many reference relationships, as it is required. Referenced objects are neither stored, disposed nor refreshed by the objects they are referenced by. If an object is owned, it cannot participate in a reference relationship.
\par 
\par }
9530
Scribble9530





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantPart\strike0\{linkID=9250>main\}
\par }
9540
Scribble9540
TInstantReference, Example 1
TInstantReference,Example 1;



Imported
example


FALSE
21
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9520>main\}\{keepn\}
\par \pard\keep\f1\fs18 Setting the value of a reference attribute. Note that the created Obj
\par instance is always destroyed. The reference attribute takes its own reference
\par to the object.
\par 
\par procedure CreateReferenceObject(AClass: TInstantObjectClass; Ref: TInstantReference);
\par var
\par   Obj: \strike TInstantObject\strike0\{linkID=7390>main\};
\par begin
\par   Obj := AClass.Create;
\par   try
\par     Ref.Value := Obj;
\par   finally
\par     Obj.Free;
\par   end;
\par end;
\par 
\par }
9550
Scribble9550





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3190>main\}
\par \tab |
\par \strike TInstantElement\strike0\{linkID=6050>main\}
\par \tab |
\par \strike TInstantReference\strike0\{linkID=9520>main\}
\par 
\par }
9560
Scribble9560





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReference Fields \cf1\b0\fs16  
\par \strike TInstantReference\strike0\{linkID=9520>main\}\{keepn\}
\par 
\par }
9570
Scribble9570





Imported



FALSE
38
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReference Properties \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantReference\strike0\{linkID=9520>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=9580\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantReference
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm7.BMP\} \strike AllowOwned\strike0\{linkID=9640>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsBroken\strike0\{linkID=9650>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectClass\strike0\{linkID=9660>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectClassName\strike0\{linkID=9680>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectId\strike0\{linkID=9700>main\}
\par \pard\sb55\sa55\tx355\b TInstantElement
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=6150>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3300>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3340>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
9580
Scribble9580





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par \{bmct bm7.BMP\} write only
\par 
\par }
9590
Scribble9590





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantReference Events \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9520>main\}\cf0\{keepn\}\cf1 
\par 
\par }
9600
Scribble9600





Imported



FALSE
36
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReference Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantReference\strike0\{linkID=9520>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=9610\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantReference
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DestroyObject\strike0\{linkID=9720>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasReference\strike0\{linkID=9730>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=9740>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure ReferenceObject(AObjectClass: TInstantObjectClass; const AObjectId: string); overload;\strike0\{linkID=9750>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure ReferenceObject(const AObjectClassName: string; const AObjectId: string); overload;\strike0\{linkID=9760>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=9770>main\}
\par \pard\sb55\sa55\tx355\b TInstantElement
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=6160>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=6170>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=6180>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike LoadObjectFromStream\strike0\{linkID=6190>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike SaveObjectToStream\strike0\{linkID=6210>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3360>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3370>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3380>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
9610
Scribble9610





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
9620
Scribble9620





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReference Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantReference\strike0\{linkID=9520>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=9630\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm7.BMP\} \strike AllowOwned\strike0\{linkID=9640>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsBroken\strike0\{linkID=9650>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectClass\strike0\{linkID=9660>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectClassName\strike0\{linkID=9680>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectId\strike0\{linkID=9700>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DestroyObject\strike0\{linkID=9720>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasReference\strike0\{linkID=9730>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike HasValue\strike0\{linkID=9740>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure ReferenceObject(AObjectClass: TInstantObjectClass; const AObjectId: string); overload;\strike0\{linkID=9750>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure ReferenceObject(const AObjectClassName: string; const AObjectId: string); overload;\strike0\{linkID=9760>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=9770>main\}
\par 
\par }
9630
Scribble9630





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par \{bmct bm7.BMP\} write only
\par 
\par }
9640
Scribble9640
TInstantReference.AllowOwned
AllowOwned;AllowOwned,TInstantReference;TInstantReference,AllowOwned;



Imported
main

AllowOwned;AllowOwned_Property;TInstantReference_AllowOwned
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.AllowOwned \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9520>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies whether the attribute should allow owned objects.
\par \pard\sb25\sa25\b\f1 property\b0  AllowOwned;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use AllowOwned to specify if the attribute should allow owned objects. When adding an object that is owned, dependence is created to an object that is internally managed by another instance. The default value of AllowOwned is False.
\par 
\par }
9650
Scribble9650
TInstantReference.IsBroken
IsBroken;IsBroken,TInstantReference;TInstantReference,IsBroken;



Imported
main

IsBroken;IsBroken_Property;TInstantReference_IsBroken
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.IsBroken \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9520>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines if the referenced object exists.
\par \pard\sb25\sa25\b\f1 property\b0  IsBroken: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use IsBroken to determine if the referenced object exists. If the object doesn't exist, IsBroken returns True.
\par 
\par }
9660
Scribble9660
TInstantReference.ObjectClass
ObjectClass;ObjectClass,TInstantReference;TInstantReference,ObjectClass;



Imported
main

ObjectClass;ObjectClass_Property;TInstantReference_ObjectClass
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.ObjectClass \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantReference\strike0\{linkID=9520>main\}\tab\ul See Also\ulnone\{linkID=9670\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class type of the referenced object.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClass: TInstantObjectClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use ObjectClass to determine the class type of the referenced object.
\par 
\par }
9670
Scribble9670





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReference.ObjectClassName\strike0\{linkID=9680>main\}
\par \strike TInstantReference.ObjectId\strike0\{linkID=9700>main\}
\par }
9680
Scribble9680
TInstantReference.ObjectClassName
ObjectClassName;ObjectClassName,TInstantReference;TInstantReference,ObjectClassName;



Imported
main

ObjectClassName;ObjectClassName_Property;TInstantReference_ObjectClassName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.ObjectClassName \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantReference\strike0\{linkID=9520>main\}\tab\ul See Also\ulnone\{linkID=9690\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class name for the referenced object.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClassName: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use ObjectClassName to determine the class name for the referenced object.
\par 
\par }
9690
Scribble9690





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReference.ObjectClass\strike0\{linkID=9660>main\}
\par \strike TInstantReference.ObjectId\strike0\{linkID=9700>main\}
\par }
9700
Scribble9700
TInstantReference.ObjectId
ObjectId;ObjectId,TInstantReference;TInstantReference,ObjectId;



Imported
main

ObjectId;ObjectId_Property;TInstantReference_ObjectId
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.ObjectId \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantReference\strike0\{linkID=9520>main\}\tab\ul See Also\ulnone\{linkID=9710\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Specifies the Id of the referenced object.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectId: \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use ObjectId to determine the Id of the referenced object.
\par 
\par }
9710
Scribble9710





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReference.ObjectClass\strike0\{linkID=9660>main\}
\par \strike TInstantReference.ObjectClassName\strike0\{linkID=9680>main\}
\par }
9720
Scribble9720
TInstantReference.DestroyObject
DestroyObject;DestroyObject,TInstantReference;TInstantReference,DestroyObject;



Imported
main

DestroyObject;DestroyObject_Method;TInstantReference_DestroyObject
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.DestroyObject \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9520>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Destroys the instance.
\par \pard\sb25\sa25\b\f1 procedure\b0  DestroyObject;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call DestroyObject to destroy the instance associated with the reference attribute without clearing the reference.
\par 
\par }
9730
Scribble9730
TInstantReference.HasReference
HasReference;HasReference,TInstantReference;TInstantReference,HasReference;



Imported
main

HasReference;HasReference_Method;TInstantReference_HasReference
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.HasReference \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9520>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies whether the reference references an object
\par \pard\sb25\sa25\b\f1 function\b0  HasReference: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasReference to determine if the reference references an object. If HasReference is True, the reference references an object. Otherwise the reference doesn't reference an object
\par 
\par }
9740
Scribble9740
TInstantReference.HasValue
HasValue;HasValue,TInstantReference;TInstantReference,HasValue;



Imported
main

HasValue;HasValue_Method;TInstantReference_HasValue
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.HasValue \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9520>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines if the instance has been instantiated.
\par \pard\sb25\sa25\b\f1 function\b0  HasValue: Boolean; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use HasValue to determine if the instance associated with the element attribute has been instantiated. If the instance has been instantiated, HasValue returns True.
\par 
\par }
9750
Scribble9750
TInstantReference.ReferenceObject
ReferenceObject;ReferenceObject,TInstantReference;TInstantReference,ReferenceObject;



Imported
main

ReferenceObject;ReferenceObject_Method;TInstantReference_ReferenceObject
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.ReferenceObject \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9520>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Sets the reference of the attribute to point to another object.
\par \pard\sb25\sa25\b\f1 procedure\b0  \strike ReferenceObject\strike0\{linkID=9760>main\}(AObjectClass: TInstantObjectClass; \b const\b0  AObjectId: \b string\b0 ); \b overload\b0 ;
\par \b procedure\b0  \strike ReferenceObject\strike0\{linkID=9760>main\}(\b const\b0  AObjectClassName: \b string\b0 ; \b const\b0  AObjectId: \b string\b0 ); \b overload\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Reference object to make the attribute reference another object.
\par 
\par }
9760
Scribble9760
TInstantReference.ReferenceObject
ReferenceObject;ReferenceObject,TInstantReference;TInstantReference,ReferenceObject;



Imported
main

ReferenceObject;ReferenceObject_Method;TInstantReference_ReferenceObject
FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.ReferenceObject \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9520>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Sets the reference of the attribute to point to another object.
\par \pard\sb25\sa25\b\f1 procedure\b0  ReferenceObject(AObjectClass: TInstantObjectClass; \b const\b0  AObjectId: \b string\b0 ); \b overload\b0 ;
\par \b procedure\b0  ReferenceObject(\b const\b0  AObjectClassName: \b string\b0 ; \b const\b0  AObjectId: \b string\b0 ); \b overload\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Reference object to make the attribute reference another object.
\par 
\par }
9770
Scribble9770
TInstantReference.Reset
Reset;Reset,TInstantReference;TInstantReference,Reset;



Imported
main

Reset;Reset_Method;TInstantReference_Reset
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReference.Reset \cf1\b0\fs16 
\par \strike TInstantReference\strike0\{linkID=9520>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Resets the actual value of the attribute to the initialization value.
\par \pard\sb25\sa25\b\f1 procedure\b0  Reset; \b override\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Reset to reset the value of the attribute to its initialization value. Reset calls Initialize to do the initialization.
\par 
\par }
9780
Scribble9780
TInstantReferences
TInstantReferences;


classessymbol:000420
Imported
main

TInstantReferences;TInstantReferences_Object
FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReferences \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5720\tx7100\tx8520\ul Hierarchy\ulnone\{linkID=9810\}\tab\strike Members\strike0\{linkID=9880>nav\}\tab\strike Properties\strike0\{linkID=9830>nav\}\tab\strike Methods\strike0\{linkID=9860>nav\}\tab\ul See Also\ulnone\{linkID=9790\}\tab\strike Example 1\strike0\{linkID=9800>example\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\tx7195\fs18 TInstantReferences represents a reference relationship to multiple objects.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\f1 TInstantReferences = \b class\b0 (\strike TInstantContainer\strike0\{linkID=4300>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\b0 TInstantReferences represents a reference relationship to multiple objects. \strike TInstantReference\strike0\{linkID=9520>main\} mainly implements functionality that has been introduced by its abstract ancestors.
\par TInstantReferences takes its own reference to an object that is added to its array of objects. This means that an object that has been created independently of the references attribute should also be destroyed independently of the references attribute even though it has been added to its array of objects.
\par Reference relationships may be heterogeneous. This means that an object may reference objects that are stored in another database. The Connector property of TInstantReferences is therefore writable. To enable this distributed behavior the Connector property should simply be assigned to a Connector object that connects to the right database.
\par Referenced objects are retrieved on demand. This means that the references attribute will not retrieve the objects it references until they are required individually. If a references attribute references a non-existing object, the position the object occupies in the attributes array of objects will be nil.
\par \pard\fi-195\li195\sb25\sa25\tx1435\tx2875\tx4315\tx5755\tx7195\b Note: \b0  Referenced Objects should be considered as loosely coupled entities of other objects. No ownership is claimed by the object that defines the reference relationship. This implies that an object can participate in as many reference relationships, as it is required. Referenced objects are neither stored, disposed nor refreshed by the objects they are referenced by. If an object is owned, it cannot participate in a reference relationship.
\par 
\par }
9790
Scribble9790





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantParts\strike0\{linkID=9390>main\}
\par }
9800
Scribble9800
TInstantReferences, Example 1
TInstantReferences,Example 1;



Imported
example


FALSE
21
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike TInstantReferences\strike0\{linkID=9780>main\}\{keepn\} 
\par \pard\keep\f1\fs18 Adding an object to the references attributes array of objects. Note that the
\par created Obj instance is always destroyed. The references attribute takes its
\par own reference to the object.
\par 
\par procedure CreateReferencesObject(AClass: TInstantObjectClass; Ref: TInstantReferences);
\par var
\par   Obj: \strike TInstantObject\strike0\{linkID=7390>main\};
\par begin
\par   Obj := AClass.Create;
\par   try
\par     Ref.Add(Obj);
\par   finally
\par     Obj.Free;
\par   end;
\par end;
\par 
\par }
9810
Scribble9810





Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\cf1\lang1040\b\f0\fs18 Class Hierarchy
\par 
\par \pard\li95\b0 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantComplex\strike0\{linkID=3190>main\}
\par \tab |
\par \strike TInstantContainer\strike0\{linkID=4300>main\}
\par \tab |
\par \strike TInstantReferences\strike0\{linkID=9780>main\}
\par 
\par }
9820
Scribble9820





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReferences Fields \cf1\b0\fs16 
\par \strike TInstantReferences\strike0\{linkID=9780>main\}\{keepn\} 
\par 
\par }
9830
Scribble9830





Imported



FALSE
36
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReferences Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantReferences\strike0\{linkID=9780>main\}\tab\lang1033\f1\tab\cf2\lang1040\ul\f0 Legend\cf3\ulnone\{linkID=9840\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantReferences
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm7.BMP\} \strike AllowOwned\strike0\{linkID=9900>main\}
\par \pard\sb55\sa55\tx355\b TInstantContainer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ChangeCount\strike0\{linkID=4400>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Count\strike0\{linkID=4410>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Items\strike0\{linkID=4430>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike AllowOwned\strike0\{linkID=3300>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Connector\strike0\{linkID=3310>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClass\strike0\{linkID=3320>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike RequiredClassName\strike0\{linkID=3340>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
9840
Scribble9840





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par \{bmct bm7.BMP\} write only
\par 
\par }
9850
Scribble9850





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantReferences Events \cf1\b0\fs16 
\par \strike TInstantReferences\strike0\{linkID=9780>main\}\cf0\{keepn\}\cf1 
\par 
\par }
9860
Scribble9860





Imported



FALSE
42
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReferences Methods \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantReferences\strike0\{linkID=9780>main\}\tab\lang1033\f1\tab\cf2\lang1040\ul\f0 Legend\cf3\ulnone\{linkID=9870\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantReferences
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DestroyObject\strike0\{linkID=9910>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadReferencesFromStream\strike0\{linkID=9920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveReferencesToStream\strike0\{linkID=9940>main\}
\par \pard\sb55\sa55\tx355\b TInstantContainer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Add\strike0\{linkID=4450>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=4470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=4480>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Delete\strike0\{linkID=4490>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=4510>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Exchange\strike0\{linkID=4520>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike HasItem\strike0\{linkID=4540>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOf\strike0\{linkID=4550>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Insert\strike0\{linkID=4560>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadObjectsFromStream\strike0\{linkID=4580>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Move\strike0\{linkID=4600>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remove\strike0\{linkID=4620>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveObjectsToStream\strike0\{linkID=4640>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Sort\strike0\{linkID=4660>main\}
\par \pard\sb55\sa55\tx355\b TInstantComplex
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike AttachObject\strike0\{linkID=3360>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike DetachObject\strike0\{linkID=3370>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ValidateObject\strike0\{linkID=3380>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
9870
Scribble9870





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
9880
Scribble9880





Imported



FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantReferences Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantReferences\strike0\{linkID=9780>main\}\tab\lang1033\f1\tab\cf2\lang1040\ul\f0 Legend\cf3\ulnone\{linkID=9890\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm7.BMP\} \strike AllowOwned\strike0\{linkID=9900>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DestroyObject\strike0\{linkID=9910>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadReferencesFromStream\strike0\{linkID=9920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveReferencesToStream\strike0\{linkID=9940>main\}
\par 
\par }
9890
Scribble9890





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par \{bmct bm7.BMP\} write only
\par 
\par }
9900
Scribble9900
TInstantReferences.AllowOwned
AllowOwned;AllowOwned,TInstantReferences;TInstantReferences,AllowOwned;



Imported
main

AllowOwned;AllowOwned_Property;TInstantReferences_AllowOwned
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReferences.AllowOwned \cf1\b0\fs16 
\par \strike TInstantReferences\strike0\{linkID=9780>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies whether the attribute should allow owned objects.
\par \pard\sb25\sa25\b\f1 property\b0  AllowOwned;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use AllowOwned to specify if the attribute should allow owned objects. When adding an object that is owned, dependence is created to an object that is internally managed by another instance. The default value of AllowOwned is False.
\par 
\par }
9910
Scribble9910
TInstantReferences.DestroyObject
DestroyObject;DestroyObject,TInstantReferences;TInstantReferences,DestroyObject;



Imported
main

DestroyObject;DestroyObject_Method;TInstantReferences_DestroyObject
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReferences.DestroyObject \cf1\b0\fs16 
\par \strike TInstantReferences\strike0\{linkID=9780>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Destroys an instance in the items array.
\par \pard\sb25\sa25\b\f1 procedure\b0  DestroyObject(\b Index\b0 : Integer);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call DestroyObject to destroy the instance at the position specified by the Index argument in the Items array without clearing the reference.
\par 
\par }
9920
Scribble9920
TInstantReferences.LoadReferencesFromStream
LoadReferencesFromStream;LoadReferencesFromStream,TInstantReferences;TInstantReferences,LoadReferencesFromStream;



Imported
main

LoadReferencesFromStream;LoadReferencesFromStream_Method;TInstantReferences_LoadReferencesFromStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReferences.LoadReferencesFromStream \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantReferences\strike0\{linkID=9780>main\}\tab\ul See Also\ulnone\{linkID=9930\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Loads object references from a stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  LoadReferencesFromStream(AStream: TStream);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call LoadReferencesFromStream to load the object references that the instance should contain from a stream.
\par 
\par }
9930
Scribble9930





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReferences.SaveReferencesToStream\strike0\{linkID=9940>main\}
\par }
9940
Scribble9940
TInstantReferences.SaveReferencesToStream
SaveReferencesToStream;SaveReferencesToStream,TInstantReferences;TInstantReferences,SaveReferencesToStream;



Imported
main

SaveReferencesToStream;SaveReferencesToStream_Method;TInstantReferences_SaveReferencesToStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantReferences.SaveReferencesToStream \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantReferences\strike0\{linkID=9780>main\}\tab\ul See Also\ulnone\{linkID=9950\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Saves object references to a stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  SaveReferencesToStream(AStream: TStream);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call SaveReferencesToStream to save the object references that the instance contains to a stream.
\par 
\par }
9950
Scribble9950





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantReferences.LoadReferencesFromStream\strike0\{linkID=9920>main\}
\par }
9960
Scribble9960
TInstantRelationalConnector
TInstantRelationalConnector;


classessymbol:000430
Imported
main

TInstantRelationalConnector;TInstantRelationalConnector_Object
FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantRelationalConnector \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4280\tx5700\ul Hierarchy\ulnone\{linkID=9970\}\tab\strike Members\strike0\{linkID=10040>nav\}\tab\strike Properties\strike0\{linkID=9990>nav\}\tab\strike Events\strike0\{linkID=10010>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 Provides access to a database.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\strike\f1 TInstantConnectorClass\strike0\{linkID=12210>main\} = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \strike TInstantConnector\strike0\{linkID=3770>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
9970
Scribble9970





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TComponent
\par \pard\li95\tx355\tab |
\par \strike TInstantConnector\strike0\{linkID=3770>main\}
\par \tab |
\par \strike TInstantRelationalConnector\strike0\{linkID=9960>main\}
\par 
\par }
9980
Scribble9980





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantRelationalConnector Fields \cf1\b0\fs16 
\par \strike TInstantRelationalConnector\strike0\{linkID=9960>main\}\{keepn\} 
\par 
\par }
9990
Scribble9990





Imported



FALSE
24
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantRelationalConnector Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantRelationalConnector\strike0\{linkID=9960>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=10000\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=10060>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterConnect\strike0\{linkID=3870>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AfterDisconnect\strike0\{linkID=3890>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeConnect\strike0\{linkID=3910>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeDisconnect\strike0\{linkID=3930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Broker\strike0\{linkID=3950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ClientCount\strike0\{linkID=3960>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Clients\strike0\{linkID=3980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connected\strike0\{linkID=4000>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DatabaseName\strike0\{linkID=4010>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InTransaction\strike0\{linkID=4020>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike InUse\strike0\{linkID=4030>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike IsDefault\strike0\{linkID=4040>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=4050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=4060>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike UseTransactions\strike0\{linkID=4080>main\}
\par 
\par }
10000
Scribble10000





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
10010
Scribble10010





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantRelationalConnector Events \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantRelationalConnector\strike0\{linkID=9960>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=10020\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantRelationalConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=10070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=10090>main\}
\par \pard\sb55\sa55\tx355\b TInstantConnector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike BeforeBuildDatabase\strike0\{linkID=4290>main\}
\par 
\par }
10020
Scribble10020





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
10030
Scribble10030





Imported



FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantRelationalConnector Methods \cf1\b0\fs16 
\par \strike TInstantRelationalConnector\strike0\{linkID=9960>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantConnector
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(Model: TInstantModel); overload;\strike0\{linkID=4090>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike procedure BuildDatabase(AClasses: array of TInstantObjectClass); overload;\strike0\{linkID=4100>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CommitTransaction\strike0\{linkID=4110>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Connect\strike0\{linkID=4130>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateQuery\strike0\{linkID=4150>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Disconnect\strike0\{linkID=4160>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnsureObjectStore\strike0\{linkID=4180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GenerateId\strike0\{linkID=4190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RegisterClient\strike0\{linkID=4210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RollbackTransaction\strike0\{linkID=4230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike StartTransaction\strike0\{linkID=4250>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike UnregisterClient\strike0\{linkID=4270>main\}
\par 
\par }
10040
Scribble10040





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantRelationalConnector Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantRelationalConnector\strike0\{linkID=9960>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=10050\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DBMSName\strike0\{linkID=10060>main\}
\par \pard\sb55\sa55\tx355\b Events
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnGetDataSet\strike0\{linkID=10070>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitDataSet\strike0\{linkID=10090>main\}
\par 
\par }
10050
Scribble10050





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
10060
Scribble10060
TInstantRelationalConnector.DBMSName
DBMSName;DBMSName,TInstantRelationalConnector;TInstantRelationalConnector,DBMSName;



Imported
main

DBMSName;DBMSName_Property;TInstantRelationalConnector_DBMSName
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantRelationalConnector.DBMSName \cf1\b0\fs16 
\par \strike TInstantRelationalConnector\strike0\{linkID=9960>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines the name of the DBMS the connector component connects to.
\par \pard\sb25\sa25\b\f1 property\b0  DBMSName: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use DBMSName to determine the name of the DBMS (Database management system) the connector component connects to.
\par 
\par }
10070
Scribble10070
TInstantRelationalConnector.OnGetDataSet
OnGetDataSet;OnGetDataSet,TInstantRelationalConnector;TInstantRelationalConnector,OnGetDataSet;



Imported
main

OnGetDataSet;OnGetDataSet_Event;TInstantRelationalConnector_OnGetDataSet
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantRelationalConnector.OnGetDataSet \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantRelationalConnector\strike0\{linkID=9960>main\}\tab\ul See Also\ulnone\{linkID=10080\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Occurs when the persistence mechanism request a dataset.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnGetDataSet: \strike TInstantGetDataSetEvent\strike0\{linkID=12410>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an OnGetDataSet event handler to supply dataset components to the persistence mechanism associated with the connector component.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  This event occurs only for persistence mechanisms that accesses the database through instances of TDataSet descendants.
\par 
\par }
10080
Scribble10080





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantRelationalConnector.OnInitDataSet\strike0\{linkID=10090>main\}
\par }
10090
Scribble10090
TInstantRelationalConnector.OnInitDataSet
OnInitDataSet;OnInitDataSet,TInstantRelationalConnector;TInstantRelationalConnector,OnInitDataSet;



Imported
main

OnInitDataSet;OnInitDataSet_Event;TInstantRelationalConnector_OnInitDataSet
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantRelationalConnector.OnInitDataSet \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantRelationalConnector\strike0\{linkID=9960>main\}\tab\ul See Also\ulnone\{linkID=10100\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Occurs when the persistence mechanism initializes a dataset.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  OnInitDataSet: \strike TInstantInitDataSetEvent\strike0\{linkID=12440>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Write an \strike OnGetDataSet\strike0\{linkID=10070>main\} event handler to initialize dataset components used by the persistence mechanism associated with the connector component.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  This event occurs only for persistence mechanisms that accesses the database through instances of TDataSet descendants.
\par 
\par }
10100
Scribble10100





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantRelationalConnector.OnGetDataSet\strike0\{linkID=10070>main\}
\par }
10110
Scribble10110
TInstantResourceStream
TInstantResourceStream;


classessymbol:000440
Imported
main

TInstantResourceStream;TInstantResourceStream_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantResourceStream \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4260\ul Hierarchy\ulnone\{linkID=10120\}\tab\strike Members\strike0\{linkID=10170>nav\}\tab\strike Methods\strike0\{linkID=10160>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantResourceStream provides access to a compiled resource in the application.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantResourceStream = \b class\b0 (\strike TInstantStream\strike0\{linkID=10540>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Use TInstantResourceStream to access a resource of a Windows application. Like all \strike TInstantStream\strike0\{linkID=10540>main\} objects, TInstantResourceStream uses a source stream that handles the streaming. The Source stream of TInstantResourceStream is a TResourceStream object.
\par 
\par }
10120
Scribble10120





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TStream
\par \pard\li95\tx355\tab |
\par \strike TInstantStream\strike0\{linkID=10540>main\}
\par \tab |
\par \strike TInstantResourceStream\strike0\{linkID=10110>main\}
\par 
\par }
10130
Scribble10130





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantResourceStream Fields \cf1\b0\fs16  
\par \strike TInstantResourceStream\strike0\{linkID=10110>main\}\{keepn\}
\par 
\par }
10140
Scribble10140





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantResourceStream Properties \cf1\b0\fs16 
\par \cf2\strike TInstantResourceStream\cf3\strike0\{linkID=10110>main\}\cf1\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FreeSource\strike0\{linkID=10610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Source\strike0\{linkID=10620>main\}
\par 
\par }
10150
Scribble10150





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantResourceStream Events \cf1\b0\fs16 
\par \cf2\strike TInstantResourceStream\cf3\strike0\{linkID=10110>main\}\cf1\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnProcessObject\strike0\{linkID=10820>main\}
\par 
\par }
10160
Scribble10160





Imported



FALSE
20
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantResourceStream Methods \cf1\b0\fs16 
\par \cf2\strike TInstantResourceStream\cf3\strike0\{linkID=10110>main\}\cf1\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantResourceStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateFromId\strike0\{linkID=10190>main\}
\par \pard\sb55\sa55\b TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AlignStream\strike0\{linkID=10640>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10650>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObject\strike0\{linkID=10660>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObjectRes\strike0\{linkID=10680>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResHeader\strike0\{linkID=10700>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResourceFileHeader\strike0\{linkID=10720>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObject\strike0\{linkID=10740>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObjectRes\strike0\{linkID=10760>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceFileHeader\strike0\{linkID=10780>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceHeader\strike0\{linkID=10800>main\}
\par 
\par }
10170
Scribble10170





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantResourceStream Members \cf1\b0\fs16 
\par \cf2\strike TInstantResourceStream\cf3\strike0\{linkID=10110>main\}\cf1\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike CreateFromId\strike0\{linkID=10190>main\}
\par 
\par }
10180
Scribble10180
TInstantResourceStream.Create
Create;Create,TInstantResourceStream;TInstantResourceStream,Create;



Imported
main

Create;Create_Method;TInstantResourceStream_Create
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantResourceStream.Create \cf1\b0\fs16 
\par \cf2\strike TInstantResourceStream\cf3\strike0\{linkID=10110>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\fs18 Creates an instance of \strike TInstantResourceStream\strike0\{linkID=10110>main\} associated with a particular resource.
\par \pard\sb25\sa25\b\f1 constructor\b0  Create(Instance: THandle; \b const\b0  ResName: \b string\b0 ; ResType: PChar);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Create to instantiate a \strike TInstantResourceStream\strike0\{linkID=10110>main\}. The Instance argument specifies the handle associated with the executable or DLL. The Resname argument specifies the name of the resource. The ResType argument specifies the type of the resource. Windows provides a number of predefined resource types. Please refer to the Windows SDK online help for further information.
\par 
\par }
10190
Scribble10190
TInstantResourceStream.CreateFromId
CreateFromId;CreateFromId,TInstantResourceStream;TInstantResourceStream,CreateFromId;



Imported
main

CreateFromId;CreateFromId_Method;TInstantResourceStream_CreateFromId
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantResourceStream.CreateFromId \cf1\b0\fs16 
\par \cf2\strike TInstantResourceStream\cf3\strike0\{linkID=10110>main\}\cf1\{keepn\}
\par \pard\sb25\sa85\fs18 Creates an instance of \strike TInstantResourceStream\strike0\{linkID=10110>main\} associated with a particular resource.
\par \pard\sb25\sa25\b\f1 constructor\b0  CreateFromId(Instance: THandle; ResID: Integer; ResType: PChar);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call \strike Create\strike0\{linkID=10180>main\} to instantiate a \strike TInstantResourceStream\strike0\{linkID=10110>main\}. The Instance argument specifies the handle associated with the executable or DLL. The ResId argument specifies the Id of the resource. The ResType argument specifies the type of the resource. Windows provides a number of predefined resource types. Please refer to the Windows SDK online help for further information.
\par 
\par }
10200
Scribble10200
TInstantSelector
TInstantSelector;


classessymbol:000450
Imported
main

TInstantSelector;TInstantSelector_Object
FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5700\ul Hierarchy\ulnone\{linkID=10220\}\tab\strike Members\strike0\{linkID=10300>nav\}\tab\strike Properties\strike0\{linkID=10240>nav\}\tab\ul See Also\ulnone\{linkID=10210\}\tab\strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 TInstantSelector provides dataset-based access to a selection of objects.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantSelector = \b class\b0 (\strike TInstantCustomExposer\strike0\{linkID=4790>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 TInstantSelector exposes a selection of objects. The objects are selected by the means of a \strike Command\strike0\{linkID=10330>main\} statement. The selector is independent of the kind of database from which the selection is to be made. The syntax of the \strike Command\strike0\{linkID=10330>main\} statement is therefore also database independent. When performing the selection, the \strike Command\strike0\{linkID=10330>main\} statement is parsed and translated to a statement that is understandable by the database to which the selector is connected through its \strike Connector\strike0\{linkID=10340>main\} property.
\par The selection of objects may be modified by adding or removing objects to and from the selector components array of objects.
\par 
\par }
10210
Scribble10210





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantExposer\strike0\{linkID=6450>main\}
\par }
10220
Scribble10220





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TDataSet
\par \pard\li95\tx355\tab |
\par \strike TInstantCustomExposer\strike0\{linkID=4790>main\}
\par \tab |
\par \strike TInstantSelector\strike0\{linkID=10200>main\}
\par 
\par }
10230
Scribble10230





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSelector Fields \cf1\b0\fs16  
\par \strike TInstantSelector\strike0\{linkID=10200>main\}\{keepn\}
\par 
\par }
10240
Scribble10240





Imported



FALSE
34
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSelector Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantSelector\strike0\{linkID=10200>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=10250\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 TInstantSelector
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AutoOpen\strike0\{linkID=10320>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Command\strike0\{linkID=10330>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connector\strike0\{linkID=10340>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike MaxCount\strike0\{linkID=10350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ObjectClass\strike0\{linkID=10360>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ObjectClassName\strike0\{linkID=10380>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ParamCheck\strike0\{linkID=10400>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Params\strike0\{linkID=10410>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Query\strike0\{linkID=10420>main\}
\par \pard\sb55\sa55\tx355\b TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Accessor\strike0\{linkID=4900>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ContainerName\strike0\{linkID=4910>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike CurrentObject\strike0\{linkID=4920>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike FieldOptions\strike0\{linkID=4930>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike HasSubject\strike0\{linkID=4950>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsChanged\strike0\{linkID=4980>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Limited\strike0\{linkID=5000>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Mode\strike0\{linkID=5020>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClass\strike0\{linkID=5030>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike ObjectClassName\strike0\{linkID=5050>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike ObjectCount\strike0\{linkID=5070>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Objects\strike0\{linkID=5090>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Options\strike0\{linkID=5110>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ReadOnly\strike0\{linkID=5120>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Sorted\strike0\{linkID=5130>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Subject\strike0\{linkID=5150>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike TotalCount\strike0\{linkID=5160>main\}
\par 
\par }
10250
Scribble10250





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
10260
Scribble10260





Imported



FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSelector Events \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantSelector\strike0\{linkID=10200>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=10270\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCompare\strike0\{linkID=5520>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnCreateObject\strike0\{linkID=5540>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnFieldError\strike0\{linkID=5550>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnIncludeField\strike0\{linkID=5570>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitField\strike0\{linkID=5600>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnInitFieldDef\strike0\{linkID=5620>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike OnLimit\strike0\{linkID=5640>main\}
\par 
\par }
10270
Scribble10270





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par 
\par }
10280
Scribble10280





Imported



FALSE
33
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSelector Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantSelector\strike0\{linkID=10200>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=10290\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantCustomExposer
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AddObject\strike0\{linkID=5180>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ApplyChanges\strike0\{linkID=5190>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AssignFieldValue\strike0\{linkID=5200>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ChangesDisabled\strike0\{linkID=5210>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Clear\strike0\{linkID=5230>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DeleteObject\strike0\{linkID=5240>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike DisableChanges\strike0\{linkID=5260>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike EnableChanges\strike0\{linkID=5280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GetFieldStrings\strike0\{linkID=5300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike GotoObject\strike0\{linkID=5310>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike HandleFieldError\strike0\{linkID=5320>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike IncludeField\strike0\{linkID=5330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IndexOfObject\strike0\{linkID=5340>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitField\strike0\{linkID=5350>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike InitFieldDef\strike0\{linkID=5360>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike InsertObject\strike0\{linkID=5370>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFields\strike0\{linkID=5380>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike PostChanges\strike0\{linkID=5390>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshCurrentObject\strike0\{linkID=5400>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RefreshData\strike0\{linkID=5410>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReleaseObject\strike0\{linkID=5420>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Remember\strike0\{linkID=5430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike RemoveObject\strike0\{linkID=5450>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Reset\strike0\{linkID=5470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Revert\strike0\{linkID=5480>main\}
\par \{bmct bm0.BMP\}\{bmct bm5.BMP\} \strike Undo\strike0\{linkID=5500>main\}
\par 
\par }
10290
Scribble10290





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
10300
Scribble10300





Imported



FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSelector Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantSelector\strike0\{linkID=10200>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=10310\}\cf1\{keepn\}
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike AutoOpen\strike0\{linkID=10320>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Command\strike0\{linkID=10330>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Connector\strike0\{linkID=10340>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike MaxCount\strike0\{linkID=10350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ObjectClass\strike0\{linkID=10360>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ObjectClassName\strike0\{linkID=10380>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike ParamCheck\strike0\{linkID=10400>main\}
\par \{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Params\strike0\{linkID=10410>main\}
\par \{bmct bm5.BMP\}\{bmct bm1.BMP\} \strike Query\strike0\{linkID=10420>main\}
\par 
\par }
10310
Scribble10310





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
10320
Scribble10320
TInstantSelector.AutoOpen
AutoOpen;AutoOpen,TInstantSelector;TInstantSelector,AutoOpen;



Imported
main

AutoOpen;AutoOpen_Property;TInstantSelector_AutoOpen
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.AutoOpen \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{linkID=10200>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies if the selector should be automatically opened.
\par \pard\sb25\sa25\b\f1 property\b0  AutoOpen: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Specifies if the selector should be automatically opened after it has been loaded.
\par 
\par }
10330
Scribble10330
TInstantSelector.Command
Command;Command,TInstantSelector;TInstantSelector,Command;



Imported
main

Command;Command_Property;TInstantSelector_Command
FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.Command \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{linkID=10200>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies command to be executed.
\par \pard\sb25\sa25\b\f1 property\b0  Command: TStringList;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Command to specify the command to execute. Command is a textual representation of a command that results in an extend of objects when executed.
\par The Command has the following syntax:
\par \pard\keep\f1 
\par   SELECT [DISTINCT] * | ObjectPath
\par   FROM [ANY] ClassRef
\par   [WHERE Clause]
\par   [ORDER BY Order]
\par \pard\sb25\sa25\f0 
\par 
\par }
10340
Scribble10340
TInstantSelector.Connector
Connector;Connector,TInstantSelector;TInstantSelector,Connector;



Imported
main

Connector;Connector_Property;TInstantSelector_Connector
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.Connector \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{linkID=10200>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies the used connector component.
\par \pard\sb25\sa25\b\f1 property\b0  Connector: \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Connector specifies the used connector component. The connector serves as the conduit between the selector component and the database from which the selection is to be performed.
\par 
\par }
10350
Scribble10350
TInstantSelector.MaxCount
MaxCount;MaxCount,TInstantSelector;TInstantSelector,MaxCount;



Imported
main

MaxCount;MaxCount_Property;TInstantSelector_MaxCount
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.MaxCount \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{linkID=10200>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the maximum number of objects
\par \pard\sb25\sa25\b\f1 property\b0  MaxCount: Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Specifies the maximum number of objects for the selectors extend of objects.
\par 
\par }
10360
Scribble10360
TInstantSelector.ObjectClass
ObjectClass;ObjectClass,TInstantSelector;TInstantSelector,ObjectClass;



Imported
main

ObjectClass;ObjectClass_Property;TInstantSelector_ObjectClass
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.ObjectClass \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantSelector\strike0\{linkID=10200>main\}\tab\ul See Also\ulnone\{linkID=10370\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class of objects being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The exposer uses dataset fields to access properties of exposed objects. ObjectClass specifies the common base class of the objects being exposed. By default, the accessor created by the exposer to access the subject will determine the class from the attached subject. TInstantCustomExposer therefore introduces the ObjectClass property as read-only, but descendants may reintroduce this property as writable, allowing you to override the class determined by the accessor. TInstantExposer is an example hereof.
\par 
\par }
10370
Scribble10370





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantSelector.ObjectClassName\strike0\{linkID=10380>main\}
\par }
10380
Scribble10380
TInstantSelector.ObjectClassName
ObjectClassName;ObjectClassName,TInstantSelector;TInstantSelector,ObjectClassName;



Imported
main

ObjectClassName;ObjectClassName_Property;TInstantSelector_ObjectClassName
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.ObjectClassName \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantSelector\strike0\{linkID=10200>main\}\tab\ul See Also\ulnone\{linkID=10390\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Specifies the class name of objects being exposed.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  ObjectClassName;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ObjectClassName specifies the name of the common class of the objects being exposed.
\par 
\par }
10390
Scribble10390





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantSelector.ObjectClass\strike0\{linkID=10360>main\}
\par }
10400
Scribble10400
TInstantSelector.ParamCheck
ParamCheck;ParamCheck,TInstantSelector;TInstantSelector,ParamCheck;



Imported
main

ParamCheck;ParamCheck_Property;TInstantSelector_ParamCheck
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.ParamCheck \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{linkID=10200>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies whether the parameter list is regenerated.
\par \pard\sb25\sa25\b\f1 property\b0  ParamCheck: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use ParamCheck to specify if the \strike Params\strike0\{linkID=10410>main\} property must be cleared and regenerated if an application modifies the Selectors \strike Command\strike0\{linkID=10330>main\} property at runtime. By default ParamCheck is True. An application that does not use parameterized queries may choose to set ParamCheck to False, but otherwise ParamCheck should be True.
\par 
\par }
10410
Scribble10410
TInstantSelector.Params
Params;Params,TInstantSelector;TInstantSelector,Params;



Imported
main

Params;Params_Property;TInstantSelector_Params
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.Params \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{linkID=10200>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Contains the parameters for the command.
\par \pard\sb25\sa25\b\f1 property\b0  Params: TParams;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use the Params property to specify parameter names, values, and data types at design time or runtime for the command of the Selector. Params is a zero-based array of TParams parameter records. Index specifies the array element to access.
\par 
\par }
10420
Scribble10420
TInstantSelector.Query
Query;Query,TInstantSelector;TInstantSelector,Query;



Imported
main

Query;Query_Property;TInstantSelector_Query
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSelector.Query \cf1\b0\fs16 
\par \strike TInstantSelector\strike0\{linkID=10200>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Determines the query object that the selector component uses to perform a selection.
\par \pard\sb25\sa25\b\f1 property\b0  Query: TInstantQuery;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Query to gain access to the query object that the selector component uses to perform a selection.
\par 
\par }
10430
Scribble10430
TInstantSimple
TInstantSimple;


classessymbol:000460
Imported
main

TInstantSimple;TInstantSimple_Object
FALSE
21
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang3081\b\f0\fs24 TInstantSimple \b0\fs16  
\par \pard\sb25\tx1435\tx2875\cf1\ul Hierarchy\cf2\ulnone\{linkID=10450\}\cf1\tab\ul See Also\cf2\ulnone\{linkID=10440\}\tab\cf1\strike Unit: InstantPersistence\cf2\strike0\{linkID=13050>main\}\{keepn\}\cf0 
\par \pard\sb25\sa85\tx1435\tx2875\fs18 The ancestor of all the attribute classes that represent simple types.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantSimple = \b class\b0 (\cf1\strike TInstantAttribute\cf2\strike0\{linkID=2170>main\}\cf0 )
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantSimple is the ancestor of all the attribute classes that represents simple types.
\par TInstantSimple is abstract; so do not create instances of this class. Instead refer to the following concrete descendant classes: 
\par 
\par \ul\b Simple attribute classes\ulnone\b0 
\par \cf1\strike TInstantBlob\cf2\strike0\{linkID=2680>main\}\cf0 
\par \cf1\strike TInstantBoolean\cf2\strike0\{linkID=2860>main\}\cf0 
\par \cf1\strike TInstant\lang1033\f2 Currency\cf2\lang3081\strike0\f0\{linkID=\lang1033\f2 4670\lang3081\f0 >main\}\cf0 
\par \cf1\strike TInstantDateTime\cf2\strike0\{linkID=5670>main\}\cf0 
\par \cf1\strike TInstantFloat\cf2\strike0\{linkID=6840>main\}\cf0 
\par \cf1\strike TInstantInteger\cf2\strike0\{linkID=7070>main\}\cf0 
\par \cf1\strike TInstantMemo\cf2\strike0\{linkID=7190>main\}\cf0 
\par \cf1\strike TInstantString\cf2\strike0\{linkID=11000>main\}\cf0 
\par 
\par }
10440
Scribble10440





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantComplex\strike0\{linkID=3190>main\}
\par }
10450
Scribble10450





Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10430>main\}
\par 
\par }
10460
Scribble10460





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSimple Fields \cf1\b0\fs16  
\par \strike TInstantSimple\strike0\{linkID=10430>main\}\{keepn\}
\par 
\par }
10470
Scribble10470





Imported



FALSE
25
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSimple Properties \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantSimple\strike0\{linkID=10430>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=10480\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
10480
Scribble10480





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
10490
Scribble10490





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantSimple Events \cf1\b0\fs16 
\par \strike TInstantSimple\strike0\{linkID=10430>main\}\cf0\{keepn\}\cf1 
\par 
\par }
10500
Scribble10500





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSimple Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantSimple\strike0\{linkID=10430>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=10510\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
10510
Scribble10510





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
10520
Scribble10520





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantSimple Members \cf1\b0\fs16 
\par \strike TInstantSimple\strike0\{linkID=10430>main\}\tab\ul Legend\ulnone\{linkID=10530\}\cf0\{keepn\}\cf1 
\par 
\par }
10530
Scribble10530





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\tx355\lang1040\b\f0\fs18 Legend
\par \pard\li95\sb25\sa25\tx355\cf1\b0\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm1.BMP\} read only
\par 
\par }
10540
Scribble10540
TInstantStream
TInstantStream;


classessymbol:000470
Imported
main

TInstantStream;TInstantStream_Object
FALSE
14
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5720\tx7080\ul Hierarchy\ulnone\{linkID=10550\}\tab\strike Members\strike0\{linkID=10600>nav\}\tab\strike Properties\strike0\{linkID=10570>nav\}\tab\strike Methods\strike0\{linkID=10590>nav\}\tab\strike Events\strike0\{linkID=10580>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\tx5755\fs18 TStream is the base class for classes that provide streaming capabilities for various kinds of media.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\f1 TInstantStream = \b class\b0 (TStream)
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\tx5755\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\tx5755\b0 TInstantStream is the base class for classes that provide streaming capabilities. TInstantStream uses a source stream that handles the streaming. The source stream is specified by the \strike Source\strike0\{linkID=10620>main\} property, or as an argument of the constructor. TInstantStream is not abstract but can be instantiated. If the \strike Source\strike0\{linkID=10620>main\} stream is unassigned, the TInstantStream object automatically creates a TMemoryStream object which it uses as its source stream.
\par TInstantStream implements functionality to:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Manage resource files
\par \{bmct bm3.BMP\}\tab Read and write objects.
\par \pard\sb25\sa25\tx495 
\par 
\par }
10550
Scribble10550





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TStream
\par \pard\li95\tx355\tab |
\par \strike TInstantStream\strike0\{linkID=10540>main\}
\par 
\par }
10560
Scribble10560





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStream Fields \cf1\b0\fs16  
\par \strike TInstantStream\strike0\{linkID=10540>main\}\{keepn\}
\par 
\par }
10570
Scribble10570





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStream Properties \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{linkID=10540>main\}\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FreeSource\strike0\{linkID=10610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Source\strike0\{linkID=10620>main\}
\par 
\par }
10580
Scribble10580





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStream Events \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{linkID=10540>main\}\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnProcessObject\strike0\{linkID=10820>main\}
\par 
\par }
10590
Scribble10590





Imported



FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStream Methods \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{linkID=10540>main\}\{keepn\}
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AlignStream\strike0\{linkID=10640>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10650>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObject\strike0\{linkID=10660>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObjectRes\strike0\{linkID=10680>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResHeader\strike0\{linkID=10700>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResourceFileHeader\strike0\{linkID=10720>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObject\strike0\{linkID=10740>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObjectRes\strike0\{linkID=10760>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceFileHeader\strike0\{linkID=10780>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceHeader\strike0\{linkID=10800>main\}
\par 
\par }
10600
Scribble10600





Imported



FALSE
22
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStream Members \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{linkID=10540>main\}\{keepn\}
\par \pard\sb55\sa55\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FreeSource\strike0\{linkID=10610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Source\strike0\{linkID=10620>main\}
\par \pard\sb55\sa55\b Events
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnProcessObject\strike0\{linkID=10820>main\}
\par \pard\sb55\sa55\b Methods
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AlignStream\strike0\{linkID=10640>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10650>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObject\strike0\{linkID=10660>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObjectRes\strike0\{linkID=10680>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResHeader\strike0\{linkID=10700>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResourceFileHeader\strike0\{linkID=10720>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObject\strike0\{linkID=10740>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObjectRes\strike0\{linkID=10760>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceFileHeader\strike0\{linkID=10780>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceHeader\strike0\{linkID=10800>main\}
\par 
\par }
10610
Scribble10610
TInstantStream.FreeSource
FreeSource;FreeSource,TInstantStream;TInstantStream,FreeSource;



Imported
main

FreeSource;FreeSource_Property;TInstantStream_FreeSource
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.FreeSource \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{linkID=10540>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies if the source stream should be destroyed.
\par \pard\sb25\sa25\b\f1 property\b0  FreeSource: Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use FreeSource to specify if the \strike Source\strike0\{linkID=10620>main\} stream should be destroyed when the instance is destroyed.
\par 
\par }
10620
Scribble10620
TInstantStream.Source
Source;Source,TInstantStream;TInstantStream,Source;



Imported
main

Source;Source_Property;TInstantStream_Source
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.Source \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantStream\strike0\{linkID=10540>main\}\tab\ul See Also\ulnone\{linkID=10630\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Specifies the source stream.
\par \pard\sb25\sa25\tx1435\b\f1 property\b0  Source: TStream;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use Source to specify the source stream that the \strike TInstantStream\strike0\{linkID=10540>main\} instance should use for streaming.
\par 
\par }
10630
Scribble10630





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.FreeSource\strike0\{linkID=10610>main\}
\par }
10640
Scribble10640
TInstantStream.AlignStream
AlignStream;AlignStream,TInstantStream;TInstantStream,AlignStream;



Imported
main

AlignStream;AlignStream_Method;TInstantStream_AlignStream
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.AlignStream \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{linkID=10540>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Aligns the position of the stream to the next 32-bit boundary.
\par \pard\sb25\sa25\b\f1 procedure\b0  AlignStream;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call AlignStream to align the stream to the next 32-bit boundary. The stream is automatically enlarged if required.
\par 
\par }
10650
Scribble10650
TInstantStream.Create
Create;Create,TInstantStream;TInstantStream,Create;



Imported
main

Create;Create_Method;TInstantStream_Create
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.Create \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{linkID=10540>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Creates a \strike TInstantStream\strike0\{linkID=10540>main\} instance
\par \pard\sb25\sa25\b\f1 constructor\b0  Create(ASource: TStream; AFreeSource: Boolean);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Creates a \strike TInstantStream\strike0\{linkID=10540>main\} instance. Use the ASource argument specify the source stream that the \strike TInstantStream\strike0\{linkID=10540>main\} instance should use for streaming, and the AFreeSource argument to specify if the \strike Source\strike0\{linkID=10620>main\} stream should be destroyed when the \strike TInstantStream\strike0\{linkID=10540>main\} instance is destroyed.
\par 
\par }
10660
Scribble10660
TInstantStream.ReadObject
ReadObject;ReadObject,TInstantStream;TInstantStream,ReadObject;



Imported
main

ReadObject;ReadObject_Method;TInstantStream_ReadObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.ReadObject \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantStream\strike0\{linkID=10540>main\}\tab\ul See Also\ulnone\{linkID=10670\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Reads an object from the stream.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  ReadObject(AObject: TPersistent; Arg: Pointer): TPersistent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use ReadObject to read an object from the stream into the object specified by the AObject argument. If AObject is nil, ReadObject creates an object based on the type information in the stream and returns the newly created object. The Arg argument is an optional argument used if the construction of the object requires an argument.
\par 
\par }
10670
Scribble10670





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.WriteObject\strike0\{linkID=10740>main\}
\par }
10680
Scribble10680
TInstantStream.ReadObjectRes
ReadObjectRes;ReadObjectRes,TInstantStream;TInstantStream,ReadObjectRes;



Imported
main

ReadObjectRes;ReadObjectRes_Method;TInstantStream_ReadObjectRes
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.ReadObjectRes \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantStream\strike0\{linkID=10540>main\}\tab\ul See Also\ulnone\{linkID=10690\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Reads an object enclosed in a resource entry from the stream.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  ReadObjectRes(AObject: TPersistent; Arg: Pointer): TPersistent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Reads an object enclosed in a resource entry from the stream into the object specified by the AObject argument. If AObject is nil, \strike ReadObject\strike0\{linkID=10660>main\} creates an object based on the type information in the stream and returns the newly created object. The Arg argument is an optional argument used if the construction of the object requires an argument.
\par 
\par }
10690
Scribble10690





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.WriteObjectRes\strike0\{linkID=10760>main\}
\par }
10700
Scribble10700
TInstantStream.ReadResHeader
ReadResHeader;ReadResHeader,TInstantStream;TInstantStream,ReadResHeader;



Imported
main

ReadResHeader;ReadResHeader_Method;TInstantStream_ReadResHeader
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.ReadResHeader \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantStream\strike0\{linkID=10540>main\}\tab\ul See Also\ulnone\{linkID=10710\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Reads a Windows resource-entry header from the stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  ReadResHeader;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ReadResHeader reads a Windows resource-entry header from the stream. After reading the resource-entry header, the position of the stream will be just beyond the header.
\par 
\par }
10710
Scribble10710





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.WriteResourceHeader\strike0\{linkID=10800>main\}
\par }
10720
Scribble10720
TInstantStream.ReadResourceFileHeader
ReadResourceFileHeader;ReadResourceFileHeader,TInstantStream;TInstantStream,ReadResourceFileHeader;



Imported
main

ReadResourceFileHeader;ReadResourceFileHeader_Method;TInstantStream_ReadResourceFileHeader
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.ReadResourceFileHeader \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantStream\strike0\{linkID=10540>main\}\tab\ul See Also\ulnone\{linkID=10730\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Reads a Windows resource-file header from the stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  ReadResourceFileHeader;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ReadResourceFileHeader reads a Windows resource-file header from the stream. After reading the resource-file header, the position of the stream will be just beyond the header.
\par 
\par }
10730
Scribble10730





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.WriteResourceFileHeader\strike0\{linkID=10780>main\}
\par }
10740
Scribble10740
TInstantStream.WriteObject
TInstantStream,WriteObject;WriteObject;WriteObject,TInstantStream;



Imported
main

TInstantStream_WriteObject;WriteObject;WriteObject_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.WriteObject \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantStream\strike0\{linkID=10540>main\}\tab\ul See Also\ulnone\{linkID=10750\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Writes an object to the stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  WriteObject(AObject: TPersistent);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use WriteObject to write the object specified by the AObject argument to the stream.
\par 
\par }
10750
Scribble10750





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.ReadObject\strike0\{linkID=10660>main\}
\par }
10760
Scribble10760
TInstantStream.WriteObjectRes
TInstantStream,WriteObjectRes;WriteObjectRes;WriteObjectRes,TInstantStream;



Imported
main

TInstantStream_WriteObjectRes;WriteObjectRes;WriteObjectRes_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.WriteObjectRes \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantStream\strike0\{linkID=10540>main\}\tab\ul See Also\ulnone\{linkID=10770\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Writes an object to the stream as a resource entry.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  WriteObjectRes(\b const\b0  ResName: \b string\b0 ; AObject: TPersistent);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Writes the object specified by the AObject argument to the stream as a resource entry with the name specified as the ResName argument.
\par 
\par }
10770
Scribble10770





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.ReadObjectRes\strike0\{linkID=10680>main\}
\par }
10780
Scribble10780
TInstantStream.WriteResourceFileHeader
TInstantStream,WriteResourceFileHeader;WriteResourceFileHeader;WriteResourceFileHeader,TInstantStream;



Imported
main

TInstantStream_WriteResourceFileHeader;WriteResourceFileHeader;WriteResourceFileHeader_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.WriteResourceFileHeader \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantStream\strike0\{linkID=10540>main\}\tab\ul See Also\ulnone\{linkID=10790\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Writes a Windows resource-file header to the stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  WriteResourceFileHeader;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call WriteResourceFileHeader to write a Windows resource-file header to the stream.
\par 
\par }
10790
Scribble10790





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.ReadResourceFileHeader\strike0\{linkID=10720>main\}
\par }
10800
Scribble10800
TInstantStream.WriteResourceHeader
TInstantStream,WriteResourceHeader;WriteResourceHeader;WriteResourceHeader,TInstantStream;



Imported
main

TInstantStream_WriteResourceHeader;WriteResourceHeader;WriteResourceHeader_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.WriteResourceHeader \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantStream\strike0\{linkID=10540>main\}\tab\ul See Also\ulnone\{linkID=10810\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Writes a Windows resource-entry header to the stream.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  WriteResourceHeader(\b const\b0  ResName: \b string\b0 ; DataSize: Cardinal);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 WriteResHeader writes a Windows resource-entry header to the stream. The ResName argument specifies the name of the resource, and the DataSize argument specifies the amount of data that the resource contains. After writing the resource-entry header, the position of the stream will be just beyond the header.
\par 
\par }
10810
Scribble10810





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStream.ReadResHeader\strike0\{linkID=10700>main\}
\par }
10820
Scribble10820
TInstantStream.OnProcessObject
OnProcessObject;OnProcessObject,TInstantStream;TInstantStream,OnProcessObject;



Imported
main

OnProcessObject;OnProcessObject_Event;TInstantStream_OnProcessObject
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStream.OnProcessObject \cf1\b0\fs16 
\par \strike TInstantStream\strike0\{linkID=10540>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Specifies an object processing event handler.
\par \pard\sb25\sa25\b\f1 property\b0  OnProcessObject: \strike TInstantProcessObjectEvent\strike0\{linkID=12510>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use OnProcessObject to attach an optional object processing event handler to the stream. When an object is either written to or read from the stream, the OnProcessObject event is triggered.
\par 
\par }
10830
Scribble10830
TInstantStreamable
TInstantStreamable;


classessymbol:000480
Imported
main

TInstantStreamable;TInstantStreamable_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamable \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4260\ul Hierarchy\ulnone\{linkID=10840\}\tab\strike Members\strike0\{linkID=10900>nav\}\tab\strike Methods\strike0\{linkID=10880>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantStreamable is the base class for classes that are streamable.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantStreamable = \b class\b0 (TPersistent)
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantStreamable introduces the ability to read and write instances from and to a stream. Use TInstantStreamable as base class when declaring classes that should be streamable. To enable streaming of a class, override the \strike ReadObject\strike0\{linkID=10950>main\}, \strike WriteObject\strike0\{linkID=10980>main\} and \strike CreateInstance\strike0\{linkID=10920>main\} methods.
\par 
\par }
10840
Scribble10840





Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par 
\par }
10850
Scribble10850





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStreamable Fields \cf1\b0\fs16  
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}\{keepn\}
\par 
\par }
10860
Scribble10860





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStreamable Properties \cf1\b0\fs16 
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}\cf0\{keepn\}\cf1 
\par 
\par }
10870
Scribble10870





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStreamable Events \cf1\b0\fs16 
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}\cf0\{keepn\}\cf1 
\par 
\par }
10880
Scribble10880





Imported



FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStreamable Methods \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantStreamable\strike0\{linkID=10830>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=10890\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
10890
Scribble10890





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
10900
Scribble10900





Imported



FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStreamable Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantStreamable\strike0\{linkID=10830>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=10910\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
10910
Scribble10910





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
10920
Scribble10920
TInstantStreamable.CreateInstance
CreateInstance;CreateInstance,TInstantStreamable;TInstantStreamable,CreateInstance;



Imported
main

CreateInstance;CreateInstance_Method;TInstantStreamable_CreateInstance
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamable.CreateInstance \cf1\b0\fs16 
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}\{keepn\}
\par \pard\sb25\sa85\fs18 Creates an instance.
\par \pard\sb25\sa25\b\f1 class\b0  \b function\b0  CreateInstance(Arg: Pointer): \strike TInstantStreamable\strike0\{linkID=10830>main\}; \b virtual\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 CreateInstance is called automatically by streaming mechanism when reading an object from a stream requires construction of a new instance. Do not call it explicitly in your applications. The CreateInstance method implemented in \strike TInstantStreamable\strike0\{linkID=10830>main\} calls the default TObject Create constructor. Override this class function when creating a class that needs to read instances from a stream. Use the methods of the reader objects passed as the Reader argument to read the properties of the instance.
\par 
\par }
10930
Scribble10930
TInstantStreamable.LoadFromStream
LoadFromStream;LoadFromStream,TInstantStreamable;TInstantStreamable,LoadFromStream;



Imported
main

LoadFromStream;LoadFromStream_Method;TInstantStreamable_LoadFromStream
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamable.LoadFromStream \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantStreamable\strike0\{linkID=10830>main\}\tab\ul See Also\ulnone\{linkID=10940\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Loads the object from a stream
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  LoadFromStream(Stream: TStream; ProcessEvent: \strike TInstantProcessObjectEvent\strike0\{linkID=12510>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call LoadFromStream to load the object from a stream specified by the Stream argument. The stream must contain an object in the binary stream format. By setting the ProcessEvent argument, information about the objects being processed can be obtained.
\par 
\par }
10940
Scribble10940





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStreamable.SaveToStream\strike0\{linkID=10970>main\}
\par }
10950
Scribble10950
TInstantStreamable.ReadObject
ReadObject;ReadObject,TInstantStreamable;TInstantStreamable,ReadObject;



Imported
main

ReadObject;ReadObject_Method;TInstantStreamable_ReadObject
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamable.ReadObject \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike TInstantStreamable\strike0\{linkID=10830>main\}\tab\ul See Also\ulnone\{linkID=10960\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Reads the instance.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  ReadObject(Reader: TInstantReader); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 ReadObject is called automatically by streaming mechanism. Do not call it explicitly in your applications. The ReadObject method implemented in \strike TInstantStreamable\strike0\{linkID=10830>main\} does nothing. Override this method when creating a class that needs to read instances from a stream. Use the methods of the reader objects passed as the Reader argument to read the properties of the instance.
\par 
\par }
10960
Scribble10960





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStreamable.WriteObject\strike0\{linkID=10980>main\}
\par }
10970
Scribble10970
TInstantStreamable.SaveToStream
SaveToStream;SaveToStream,TInstantStreamable;TInstantStreamable,SaveToStream;



Imported
main

SaveToStream;SaveToStream_Method;TInstantStreamable_SaveToStream
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamable.SaveToStream \cf1\b0\fs16 
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Saves the object to a stream
\par \pard\sb25\sa25\b\f1 procedure\b0  SaveToStream(Stream: TStream; ProcessEvent: \strike TInstantProcessObjectEvent\strike0\{linkID=12510>main\});
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Saves the object to a stream specified by the Stream argument. By setting the ProcessEvent argument, information about the objects being processed can be obtained.
\par 
\par }
10980
Scribble10980
TInstantStreamable.WriteObject
TInstantStreamable,WriteObject;WriteObject;WriteObject,TInstantStreamable;



Imported
main

TInstantStreamable_WriteObject;WriteObject;WriteObject_Method
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamable.WriteObject \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike TInstantStreamable\strike0\{linkID=10830>main\}\tab\ul See Also\ulnone\{linkID=10990\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Writes the instance
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  WriteObject(Writer: TInstantWriter); \b virtual\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 WriteObject is called automatically by streaming mechanism. Do not call it explicitly in your applications. The WriteObject method implemented in \strike TInstantStreamable\strike0\{linkID=10830>main\} does nothing. Override this method when creating a class that needs to write instances to a stream. Use the methods of the writer objects passed as the Writer argument to write the properties of the instance.
\par 
\par }
10990
Scribble10990





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantStreamable.ReadObject\strike0\{linkID=10950>main\}
\par }
11000
Scribble11000
TInstantString
TInstantString;


classessymbol:000490
Imported
main

TInstantString;TInstantString_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantString \cf1\b0\fs16 
\par \pard\sb25\tx1400\tx2840\tx4260\ul Hierarchy\ulnone\{linkID=11010\}\tab\strike Members\strike0\{linkID=11080>nav\}\tab\strike Properties\strike0\{linkID=11030>nav\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\tx2875\fs18 TInstantString represents a string value.
\par \pard\sb25\sa25\tx1435\tx2875\f1 TInstantString = \b class\b0 (\strike TInstantSimple\strike0\{linkID=10430>main\})
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 TInstantString holds a string as its value. A string can be of arbitrary length. Usually databases impose some limitations regarding the length of strings.
\par 
\par }
11010
Scribble11010





Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TPersistent
\par \pard\li95\tx355\tab |
\par \strike TInstantStreamable\strike0\{linkID=10830>main\}
\par \tab |
\par \strike TInstantAttribute\strike0\{linkID=2170>main\}
\par \tab |
\par \strike TInstantSimple\strike0\{linkID=10430>main\}
\par \tab |
\par \strike TInstantString\strike0\{linkID=11000>main\}
\par 
\par }
11020
Scribble11020





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantString Fields \cf1\b0\fs16  
\par \strike TInstantString\strike0\{linkID=11000>main\}\{keepn\}
\par 
\par }
11030
Scribble11030





Imported



FALSE
27
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantString Properties \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantString\strike0\{linkID=11000>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=11040\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantString
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=11100>main\}
\par \pard\sb55\sa55\tx355\b TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsBoolean\strike0\{linkID=2270>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsCurrency\strike0\{linkID=2280>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsDateTime\strike0\{linkID=2290>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsFloat\strike0\{linkID=2300>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsInteger\strike0\{linkID=2310>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsObject\strike0\{linkID=2320>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsString\strike0\{linkID=2330>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AsVariant\strike0\{linkID=2340>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DisplayText\strike0\{linkID=2350>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike IsChanged\strike0\{linkID=2360>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsDefault\strike0\{linkID=2380>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsIndexed\strike0\{linkID=2390>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsMandatory\strike0\{linkID=2410>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike IsRequired\strike0\{linkID=2430>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Metadata\strike0\{linkID=2450>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Name\strike0\{linkID=2460>main\}
\par \{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike Owner\strike0\{linkID=2470>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Value\strike0\{linkID=2480>main\}
\par 
\par }
11040
Scribble11040





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
11050
Scribble11050





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantString Events \cf1\b0\fs16 
\par \strike TInstantString\strike0\{linkID=11000>main\}\cf0\{keepn\}\cf1 
\par 
\par }
11060
Scribble11060





Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantString Methods \cf1\b0\fs16 
\par \pard\sb25\tx2820\strike TInstantString\strike0\{linkID=11000>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=11070\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantAttribute
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm6.BMP\} \strike AttributeType\strike0\{linkID=2490>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Changed\strike0\{linkID=2500>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Create\strike0\{linkID=2520>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike Initialize\strike0\{linkID=2530>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Reset\strike0\{linkID=2540>main\}
\par \{bmct bm0.BMP\}\{bmct bm2.BMP\} \strike Unchanged\strike0\{linkID=2550>main\}
\par \pard\sb55\sa55\tx355\b TInstantStreamable
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike CreateInstance\strike0\{linkID=10920>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike LoadFromStream\strike0\{linkID=10930>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike ReadObject\strike0\{linkID=10950>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike SaveToStream\strike0\{linkID=10970>main\}
\par \{bmct bm5.BMP\}\{bmct bm2.BMP\} \strike WriteObject\strike0\{linkID=10980>main\}
\par 
\par }
11070
Scribble11070





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par 
\par }
11080
Scribble11080





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantString Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantString\strike0\{linkID=11000>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=11090\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm4.BMP\} \strike Value\strike0\{linkID=11100>main\}
\par 
\par }
11090
Scribble11090





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm6.BMP\} abstract
\par \{bmct bm2.BMP\} virtual
\par \{bmct bm5.BMP\} protected
\par \{bmct bm4.BMP\} published
\par \{bmct bm1.BMP\} read only
\par 
\par }
11100
Scribble11100
TInstantString.Value
TInstantString,Value;Value;Value,TInstantString;



Imported
main

TInstantString_Value;Value;Value_Property
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantString.Value \cf1\b0\fs16 
\par \strike TInstantString\strike0\{linkID=11000>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies the value of the string attribute
\par \pard\sb25\sa25\b\f1 property\b0  Value: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use Value to specify the value of the string attribute.
\par 
\par }
11110
Scribble11110
TInstantStringStream
TInstantStringStream;


classessymbol:000500
Imported
main

TInstantStringStream;TInstantStringStream_Object
FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStringStream \cf1\b0\fs16  
\par \pard\sb25\tx1400\tx2840\tx4280\tx5700\ul Hierarchy\ulnone\{linkID=11120\}\tab\strike Members\strike0\{linkID=11180>nav\}\tab\strike Properties\strike0\{linkID=11140>nav\}\tab\strike Methods\strike0\{linkID=11170>nav\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\tx4315\fs18 TInstantStringStream provides stream-based access to a string.
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\f1 TInstantStringStream = \b class\b0 (\strike TInstantStream\strike0\{linkID=10540>main\})
\par \pard\sb55\sa25\tx1435\tx2875\tx4315\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\b0 Use TInstantStringStream to access a string as a stream. TInstantStringStream is useful as an intermediary object since it can hold text as well as binary data. Like all \strike TInstantStream\strike0\{linkID=10540>main\} objects, TInstantStringStream uses a Source stream that handles the streaming. The Source stream of TInstantStringStream is a TStringStream object.
\par 
\par }
11120
Scribble11120





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Class Hierarchy
\par 
\par \pard\li95\cf1\b0\fs18 TStream
\par \pard\li95\tx355\tab |
\par \strike TInstantStream\strike0\{linkID=10540>main\}
\par \tab |
\par \strike TInstantStringStream\strike0\{linkID=11110>main\}
\par 
\par }
11130
Scribble11130





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStringStream Fields \cf1\b0\fs16 
\par \strike TInstantStringStream\strike0\{linkID=11110>main\}\{keepn\} 
\par 
\par }
11140
Scribble11140





Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStringStream Properties \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantStringStream\strike0\{linkID=11110>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=11150\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 TInstantStringStream
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DataString\strike0\{linkID=11200>main\}
\par \pard\sb55\sa55\tx355\b TInstantStream
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike FreeSource\strike0\{linkID=10610>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Source\strike0\{linkID=10620>main\}
\par 
\par }
11150
Scribble11150





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
11160
Scribble11160





Imported



FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStringStream Events \cf1\b0\fs16 
\par \strike TInstantStringStream\strike0\{linkID=11110>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike OnProcessObject\strike0\{linkID=10820>main\}
\par 
\par }
11170
Scribble11170





Imported



FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 TInstantStringStream Methods \cf1\b0\fs16 
\par \strike TInstantStringStream\strike0\{linkID=11110>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 TInstantStringStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=11210>main\}
\par \pard\sb55\sa55\b TInstantStream
\par \pard\keep\li95\sb25\sa25\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike AlignStream\strike0\{linkID=10640>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=10650>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObject\strike0\{linkID=10660>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadObjectRes\strike0\{linkID=10680>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResHeader\strike0\{linkID=10700>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike ReadResourceFileHeader\strike0\{linkID=10720>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObject\strike0\{linkID=10740>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteObjectRes\strike0\{linkID=10760>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceFileHeader\strike0\{linkID=10780>main\}
\par \{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike WriteResourceHeader\strike0\{linkID=10800>main\}
\par 
\par }
11180
Scribble11180





Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\tx355\lang1040\b\f0\fs24 TInstantStringStream Members \cf1\b0\fs16 
\par \pard\sb25\tx2840\strike TInstantStringStream\strike0\{linkID=11110>main\}\tab\cf2\ul Legend\cf3\ulnone\{linkID=11190\}\cf1\{keepn\} 
\par \pard\sb55\sa55\tx355\b\fs18 Properties
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm1.BMP\} \strike DataString\strike0\{linkID=11200>main\}
\par \pard\sb55\sa55\tx355\b Methods
\par \pard\keep\li95\sb25\sa25\tx355\b0\{bmct bm0.BMP\}\{bmct bm0.BMP\} \strike Create\strike0\{linkID=11210>main\}
\par 
\par }
11190
Scribble11190





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 Legend
\par \pard\li95\sb25\sa25\cf1\b0\fs18\{bmct bm1.BMP\} read only
\par 
\par }
11200
Scribble11200
TInstantStringStream.DataString
DataString;DataString,TInstantStringStream;TInstantStringStream,DataString;



Imported
main

DataString;DataString_Property;TInstantStringStream_DataString
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStringStream.DataString \cf1\b0\fs16 
\par \strike TInstantStringStream\strike0\{linkID=11110>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Provides access to the string represented by the \strike TInstantStringStream\strike0\{linkID=11110>main\} instance.
\par \pard\sb25\sa25\b\f1 property\b0  DataString: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use DataString to access the stream as a string. DataString represents the data that the stream manages.
\par 
\par }
11210
Scribble11210
TInstantStringStream.Create
Create;Create,TInstantStringStream;TInstantStringStream,Create;



Imported
main

Create;Create_Method;TInstantStringStream_Create
FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStringStream.Create \cf1\b0\fs16 
\par \strike TInstantStringStream\strike0\{linkID=11110>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Creates an instance of \strike TInstantStringStream\strike0\{linkID=11110>main\}.
\par \pard\sb25\sa25\b\f1 constructor\b0  Create(AString: \b string\b0 );
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Call Create to create a \strike TInstantStringStream\strike0\{linkID=11110>main\} object. Create initializes the \strike DataString\strike0\{linkID=11200>main\} property to the AString parameter.
\par 
\par }
11220
Scribble11220
InstantCharSetToStr
InstantCharSetToStr;


functionsssymbol:000010
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantCharSetToStr \cf1\b0\fs16  
\par \pard\sb25\tx1435\tx2875\ul See Also\ulnone\{linkID=11230\}\tab\strike Example 1\strike0\{linkID=11240>example\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Converts a set of char to a string.
\par \pard\sb25\sa25\tx1435\tx2875\b\f1 function\b0  InstantCharSetToStr(C: TChars): \b string\b0 ;
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Use InstantCharSetToStr to convert a set of char to a string. The resulting string is condensed to be as short as possible using ".." to denote ranges.
\par 
\par }
11230
Scribble11230





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantStrToCharSet\strike0\{linkID=11860>main\}
\par }
11240
Scribble11240
InstantCharSetToStr, Example 1
InstantCharSetToStr,Example 1;



Imported
example


FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike InstantCharSetToStr\strike0\{linkID=11220>main\}\{keepn\} 
\par \pard\keep\f1\fs18   InstantCharSetToStr(['a','b','c']);  //'abc'
\par   InstantCharSetToStr(['a','b','c','d']);  //'a..d'
\par   InstantCharSetToStr(['4','a','1','c','3','b','2','d']);  //'1..4a..d'
\par 
\par }
11250
Scribble11250
InstantCheckConnection
InstantCheckConnection;


functionsssymbol:000020
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 InstantCheckConnection \b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Checks the assignment of a connection
\par \pard\sb25\sa25\b\f1 procedure\b0  InstantCheckConnection(Connection: TCustomConnection);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 InstantCheckConnection checks if a connection is assigned. If the connection is unassigned an exception is raised.
\par 
\par }
11260
Scribble11260
InstantCheckConnector
InstantCheckConnector;


functionsssymbol:000030
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantCheckConnector \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11270\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Checks the assignment of a connector
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantCheckConnector(\b var\b0  Connector: \strike TInstantConnector\strike0\{linkID=3770>main\}): \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantCheckConnector checks if a connector is assigned. If the Connector argument is unassigned, the function checks if a default connector exists. If a default connector exists and the argument is unassigned, the argument as well as the result of the function is assigned to the default connector. If neither the argument is assigned nor a default Connector exists, an exception is raised.
\par 
\par }
11270
Scribble11270





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantDefaultConnector\strike0\{linkID=11370>main\}
\par }
11280
Scribble11280
InstantClassNameToName
InstantClassNameToName;


functionsssymbol:000040
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantClassNameToName \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11290\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Converts a class name to a name.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantClassNameToName(\b const\b0  ClassName: \b string\b0 ): \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantClassNameToName converts a class name to a displayable name by removing the class prefix.
\par 
\par }
11290
Scribble11290





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantNameToClassName\strike0\{linkID=11640>main\}
\par }
11300
Scribble11300
InstantCompareObjects 1
InstantCompareObjects 1;


functionsssymbol:000050
Imported
main


FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang3081\b\f0\fs24 InstantCompareObjects 1 \b0\fs16 
\par \cf1\strike Unit: InstantUtils\cf2\strike0\{linkID=13160>main\}\{keepn\}\cf0 
\par \pard\sb25\sa85\fs18 Compares two objects by comparing a named published property.
\par \pard\sb25\sa25\b\f1 function\b0  InstantCompareObjects(Obj1: TObject; Obj2: TObject; PropName: \b string\b0 ; Options: \cf1\strike TInstantCompareOptions\cf2\strike0\{linkID=12170>main\}\cf0 ): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InstantCompareObjects to compare two objects by a single published property named as the PropName argument. The Options argument applies to string property comparisons and specifies if a case insensitive comparison should be performed and if a partial match is sufficient.
\par The result of the comparison renders the following return values:
\par \fs10 
\par \pard\sb25\sa25\tqc\tx2500\b\fs18 Comparison\tab Return value\b0 
\par Obj1 < Obj2\tab -1
\par Obj1 = Obj2\tab 0
\par Obj1 > Obj2\tab 1
\par 
\par }
11310
Scribble11310
InstantCompareObjects 2
InstantCompareObjects 2;


functionsssymbol:000060
Imported
main


FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang3081\b\f0\fs24 InstantCompareObjects 2 \b0\fs16 
\par \cf1\strike Unit: InstantUtils\cf2\strike0\{linkID=13160>main\}\{keepn\}\cf0 
\par \pard\sb25\sa85\fs18 Compares two objects by comparing mulpiple named published properties.
\par \pard\sb25\sa25\b\f1 function\cf1\b0\strike InstantCompareObjects\cf2\strike0\{linkID=11300>main\}\cf0 (Obj1: TObject; Obj2: TObject; PropNames: TStrings; Options: \cf1\strike TInstantCompareOptions\cf2\strike0\{linkID=12170>main\}\cf0 ): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use \cf1\strike InstantCompareObjects\cf2\strike0\{linkID=11300>main\}\cf0  to compare two objects by multiple published properties listed in the PropNames argument. The Options argument applies to string property comparisons and specifies if a case insensitive comparison should be performed and if a partial match is sufficient.
\par The result of the comparison renders the following return values:
\par \fs10 
\par \pard\sb25\sa25\tqc\tx2500\b\fs18 Comparison\tab Return value\b0 
\par Obj1 < Obj2\tab -1
\par Obj1 = Obj2\tab 0
\par Obj1 > Obj2\tab 1
\par 
\par }
11320
Scribble11320
InstantCompareText
InstantCompareText;


functionsssymbol:000070
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantCompareText \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Compares two strings by ordinal value.
\par \pard\sb25\sa25\b\f1 function\b0  InstantCompareText(\b const\b0  S1: \b string\b0 ; \b const\b0  S2: \b string\b0 ; IgnoreCase: Boolean): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 CompareText compares S1 and S2 and returns 0 if they are equal. If S1 is greater than S2, CompareText returns an integer greater than 0. If S1 is less than S2, CompareText returns an integer less than 0. If the IgnoreCase argument is true, a case insensitive comparison is performed.
\par 
\par }
11330
Scribble11330
InstantCompareValues
InstantCompareValues;


functionsssymbol:000080
Imported
main


FALSE
16
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantCompareValues \b0\fs16 
\par \cf1\strike Unit: InstantUtils\cf2\strike0\{linkID=13160>main\}\{keepn\}\cf0 
\par \pard\sb25\sa85\fs18 Compares the values of two variants.
\par \pard\sb25\sa25\b\f1 function\b0  InstantCompareValues(V1: Variant; V2: Variant; Options: \cf1\strike TInstantCompareOptions\cf2\strike0\{linkID=12170>main\}\cf0 ): Integer;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use IntantCompareValues to compare the values of two variants. The Options argument applies to string value comparisons and specifies if a case insensitive comparison should be performed and if a partial match is sufficient.
\par The result of the comparison renders the following return values:
\par \fs10 
\par \pard\sb25\sa25\tqc\tx2500\b\fs18 Comparison\tab Return value\b0 
\par Obj1 < Obj2\tab -1
\par Obj1 = Obj2\tab 0
\par Obj1 > Obj2\tab 1
\par 
\par }
11340
Scribble11340
InstantConstArrayToVariant
InstantConstArrayToVariant;


functionsssymbol:000090
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantConstArrayToVariant \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Converts an array of constants to a variant array.
\par \pard\sb25\sa25\b\f1 function\b0  InstantConstArrayToVariant(AValues: \b array\b0  \b of\b0  \b const\b0 ): Variant;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InstantConstArrayToVariant to convert an array of constants to a variant array.
\par 
\par }
11350
Scribble11350
InstantDateTimeToStr
InstantDateTimeToStr;


functionsssymbol:000100
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDateTimeToStr \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11360\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Converts a TDatetime value to a string.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantDateTimeToStr(DateTime: TDateTime): \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantDateTimeToStr to convert a TDateTimeValue to a string using the datetime format specified by the \strike InstantDateTimeFormat\strike0\{linkID=12670>main\} string.
\par 
\par }
11360
Scribble11360





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantStrToDateTime\strike0\{linkID=11910>main\}
\par }
11370
Scribble11370
InstantDefaultConnector
InstantDefaultConnector;


functionsssymbol:000110
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDefaultConnector \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Returns the default connector instance.
\par \pard\sb25\sa25\b\f1 function\b0  InstantDefaultConnector: \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 InstantDefaultConnector returns the connector instance marked as default. The default connector is used whenever a connector is required and no connector has been specified.
\par 
\par }
11380
Scribble11380
InstantDisableNotifiers
InstantDisableNotifiers;


functionsssymbol:000120
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDisableNotifiers \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11390\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Disables all notifiers
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantDisableNotifiers;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantDisableNotifiers when all notifiers in the application should be disabled. This is especially important when performing object updates that should not be reflected in the user interface while these are ongoing.
\par 
\par }
11390
Scribble11390





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantEnableNotifiers\strike0\{linkID=11400>main\}
\par }
11400
Scribble11400
InstantEnableNotifiers
InstantEnableNotifiers;


functionsssymbol:000130
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantEnableNotifiers \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11410\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Enables all notifiers
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantEnableNotifiers;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantEnableNotifiers to re-enable all notifiers in the applications.
\par 
\par }
11410
Scribble11410





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantDisableNotifiers\strike0\{linkID=11380>main\}
\par }
11420
Scribble11420
InstantExploreObject
InstantExploreObject;


functionsssymbol:000140
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantExploreObject \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11430\}\tab\strike Unit: InstantExplorer\strike0\{linkID=12950>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Explores an object
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantExploreObject(AObject: TObject);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantExploreObject creates an instance of \strike TInstantExplorer\strike0\{linkID=6230>main\} and uses this instance to explore the object specified as the AObject argument.
\par 
\par }
11430
Scribble11430





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantExplorer\strike0\{linkID=6230>main\}
\par }
11440
Scribble11440
InstantFileVersion
InstantFileVersion;


functionsssymbol:000150
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantFileVersion \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11450\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Returns the version of a file as a record
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantFileVersion(\b const\b0  FileName: \b string\b0 ): \strike TInstantVersion\strike0\{linkID=12070>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantFileVersion returns the version of the file specified by the FileName argument as a \strike TInstantVersion\strike0\{linkID=12070>main\} record.
\par 
\par }
11450
Scribble11450





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantFileVersionStr\strike0\{linkID=11460>main\}
\par }
11460
Scribble11460
InstantFileVersionStr
InstantFileVersionStr;


functionsssymbol:000160
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantFileVersionStr \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11470\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Returns the version of a file as a string
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantFileVersionStr(\b const\b0  FileName: \b string\b0 ): \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0\strike InstantFileVersion\strike0\{linkID=11440>main\} returns the version of the file specified by the FileName argument in the format; [Major].[Minor].[Release].[Build]
\par 
\par }
11470
Scribble11470





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantFileVersion\strike0\{linkID=11440>main\}
\par }
11480
Scribble11480
InstantFindAccessorClass
InstantFindAccessorClass;


functionsssymbol:000170
Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantFindAccessorClass \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11490\}\tab\strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Finds and returns a class derived from TInstantAccessor.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantFindAccessorClass(ObjectClass: TClass): TInstantAccessorClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantFindAccessorClass to locate a class derived from TInstantAccessor by its association to another class. InstantFindAccessorClass searches the classes that have been registered using the registration procedures.
\par If the requested class cannot be found, InstantFindAccessorClass raises an exception.
\par 
\par }
11490
Scribble11490





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantGetAccessorClass\strike0\{linkID=11530>main\}
\par \strike InstantRegisterAccessorClass\strike0\{linkID=11780>main\}
\par }
11500
Scribble11500
InstantFindClass
InstantFindClass;


functionsssymbol:000180
Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantFindClass \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11510\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Finds and returns a class derived from \strike TInstantObject\strike0\{linkID=7390>main\}.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantFindClass(\b const\b0  ClassName: \b string\b0 ): TInstantObjectClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantFindClass to locate a class derived from \strike TInstantObject\strike0\{linkID=7390>main\} by name. InstantFindClass searches the classes that have been registered using the registration procedures.
\par If the requested class cannot be found, InstantFindClass raises an exception.
\par 
\par }
11510
Scribble11510





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantGetClass\strike0\{linkID=11550>main\}
\par \strike InstantRegisterClass\strike0\{linkID=11800>main\}
\par }
11520
Scribble11520
InstantGenerateId
InstantGenerateId;


functionsssymbol:000190
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantGenerateId \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Generates an unique Id.
\par \pard\sb25\sa25\b\f1 function\b0  InstantGenerateId: \b string\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 InstantGenerateId generates an unique 128-bit Integer value and returns its hexadecimal representation. To a very high degree of certainty, the Id returned by this function should be unique on the same machine or any other system (networked or not).
\par 
\par }
11530
Scribble11530
InstantGetAccessorClass
InstantGetAccessorClass;


functionsssymbol:000200
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantGetAccessorClass \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11540\}\tab\strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Finds and returns a class derived from TInstantAccessor.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantGetAccessorClass(ObjectClass: TClass): TInstantAccessorClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantGetAccessorClass to locate a class derived from TInstantAccessor by its association to another class. InstantGetAccessorClass searches the classes that have been registered using the registration procedures.
\par 
\par }
11540
Scribble11540





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantFindAccessorClass\strike0\{linkID=11480>main\}
\par \strike InstantRegisterAccessorClass\strike0\{linkID=11780>main\}
\par }
11550
Scribble11550
InstantGetClass
InstantGetClass;


functionsssymbol:000210
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantGetClass \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11560\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Finds and returns a class derived from \strike TInstantObject\strike0\{linkID=7390>main\}.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantGetClass(\b const\b0  ClassName: \b string\b0 ): TInstantObjectClass;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantGetClass to locate a class derived from \strike TInstantObject\strike0\{linkID=7390>main\} by name. InstantGetClass searches the classes that have been registered using the registration procedures.
\par 
\par }
11560
Scribble11560





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantFindClass\strike0\{linkID=11500>main\}
\par \strike InstantRegisterClass\strike0\{linkID=11800>main\}
\par }
11570
Scribble11570
InstantGetClasses
InstantGetClasses;


functionsssymbol:000220
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantGetClasses \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Extracts a list of registered classes.
\par \pard\sb25\sa25\b\f1 procedure\b0  InstantGetClasses(Classes: TList; BaseClass: TInstantObjectClass);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InstantGetClasses to extract registered classes into the list specified by the Classes parameter. Optionally the base class from which the extracted classes must descend can be specified by setting the BaseClass parameter.
\par 
\par }
11580
Scribble11580
InstantIsIdentifier
InstantIsIdentifier;


functionsssymbol:000230
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantIsIdentifier \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines if a string is a valid identifier
\par \pard\sb25\sa25\b\f1 function\b0  InstantIsIdentifier(Str: \b string\b0 ): Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InstantIsIdentifier to determine if the string specified as the S argument is a valid identifier. If S is valid, the function returns True.
\par 
\par }
11590
Scribble11590
InstantIsValidObjectId
InstantIsValidObjectId;


functionsssymbol:000240
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantIsValidObjectId \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Tests for a valid Object Id.
\par \pard\sb25\sa25\b\f1 function\b0  InstantIsValidObjectId(\b const\b0  AObjectId: \b string\b0 ): Boolean;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use InstantIsValidObjectId to test if a string contains a valid Id for an object.
\par 
\par }
11600
Scribble11600
InstantMatchObject 1
InstantMatchObject,1;


functionsssymbol:000250
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantMatchObject 1 \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11610\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Compares a value to the value of an objects property
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantMatchObject(Obj: TObject; PropName: \b string\b0 ; \b const\b0  KeyValue: Variant; Options: \strike TInstantCompareOptions\strike0\{linkID=12170>main\}): Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantMatchObject to compare a value specified as the KeyValue argument to the value of a property named PropName for the object specified as the AObject argument. The Options argument applies to string property comparisons and specifies if a case insensitive comparison should be performed and if a partial match is sufficient.
\par 
\par }
11610
Scribble11610





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantMatchObject\strike0\{linkID=11600>main\}
\par }
11620
Scribble11620
InstantMatchObject 2
InstantMatchObject,2;


functionsssymbol:000260
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantMatchObject 2  \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11630\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Compares multiple values to the values of an objects properties
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  \strike InstantMatchObject\strike0\{linkID=11600>main\}(Obj: TObject; PropNames: TStrings; \b const\b0  KeyValues: Variant; Options: \strike TInstantCompareOptions\strike0\{linkID=12170>main\}): Boolean;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call \strike InstantMatchObject\strike0\{linkID=11600>main\} to compare values specified as the KeyValues variant array argument to the value of the properties contained in PropNames TStrings object for the object specified as the AObject argument. The Options argument applies to string property comparisons and specifies if a case insensitive comparison should be performed and if a partial match is sufficient.
\par 
\par }
11630
Scribble11630





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantMatchObject\strike0\{linkID=11600>main\}
\par }
11640
Scribble11640
InstantNameToClassName
InstantNameToClassName;


functionsssymbol:000270
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantNameToClassName \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11650\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Converts a name to a class name.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantNameToClassName(\b const\b0  \b Name\b0 : \b string\b0 ): \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantNameToClassName converts a displayable name to a class name by adding the class prefix.
\par 
\par }
11650
Scribble11650





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantClassNameToName\strike0\{linkID=11280>main\}
\par }
11660
Scribble11660
InstantObjectBinaryToText
InstantObjectBinaryToText;


functionsssymbol:000280
Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantObjectBinaryToText \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11670\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Converts the binary representation of an object to a textual representation.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantObjectBinaryToText(Input: TStream; Output: TStream);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantObjectBinaryToText to convert the binary representation of an object to a readable textual format. The Input stream contains the binary representation, and the textual representation is written to the Output stream.
\par InstantObjectBinaryToText is only capable of converting the binary representation of a \strike TInstantObject\strike0\{linkID=7390>main\} instance to a textual representation.
\par 
\par }
11670
Scribble11670





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantObjectTextToBinary\strike0\{linkID=11680>main\}
\par }
11680
Scribble11680
InstantObjectTextToBinary
InstantObjectTextToBinary;


functionsssymbol:000290
Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantObjectTextToBinary \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11690\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Converts the textual representation of an object to a binary representation.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantObjectTextToBinary(Input: TStream; Output: TStream);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantObjectTextToBinary to convert the textual representation of an object to a binary representation. The Input stream contains the textual representation, and the binary representation is written to the Output stream.
\par \strike InstantObjectBinaryToText\strike0\{linkID=11660>main\} is only capable of converting the textual representation of a \strike TInstantObject\strike0\{linkID=7390>main\} instance to a binary representation.
\par 
\par }
11690
Scribble11690





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantObjectBinaryToText\strike0\{linkID=11660>main\}
\par }
11700
Scribble11700
InstantPartStr
InstantPartStr;


functionsssymbol:000300
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantPartStr \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike Example 1\strike0\{linkID=11710>example\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Extracts a part of a delimited string.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantPartStr(Str: \b string\b0 ; \b Index\b0 : Integer; Delimiter: Char): \b string\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantPartStr to extract a part of a string separated by a Delimiter. The Index is one-based and denotes which part of the string should be returned.
\par 
\par }
11710
Scribble11710
InstantPartStr, Example 1
InstantPartStr,Example 1;



Imported
example


FALSE
8
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike InstantPartStr\strike0\{linkID=11700>main\}\{keepn\} 
\par \pard\keep\f1\fs18   InstantPartString('Part1.Part2', 1, '.'); //'Part1'
\par   InstantPartString('Part3.Part4', 2, '.'); //'Part4'
\par 
\par }
11720
Scribble11720
InstantReadObject
InstantReadObject;


functionsssymbol:000310
Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 InstantReadObject \b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11730\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Reads an object from a stream
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantReadObject(Stream: TStream; Format: \strike TInstantStreamFormat\strike0\{linkID=12580>main\}; AObject: TPersistent): TPersistent;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantReadObject to read the object specified by the AObject argument from the stream specified by the Stream argument. If the AObject argument is nil, InstantReadObject creates an object and returns this object as the function result. The Format argument specifies the format of the stream.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  The sfXML format can only be used for instances of \strike TInstantObject\strike0\{linkID=7390>main\} descendants
\par 
\par }
11730
Scribble11730





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantWriteObject\strike0\{linkID=12030>main\}
\par }
11740
Scribble11740
InstantReadObjects
InstantReadObjects;


functionsssymbol:000320
Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantReadObjects \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11750\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Reads objects from a stream
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantReadObjects(Stream: TStream; Format: \strike TInstantStreamFormat\strike0\{linkID=12580>main\}; Objects: TList);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantReadObjects to read objects from the stream specified by the Stream argument into the list specified by the Objects argument. The Format argument specifies the format of the stream.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  The sfXML format can only be used for instances of \strike TInstantObject\strike0\{linkID=7390>main\} descendants
\par 
\par }
11750
Scribble11750





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantWriteObjects\strike0\{linkID=12050>main\}
\par }
11760
Scribble11760
InstantRefreshObjects
InstantRefreshObjects;


functionsssymbol:000330
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantRefreshObjects \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11770\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Refreshes all instances of an array of classes
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantRefreshObjects(Classes: \b array\b0  \b of\b0  TInstantObjectClass; Progress: \strike TInstantProgressEvent\strike0\{linkID=12520>main\}; Connector: \strike TInstantConnector\strike0\{linkID=3770>main\});
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantRefreshObjects to refresh all instances of the Classes in the array using the specified Connector. Assign the progress argument to receive progress information.
\par 
\par }
11770
Scribble11770





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.Refresh\strike0\{linkID=8890>main\}
\par \strike TInstantObject.RefreshAll\strike0\{linkID=8910>main\}
\par }
11780
Scribble11780
InstantRegisterAccessorClass
InstantRegisterAccessorClass;


functionsssymbol:000340
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantRegisterAccessorClass \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11790\}\tab\strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Registers a class derived from TInstantAccessor.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantRegisterAccessorClass(AClass: TInstantAccessorClass);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantRegisterAccessorClass to register an accessor class. The class registration is required to enable access to contained objects in instances of the class associated with a registered accessor class.
\par 
\par }
11790
Scribble11790





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantUnregisterAccessorClass\strike0\{linkID=11970>main\}
\par }
11800
Scribble11800
InstantRegisterClass
InstantRegisterClass;


functionsssymbol:000350
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantRegisterClass \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11810\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Registers a class derived from \strike TInstantObject\strike0\{linkID=7390>main\}.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantRegisterClass(AClass: TInstantObjectClass);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantRegisterClass to register a class. The class registration is required to enable streaming and persistence of instances of the registered class.
\par 
\par }
11810
Scribble11810





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantUnregisterClass\strike0\{linkID=11990>main\}
\par \strike InstantRegisterClasses\strike0\{linkID=11820>main\}
\par \strike TInstantObject\strike0\{linkID=7390>main\}
\par }
11820
Scribble11820
InstantRegisterClasses
InstantRegisterClasses;


functionsssymbol:000360
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantRegisterClasses \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11830\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Registers an array of classes derived from \strike TInstantObject\strike0\{linkID=7390>main\}.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantRegisterClasses(AClasses: \b array\b0  \b of\b0  TInstantObjectClass);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use RegisterClasses to conveniently register an array of classes instead of registering classes individually.
\par 
\par }
11830
Scribble11830





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantUnregisterClasses\strike0\{linkID=12010>main\}
\par \strike InstantRegisterClass\strike0\{linkID=11800>main\}
\par \strike TInstantObject\strike0\{linkID=7390>main\}
\par }
11840
Scribble11840
InstantRightPos
InstantRightPos;


functionsssymbol:000370
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantRightPos \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike Example 1\strike0\{linkID=11850>example\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Returns the starting position of the last occurrence of a substring in a given string.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantRightPos(\b const\b0  SubStr: \b string\b0 ; \b const\b0  Str: \b string\b0 ; IgnoreCase: Boolean): Integer;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantRightPos searches for a substring in a given string. It returns the one-based index of the first character of the last occurrence of the substring in the given string. InstantRightPos is case-sensitive. If the substring is not found, InstantRightPos returns zero. Use the IgnoreCase argument to specify if an case insensitive comparison should be made.
\par 
\par }
11850
Scribble11850
InstantRightPos, Example 1
InstantRightPos,Example 1;



Imported
example


FALSE
12
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike InstantRightPos\strike0\{linkID=11840>main\}\{keepn\} 
\par \pard\keep\f1\fs18 var
\par   Pos: Integer;
\par begin
\par   Pos := InstantRightPos('Inst', 'Install InstantObjects Instantaneously');
\par   ShowMessage(IntToStr(Pos)); //Pos equals 24
\par end;
\par 
\par }
11860
Scribble11860
InstantStrToCharSet
InstantStrToCharSet;


functionsssymbol:000380
Imported



FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 InstantStrToCharSet \b0\fs16  
\par \pard\sb25\tx1435\tx2875\ul See Also\ulnone\{linkID=11870\}\tab\strike Example 1\strike0\{linkID=11880>example\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\tx2875\fs18 Converts a string to a set of char.
\par \pard\sb25\sa25\tx1435\tx2875\b\f1 function\b0  InstantStrToCharSet(\b const\b0  Str: \b string\b0 ): TChars;
\par \pard\sb55\sa25\tx1435\tx2875\b\f0 Description
\par \pard\sb25\sa25\tx1435\tx2875\b0 Use InstantStrToCharSet to convert a string to a set of char. The string may be condensed using ".." to denote ranges.
\par 
\par }
11870
Scribble11870





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantCharSetToStr\strike0\{linkID=11220>main\}
\par }
11880
Scribble11880
InstantStrToCharSet, Example 1
InstantStrToCharSet,Example 1;



Imported
example


FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike InstantStrToCharSet\strike0\{linkID=11860>main\}\{keepn\} 
\par \pard\keep\f1\fs18   InstantStrToCharSet('abc');  //['a'..'c']
\par   InstantStrToCharSet('a..d');  //['a'..'d']
\par   InstantStrToCharSet('1..4a..d');  //['1'..'4','a'..'d']
\par 
\par }
11890
Scribble11890
InstantStrToDate
InstantStrToDate;


functionsssymbol:000390
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 InstantStrToDate \b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11900\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Converts a string to a TDateTime value.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantStrToDate(\b const\b0  Str: \b string\b0 ): TDateTime;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantStrToDate to convert a date value encoded in a string to a TDateTime value. The date string must conform to the date format of ISO 8601.
\par 
\par }
11900
Scribble11900





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantDateFormat\strike0\{linkID=12650>main\}
\par \strike InstantStrToTime\strike0\{linkID=11950>main\}
\par \strike InstantStrToDateTime\strike0\{linkID=11910>main\}
\par }
11910
Scribble11910
InstantStrToDateTime
InstantStrToDateTime;


functionsssymbol:000400
Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantStrToDateTime \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11920\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Converts a string to a TDateTime value.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantStrToDateTime(\b const\b0  Str: \b string\b0 ): TDateTime;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantStrToDateTime to convert a date and time encoded in a string to a TDateTime value. The date-time string must conform to the date and time format of ISO 8601.
\par If S does not contain a valid date, InstantStrToDateTime raises an EInstantConvertionError exception.
\par 
\par }
11920
Scribble11920





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantDateTimeFormat\strike0\{linkID=12670>main\}
\par \strike InstantStrToDate\strike0\{linkID=11890>main\}
\par \strike InstantStrToTime\strike0\{linkID=11950>main\}
\par }
11930
Scribble11930
InstantStrToList
InstantStrToList;


functionsssymbol:000410
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantStrToList \cf1\b0\fs16  
\par \pard\sb25\tx1435\strike Example 1\strike0\{linkID=11940>example\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Adds the individual strings of a delimited string to a TStrings object.
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantStrToList(\b const\b0  Str: \b string\b0 ; List: TStrings; Delimiters: TChars);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantStrToList converts a delimited string to individual strings and adds these strings to a TStrings object.
\par 
\par }
11940
Scribble11940
InstantStrToList, Example 1
InstantStrToList,Example 1;



Imported
example


FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 Example 1 \cf1\b0\fs16 
\par \strike InstantStrToList\strike0\{linkID=11930>main\}\{keepn\} 
\par \pard\keep\f1\fs18 var
\par   S: string;
\par   StringList: TStringList;
\par begin
\par   S := 'String1:String2.String3<String4';
\par   StringList := TStringList.Create;
\par   try
\par     InstantStrToList(S, StringList, [':','.','<','x']);
\par     ShowMessage(IntToStr(StringList.Count)); //StringList.Count equals 4
\par   finally
\par     StringList.Free;
\par   end;
\par end;
\par 
\par }
11950
Scribble11950
InstantStrToTime
InstantStrToTime;


functionsssymbol:000420
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1040\b\f0\fs24 InstantStrToTime \b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11960\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Converts a string to a TDateTime value.
\par \pard\sb25\sa25\tx1435\b\f1 function\b0  InstantStrToTime(\b const\b0  Str: \b string\b0 ): TDateTime;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use \strike InstantStrToDate\strike0\{linkID=11890>main\} to convert a time value encoded in a string to a TDateTime value. The time string must conform to the time format of ISO 8601.
\par 
\par }
11960
Scribble11960





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantTimeFormat\strike0\{linkID=12690>main\}
\par \strike InstantStrToDate\strike0\{linkID=11890>main\}
\par \strike InstantStrToDateTime\strike0\{linkID=11910>main\}
\par }
11970
Scribble11970
InstantUnregisterAccessorClass
InstantUnregisterAccessorClass;


functionsssymbol:000430
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantUnregisterAccessorClass \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=11980\}\tab\strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Unregisters a class derived from TInstantAccessor
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantUnregisterAccessorClass(AClass: TInstantAccessorClass);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantUnregisterAccessorClass to unregister an accessor class that is no longer required.
\par 
\par }
11980
Scribble11980





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantRegisterAccessorClass\strike0\{linkID=11780>main\}
\par }
11990
Scribble11990
InstantUnregisterClass
InstantUnregisterClass;


functionsssymbol:000440
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantUnregisterClass \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12000\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Unregisters a class derived from \strike TInstantObject\strike0\{linkID=7390>main\}
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantUnregisterClass(AClass: TInstantObjectClass);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantUnregisterClass to unregister a class derived from \strike TInstantObject\strike0\{linkID=7390>main\} that is no longer required.
\par 
\par }
12000
Scribble12000





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantRegisterClass\strike0\{linkID=11800>main\}
\par }
12010
Scribble12010
InstantUnregisterClasses
InstantUnregisterClasses;


functionsssymbol:000450
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantUnregisterClasses \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12020\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Unregisters an array of classes derived from \strike TInstantObject\strike0\{linkID=7390>main\}
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantUnregisterClasses(AClasses: \b array\b0  \b of\b0  TInstantObjectClass);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Use InstantUnregisterClasses to conveniently unregister an array of classes that are no longer required, instead of unregistering the classes individually.
\par 
\par }
12020
Scribble12020





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantRegisterClasses\strike0\{linkID=11820>main\}
\par }
12030
Scribble12030
InstantWriteObject
InstantWriteObject;


functionsssymbol:000460
Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantWriteObject \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12040\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Writes an object to a stream
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantWriteObject(Stream: TStream; Format: \strike TInstantStreamFormat\strike0\{linkID=12580>main\}; AObject: TPersistent);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantWriteObject to write the object specified by the AObject argument to the stream specified by the Stream argument. The Format argument specifies the format of the output.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  The sfXML format can only be used for instances of \strike TInstantObject\strike0\{linkID=7390>main\} descendants
\par 
\par }
12040
Scribble12040





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantReadObject\strike0\{linkID=11720>main\}
\par }
12050
Scribble12050
InstantWriteObjects
InstantWriteObjects;


functionsssymbol:000470
Imported
main


FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantWriteObjects \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12060\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Writes objects to a stream
\par \pard\sb25\sa25\tx1435\b\f1 procedure\b0  InstantWriteObjects(Stream: TStream; Format: \strike TInstantStreamFormat\strike0\{linkID=12580>main\}; Objects: TList);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Call InstantWriteObjects to write the objects in the list specified by the Objects argument to the stream specified by the Stream argument. The Format argument specifies the format of the output.
\par \pard\fi-195\li195\sb25\sa25\tx1435\b Note: \b0  The sfXML format can only be used for instances of \strike TInstantObject\strike0\{linkID=7390>main\} descendants
\par 
\par }
12060
Scribble12060





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantReadObjects\strike0\{linkID=11740>main\}
\par }
12070
Scribble12070
TInstantVersion
TInstantVersion;


recordssymbol:000010
Imported
main


FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantVersion \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12080\}\tab\strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 Specifies the version of a file.
\par \pard\sb25\sa25\tx1435\f1 TInstantVersion = \b record\b0 
\par   Build: Word;
\par   Major: Word;
\par   Minor: Word;
\par   Release: Word;
\par   \b end\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Specifies as a record the version of a file.
\par 
\par }
12080
Scribble12080





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantFileVersion\strike0\{linkID=11440>main\}
\par }
12090
Scribble12090
TInstantAddClassFieldDefEvent
TInstantAddClassFieldDefEvent;


typessymbol:000040
Added
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fmodern Courier New;}{\f3\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAddClassFieldDefEvent \cf1\b0\fs16 
\par \cf2\strike Unit: InstantP\lang1033\f1 resentation\cf3\strike0\{linkID=13100>main\}\cf1\lang1040\f0\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for \lang1033\f1 exposer field definition\lang1040\f0  \lang1033\f1 creation\lang1040\f0  events.
\par \pard\sb25\sa25\f2 TInstantAddClassFieldDefEvent = \b procedure\b0  (const FieldName : string; var BreakProcess : boolean) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantAddClassFieldDefEvent is the event type for \lang1033\f1 exposer field definition\lang1040\f0  \lang1033\f1 creation\lang1040\f0  events. The \f3 FieldName \f0 argument contains \lang1033\f1 the field name for the field definition that is to be created\lang1040\f0 .\lang1033\f1  Set the BreakProcess variable to false to prevent this field definition and any further field definitions from being created during the current process.\lang1040\f0 
\par 
\par }
12100
Scribble12100
TInstantAccessMode
TInstantAccessMode;


typessymbol:000010
Imported
main


FALSE
14
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAccessMode \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Determines how an object is being accessed.
\par \pard\sb25\sa25\f1 TInstantAccessMode = (amObject, amContent);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\b0 Specifies how objects are accessed. Either the object itself or objects \lang1033\f2 referenced by its \lang1040\f0 containe\lang1033\f2 r attributes\lang1040\f0  can be accessed.
\par 
\par \pard\tx1980\b Value\lang1033\f2\tab Meaning\lang1040\f0 
\par \b0 amObject\lang1033\f2\tab\lang1040\f0 The object itself is accessed.\b 
\par \b0 amContent\lang1033\f2\tab\lang1040\f0 The contained objects are accessed.\b 
\par \b0 
\par }
12110
Scribble12110
TInstantADOProviderType
TInstantADOProviderType;


typessymbol:000020
Imported
main


FALSE
18
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil Arial;}{\f4\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantADOProviderType \cf1\b0\fs16 
\par \strike Unit: InstantADO\strike0\{linkID=12710>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The ADO provider type
\par \pard\sb25\sa25\f1 TInstantADOProviderType = (ptUnknown, ptMSJet, ptMSSQLServer, ptOracle, ptMySQL, ptIBMDB2);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\b0 TInstantADOProviderType enumerates the types of ADO providers recognized by InstantObjects\lang1033\f2 .\lang1040\f0  
\par 
\par \pard\tx1980\b Value\lang1033\f2\tab\lang1040\f0 Meaning\b0 
\par \f3 ptUnknown\lang1033\tab\lang1040 The provider is not recognized
\par \f0 pt\lang1033\f2 MS\lang1040\f0 Jet\lang1033\f2\tab\lang1040\f0 Microsoft Jet OLE DB Provider
\par ptMSSQLServer\lang1033\f2\tab\lang1040\f0 Microsoft OLE DB Provider for SQL Server
\par ptOracle\lang1033\f2\tab\lang1040\f0 Oracle OLE DB Provider
\par \f4 ptMySQL\lang1033\tab\lang1040 MySQL \f0 Provider
\par \f4 ptIBMDB2\lang1033\tab\lang1040 IBM DB2 \f0 Provider\f4 
\par \pard 
\par }
12120
Scribble12120
TInstantAttributeChangeEvent
TInstantAttributeChangeEvent;


typessymbol:000030
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttributeChangeEvent \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for attribute change notification events.
\par \pard\sb25\sa25\f1 TInstantAttributeChangeEvent = \b procedure\b0  (Sender: \strike TInstantObject\strike0\{linkID=7390>main\}; Attribute: \strike TInstantAttribute\strike0\{linkID=2170>main\}) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantAttributeChangeEvent is the event type for attribute change notification events. The Sender argument contains a reference to the object that the attribute, specified by the Attribute argument, belongs to.
\par 
\par }
12130
Scribble12130
TInstantAttributeType
TInstantAttributeType;


typessymbol:000050
Imported
main


FALSE
25
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantAttributeType \cf1\b0\fs16 
\par \cf2\strike Unit: InstantPersistence\cf3\strike0\{linkID=13050>main\}\{keepn\}\cf1  
\par \pard\sb25\sa85\fs18 Specifies the type of an attribute.
\par \pard\sb25\sa25\f1 TInstantAttributeType = (atUnknown, atInteger, atFloat, atCurrency, atBoolean, atString, atDateTime, atBlob, atMemo, atPart, atReference, atParts, atReferences);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\b0 TInstantAttributeType specifies the type of an attribute. 
\par 
\par \pard\tx1980\b Value\lang1033\f2\tab\lang1040\f0 Meaning\b0 
\par atUnknown\lang1033\f2\tab\lang1040\f0 Unknown or undetermined
\par atInteger\lang1033\f2\tab\lang1040\f0 32-Bit integer attribute
\par atFloat\lang1033\f2\tab\lang1040\f0 Floating-point numeric attribute
\par at\lang1033\f2 Currency\tab Currency \lang1040\f0 attribute
\par atBoolean\lang1033\f2\tab\lang1040\f0 Boolean attribute
\par atString\lang1033\f2\tab\lang1040\f0 Character or string attribute
\par atDateTime\lang1033\f2\tab\lang1040\f0 Date and time attribute
\par atBlob\lang1033\f2\tab\lang1040\f0 Binary Large Object attribute
\par atMemo\lang1033\f2\tab\lang1040\f0 Text memo attribute
\par atPart\lang1033\f2\tab\lang1040\f0 Single object embedding attribute
\par atReference\lang1033\f2\tab\lang1040\f0 Single object reference attribute
\par atParts\lang1033\f2\tab\lang1040\f0 Multiple objects embedding attribute
\par atReferences\lang1033\f2\tab\lang1040\f0 Multiple objects reference attribute
\par \pard 
\par }
12140
Scribble12140
TInstantBDEDriverType
TInstantBDEDriverType;


typessymbol:000060
Imported
main


FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantBDEDriverType \cf1\b0\fs16 
\par \strike Unit: InstantBDE\strike0\{linkID=12760>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The BDE driver type
\par \pard\sb25\sa25\f1 TInstantBDEDriverType = (dtUnknown, dtStandard, dtInterBase, dtMSAccess, dtMSSQLServer, dtOracle, dtDB2);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\b0 TInstantBDEDriverType enumerates the types of BDE drivers recognized by InstantObjects\lang1033\f2 .\lang1040\f0  
\par 
\par \pard\tx1980\b Value\lang1033\f2\tab\lang1040\f0 Meaning\b0 
\par dtUnknown\lang1033\f2\tab\lang1040\f0 The driver is not recognized
\par dtStandard\lang1033\f2\tab\lang1040\f0 STANDARD driver
\par dtInterBase\lang1033\f2\tab\lang1040\f0 INTRBASE driver
\par dtMSAccess\lang1033\f2\tab\lang1040\f0 MSACCESS driver
\par dtMSSQLServer\lang1033\f2\tab\lang1040\f0 MSSQL driver
\par dtOracle\lang1033\f2\tab\lang1040\f0 ORACLE driver
\par \f3 dtDB2\tab IBM DB2 driver\f0 
\par \pard 
\par }
12150
Scribble12150
TInstantCompareObjectsEvent
TInstantCompareObjectsEvent;


typessymbol:000070
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCompareObjectsEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for object comparison events.
\par \pard\sb25\sa25\f1 TInstantCompareObjectsEvent = \b procedure\b0  (Sender: TObject; AObject1, AObject2: TObject; \b var\b0  Compare: Integer) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use TInstantCompareObjectsEvent as the event type for object comparison events. The AObject1 and AObject2 arguments specify the objects that are to be compared. Set the Compare argument to a value less than 0 if AObject1 is less than AObject2. Set Compare to 0 if AObject1 is equivalent to AObject2, and set Compare to a value greater than 0 if AObject1 is greater than AObject2.
\par 
\par }
12160
Scribble12160
TInstantCompareOption
TInstantCompareOption;


typessymbol:000080
Imported
main


FALSE
15
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCompareOption \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies options for a comparison.
\par \pard\sb25\sa25\f1 TInstantCompareOption = (coCaseInsensitive, coPartial);
\par \strike TInstantCompareOptions\strike0\{linkID=12170>main\} = \b set\b0  \b of\b0  TInstantCompareOption;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantCompareOption specifies the options that apply to a comparison.
\par \pard\fi-1980\li1980\tx1980 
\par \pard\tx1980\b Value\lang1033\f2\tab\lang1040\f0 Meaning\b0 
\par coCaseInsensitive\lang1033\f2\tab\lang1040\f0 A case insensitive comparison is performed.
\par coPartial\lang1033\f2\tab\lang1040\f0 A partial match is sufficient.
\par \pard 
\par }
12170
Scribble12170
TInstantCompareOptions
TInstantCompareOptions;


typessymbol:000090
Imported
main


FALSE
15
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCompareOptions \cf1\b0\fs16 
\par \strike Unit: InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies options for a comparison.
\par \pard\sb25\sa25\strike\f1 TInstantCompareOption\strike0\{linkID=12160>main\} = (coCaseInsensitive, coPartial);
\par TInstantCompareOptions = \b set\b0  \b of\b0  \strike TInstantCompareOption\strike0\{linkID=12160>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantCompareOption specifies the options that apply to a comparison.
\par \pard\fi-1980\li1980\tx1980 
\par \pard\tx1980\b Value\lang1033\f2\tab\lang1040\f0 Meaning\b0 
\par coCaseInsensitive\lang1033\f2\tab\lang1040\f0 A case insensitive comparison is performed.
\par coPartial\lang1033\f2\tab\lang1040\f0 A partial match is sufficient.
\par \pard 
\par }
12180
Scribble12180
TInstantConflictAction
TInstantConflictAction;


typessymbol:000100
Imported
main


FALSE
14
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConflictAction \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Specifies how conflicts should be resolved.
\par \pard\sb25\sa25\f1 TInstantConflictAction = (caIgnore, caFail);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\b0 TInstantConflictAction specifies how conflicting updates to an object should be handled. 
\par 
\par \pard\tx1980\b Value\lang1033\f2\tab\lang1040\f0 Meaning\b0 
\par caIgnore\lang1033\f2\tab\lang1040\f0 Conflicts are ignored. The operation is forcefully executed.
\par caFail\lang1033\f2\tab\lang1040\f0 Conflicts result in an error.
\par \pard 
\par }
12190
Scribble12190
TInstantConnectionManagerActionType
TInstantConnectionManagerActionType;


typessymbol:000110
Imported
main


FALSE
21
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManagerActionType \cf1\b0\fs16 
\par \strike Unit: InstantConnectionManager\strike0\{linkID=12860>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Connection manager action types.
\par \pard\sb25\sa25\f1 TInstantConnectionManagerActionType = (atNew, atEdit, atDelete, atRename, atConnect, atDisconnect, atBuild);
\par \strike TInstantConnectionManagerActionTypes\strike0\{linkID=12200>main\} = \b set\b0  \b of\b0  TInstantConnectionManagerActionType;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Defines the actions that can appear in a connection manager.
\par \pard\fi-1980\li1980\tx1980 
\par \pard\tx1980\b Value\lang1033\f2\tab\lang1040\f0 Meaning\b0 
\par atNew\lang1033\f2\tab\lang1040\f0 Allow creating new connections\lang1033\f2 .\lang1040\f0 
\par atEdit\lang1033\f2\tab\lang1040\f0 Allow editing existing connections.
\par atDelete\lang1033\f2\tab\lang1040\f0 Allow deleting connections\lang1033\f2 .\lang1040\f0 
\par atRename\lang1033\f2\tab\lang1040\f0 Allow renaming connections\lang1033\f2 .\lang1040\f0 
\par atConnect\lang1033\f2\tab\lang1040\f0 Allow connecting from within the manager\lang1033\f2 .\lang1040\f0 
\par atDisconnect\lang1033\f2\tab\lang1040\f0 Allow disconnecting from within the manager\lang1033\f2 .\lang1040\f0 
\par atBuild\lang1033\f2\tab\lang1040\f0 Allow building the database via a connection\lang1033\f2 .\lang1040\f0 
\par \pard\fi-1980\li1980\tx1980 
\par \pard 
\par }
12200
Scribble12200
TInstantConnectionManagerActionTypes
TInstantConnectionManagerActionTypes;


typessymbol:000120
Imported
main


FALSE
21
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectionManagerActionTypes \cf1\b0\fs16 
\par \strike Unit: InstantConnectionManager\strike0\{linkID=12860>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Connection manager action types.
\par \pard\sb25\sa25\strike\f1 TInstantConnectionManagerActionType\strike0\{linkID=12190>main\} = (atNew, atEdit, atDelete, atRename, atConnect, atDisconnect, atBuild);
\par TInstantConnectionManagerActionTypes = \b set\b0  \b of\b0  \strike TInstantConnectionManagerActionType\strike0\{linkID=12190>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Defines the actions that can appear in a connection manager.
\par \pard\fi-1980\li1980\tx1980 
\par \pard\tx1980\b Value\lang1033\f2\tab\lang1040\f0 Meaning\b0 
\par atNew\lang1033\f2\tab\lang1040\f0 Allow creating new connections\lang1033\f2 .\lang1040\f0 
\par atEdit\lang1033\f2\tab\lang1040\f0 Allow editing existing connections.
\par atDelete\lang1033\f2\tab\lang1040\f0 Allow deleting connections\lang1033\f2 .\lang1040\f0 
\par atRename\lang1033\f2\tab\lang1040\f0 Allow renaming connections\lang1033\f2 .\lang1040\f0 
\par atConnect\lang1033\f2\tab\lang1040\f0 Allow connecting from within the manager\lang1033\f2 .\lang1040\f0 
\par atDisconnect\lang1033\f2\tab\lang1040\f0 Allow disconnecting from within the manager\lang1033\f2 .\lang1040\f0 
\par atBuild\lang1033\f2\tab\lang1040\f0 Allow building the database via a connection\lang1033\f2 .\lang1040\f0 
\par \pard 
\par 
\par }
12210
Scribble12210
TInstantConnectorClass
TInstantConnectorClass;


typessymbol:000130
Imported
main


FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantConnectorClass \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Provides access to a database.
\par \pard\sb25\sa25\f1 TInstantConnectorClass = \b class\b0  \b of\b0  \strike TInstantConnector\strike0\{linkID=3770>main\};
\par \strike TInstantConnector\strike0\{linkID=3770>main\} = \b class\b0 (TComponent)
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantConnector components are used to gain access to databases. The connector uses components that are specific to the database engine to establish the actual connection. Multiple objects and components can share the connection provided by a single TInstantConnector component.
\par TInstantConnector introduces properties and methods that fall into the following categories:
\par \pard\fi-295\li495\sb25\sa25\tx495\{bmct bm3.BMP\}\tab Connecting and disconnecting to a database
\par \{bmct bm3.BMP\}\tab Transaction control
\par \{bmct bm3.BMP\}\tab Information about the database
\par \{bmct bm3.BMP\}\tab Initialization of a database specific persistence broker
\par \pard\sb25\sa25\tx495 
\par 
\par }
12220
Scribble12220
TInstantContentChangeEvent
TInstantContentChangeEvent;


typessymbol:000140
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantContentChangeEvent \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12230\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 The event type for content change notification events.
\par \pard\sb25\sa25\tx1435\f1 TInstantContentChangeEvent = \b procedure\b0  (Sender: \strike TInstantObject\strike0\{linkID=7390>main\}; Container: \strike TInstantContainer\strike0\{linkID=4300>main\}; ChangeType: \strike TInstantContentChangeType\strike0\{linkID=12240>main\}; \b Index\b0 : Integer; AObject: \strike TInstantObject\strike0\{linkID=7390>main\}) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantContentChangeEvent is the event type for container attribute content change notification events. The Sender argument contains a reference to the object which the changed container, specified by the Container argument, belongs to. The ChangeType specifies the type of change that occurred. The Index argument specifies the index in the containers array of objects where the change occurred. The AObject argument holds a reference to the object for which the change occurred. Please note that this reference may be unassigned.
\par 
\par }
12230
Scribble12230





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.OnBeforeContentChange\strike0\{linkID=9110>main\}
\par \strike TInstantObject.OnAfterContentChange\strike0\{linkID=9080>main\}
\par }
12240
Scribble12240
TInstantContentChangeType
TInstantContentChangeType;


typessymbol:000150
Imported
main


FALSE
16
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang3081\b\f0\fs24 TInstantContentChangeType \b0\fs16  
\par \pard\sb25\tx1435\cf1\ul See Also\cf2\ulnone\{linkID=12250\}\tab\cf1\strike Unit: InstantPersistence\cf2\strike0\{linkID=13050>main\}\{keepn\}\cf0 
\par \pard\sb25\sa85\tx1435\fs18 The types of possible changes that may occur to a container.
\par \pard\sb25\sa25\tx1435\f1 TInstantContentChangeType = (ctAdd, ctRemove, ctReplace, ctClear);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\b0 TInstantContentChangeType specifies the possible change type that can occur to a container. 
\par \fs10 
\par \pard\tx1980\b\fs18 Value\f2\tab Meaning\b0 
\par ctAdd\tab An object has been added or inserted 
\par ctRemove\tab An object has been deleted or removed
\par ctReplace\tab An object has been replaced
\par ctClear\tab The container was cleared 
\par  
\par }
12250
Scribble12250





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContentChangeEvent\strike0\{linkID=12220>main\}
\par }
12260
Scribble12260
TInstantCreateObjectEvent
TInstantCreateObjectEvent;


typessymbol:000160
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantCreateObjectEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type used for object creation events.
\par \pard\sb25\sa25\f1 TInstantCreateObjectEvent = \b procedure\b0  (Sender: TObject; \b var\b0  AObject: TObject) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantCreateObjectEvent is the event type for object creation events. The Sender argument contains the object that request an object to be created, and the AObject argument should be assigned to hold the created object.
\par 
\par }
12270
Scribble12270
TInstantDataTypes
TInstantDataType;TInstantDataTypes;


typessymbol:000170
Imported
main


FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantDataTypes \cf1\b0\fs16 
\par \cf2\strike Unit: InstantPersistence\cf3\strike0\{linkID=13050>main\}\{keepn\}\cf1  
\par \pard\sb25\sa85\fs18 Specifies the datatype of fields in tables
\par \pard\sb25\sa25\f1 TInstantDataType = (dtInteger, dtFloat, dtCurrency, dtBoolean, dtString, dtMemo, dtDateTime, dtBlob);
\par TInstantDataTypes = set of TInstantDataType;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantDataType specifies the datatype of fields in tables.
\par 
\par }
12280
Scribble12280
TInstantErrorAction
TInstantErrorAction;


typessymbol:000180
Imported
main


FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantErrorAction \cf1\b0\fs16 
\par \pard\sb25\tx1435\cf2\ul See Also\cf3\ulnone\{linkID=12290\}\cf1\tab\cf2\strike Unit: InstantPersistence\cf3\strike0\{linkID=13050>main\}\{keepn\}\cf1  
\par \pard\sb25\sa85\tx1435\fs18 Defines actions used in error handlers.
\par \pard\sb25\sa25\tx1435\f1 TInstantErrorAction = (eaRetry, eaIgnore, eaError, eaRevert, eaCancel);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\b0 The TInstantErrorAction type defines the possible values for actions used in error handlers.\lang1033\f2 
\par 
\par \lang1040\f0 Although the exact interpretation of the value depends on what kind of operation is performed, their general meaning is described in the following table: 
\par 
\par \pard\tx1980\b Value\lang1033\f2\tab Meaning\lang1040\b0\f3 
\par \f0 eaRetry\lang1033\f2\tab\lang1040\f0 Retry the operation.\f3 
\par \f0 eaIgnore\lang1033\f2\tab\lang1040\f0 Retry the operation and ignore errors.\f3 
\par \f0 eaError\lang1033\f2\tab\lang1040\f0 Fail.\f3 
\par \f0 eaRevert\lang1033\f2\tab\lang1040\f0 Revert the operation.\f3 
\par \f0 eaCancel\lang1033\f2\tab\lang1040\f0 Cancel the operation.\f3 
\par \pard\fi-1980\li1980\tx1980\f0 
\par }
12290
Scribble12290





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.OnError\strike0\{linkID=9150>main\}
\par \strike TInstantObject.HandleError\strike0\{linkID=8740>main\}
\par }
12300
Scribble12300
TInstantErrorEvent
TInstantErrorEvent;


typessymbol:000190
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantErrorEvent \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for error events.
\par \pard\sb25\sa25\f1 TInstantErrorEvent = \b procedure\b0  (Sender: TObject; OperationType: \strike TInstantOperationType\strike0\{linkID=12490>main\}; E: Exception; \b var\b0  Action: \strike TInstantErrorAction\strike0\{linkID=12280>main\}) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantErrorEvent is the event type for error events. The Sender argument contains a reference to the object for which the operation failed. The OperationType argument specifies during which kind of operation the error occurred. The E argument contains the causing Exception object. Use the Action argument to specify what kind of action should be performed in response to the Error.
\par 
\par }
12310
Scribble12310
TInstantExplorerLayout
TInstantExplorerLayout;


typessymbol:000200
Imported
main


FALSE
16
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang3081\b\f0\fs24 TInstantExplorerLayout \b0\fs16 
\par \cf1\strike Unit: InstantExplorer\cf2\strike0\{linkID=12950>main\}\{keepn\}\cf0 
\par \pard\sb25\sa85\fs18 Determines the layout of the explorer.
\par \pard\sb25\sa25\f1 TInstantExplorerLayout = (loTreeOnly, loDetailOnly, loVertical, loHorizontal);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Layout is used to specify the extent and arrangement of the explorer.
\par \fs10 
\par \pard\tx1980\b\fs18 Value\f2\tab Meaning\b0 
\par loTreeOnly\tab Show tree only
\par loDetailOnly\tab Show detail only
\par loVertical\tab Show tree on top of details
\par loHorizontal\tab Show tree left to details 
\par  
\par }
12320
Scribble12320
TInstantExplorerNodeType
TInstantExplorerNodeType;


typessymbol:000210
Imported
main


FALSE
18
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorerNodeType \cf1\b0\fs16 
\par \strike Unit: InstantExplorer\strike0\{linkID=12950>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Defines node types of an explorer.
\par \pard\sb25\sa25\f1 TInstantExplorerNodeType = (ntProperty, ntObject, ntContainer);
\par \strike TInstantExplorerNodeTypes\strike0\{linkID=12330>main\} = \b set\b0  \b of\b0  TInstantExplorerNodeType;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Defines the various node types used by \strike TInstantExplorer\strike0\{linkID=6230>main\}.
\par \pard\fi-1980\li1980\tx1980\tab\tab 
\par \pard\tx1980\b Value\lang1033\f2\tab\lang1040\f0 Meaning\b0\f3 
\par \f0 ntProperty\lang1033\f2\tab\lang1040\f0 Node represents a property of an object
\par ntObject\lang1033\f2\tab\lang1040\f0 Node represents an object
\par ntContainer\lang1033\f2\tab\lang1040\f0 Node represents a container attribute
\par 
\par \pard\fi-1980\li1980\tx1980 
\par \f3 
\par }
12330
Scribble12330
TInstantExplorerNodeTypes
TInstantExplorerNodeTypes;


typessymbol:000220
Imported
main


FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantExplorerNodeTypes \cf1\b0\fs16 
\par \strike Unit: InstantExplorer\strike0\{linkID=12950>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Defines node types of an explorer.
\par \pard\sb25\sa25\strike\f1 TInstantExplorerNodeType\strike0\{linkID=12320>main\} = (ntProperty, ntObject, ntContainer);
\par TInstantExplorerNodeTypes = \b set\b0  \b of\b0  \strike TInstantExplorerNodeType\strike0\{linkID=12320>main\};
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Defines the various node types used by \strike TInstantExplorer\strike0\{linkID=6230>main\}.
\par \pard\fi-1980\li1980\tx1980\tab\tab 
\par \pard\tx1980\b Value\lang1033\f2\tab\lang1040\f0 Meaning\b0\f3 
\par \f0 ntProperty\lang1033\f2\tab\lang1040\f0 Node represents a property of an object
\par ntObject\lang1033\f2\tab\lang1040\f0 Node represents an object
\par ntContainer\lang1033\f2\tab\lang1040\f0 Node represents a container attribute
\par 
\par \pard 
\par }
12340
Scribble12340
TInstantExposerOptions
TInstantExposerOption;TInstantExposerOptions;


typessymbol:000240
Modified
main


FALSE
18
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fnil Arial;}{\f3\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang3081\b\f0\fs24 TInstantExposerOptions\b0\fs16 
\par \pard\sb25\tx1435\cf1\ul See Also\cf2\ulnone\{linkID=12350\}\tab\cf1\strike Unit: InstantPresentation\cf2\strike0\{linkID=13100>main\}\{keepn\}\cf0 
\par \pard\sb25\sa85\tx1435\fs18 Specifies options for an exposer.
\par \pard\fi-2620\li2620\sb25\sa25\f1 TInstantExposerOption = (eoAutoApply, eoAutoRemember, eoNotDisposeReferences, eoDeferInsert, eoSyncEdit);
\par \pard\sb25\sa25\tx1435 TInstantExposerOptions = \b set\b0  \b of\b0  TInstantExposerOption;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantExposerOptions specifies a set of options for an exposer that modifies its behavior.
\par \pard\sb25\sa25\f2\fs10 
\par \pard\fi-2440\li2440\sb25\sa25\tx2440\b\fs18 Value\tab Description\tab\b0 
\par eoAutoApply\tab Changes \f0 made to the exposer's \cf1\strike Subject\cf2\strike0\{linkID=5150>main\}\cf0  or objects contained in the \cf1\strike Subject\cf2\strike0\{linkID=5150>main\}\cf0  should be applied automatically. For \cf1\strike TInstantObject\cf2\strike0\{linkID=7390>main\}\cf0  descendants this means that the persistent storage is updated for each changed object. Deleted objects will be disposed from the persistent storage and new objects will be added.
\par eoAutoRemember\tab Automatically applies \cf1\strike Remember\cf2\strike0\{linkID=5430>main\}\cf0  and \cf1\strike Revert\cf2\strike0\{linkID=5480>main\}\cf0  functionality to the \f3 exposer's \cf1\strike\f0 Subject\cf2\strike0\{linkID=5150>main\}\cf0 .
\par eoNotDisposeReferences\tab Do not \cf1\strike Dispose\cf2\strike0\{linkID=8570>main\}\cf0  referenced objects of References attributes when deleting the \cf1\strike CurrentObject\cf2\strike0\{linkID=4920>main\}\cf0  of the exposer. This option is only effective when the exposer is in amContent \cf1\strike Mode\cf2\strike0\{linkID=5020>main\}\cf0  and its \cf1\strike Subject\cf2\strike0\{linkID=5150>main\}\cf0  is a References attribute.
\par eoDeferInsert\tab Insertion of the object in the of the container of the Subject is deferred. It specifies that objects that are appended or inserted are not applied to the container of the \cf1\strike Subject\cf2\strike0\{linkID=5150>main\}\cf0  until a row is posted. This option is only effective when the exposer is in amContent \cf1\strike\f3 Mode\cf2\strike0\f0\{linkID=5020>main\}\cf0 .
\par eoSyncEdit\tab Allows a buffer update if the exposer's \cf1\strike Subject\cf2\strike0\{linkID=5150>main\}\cf0  is changed or refreshed and the exposer is in Edit mode.\f2 
\par \f0 
\par }
12350
Scribble12350





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantCustomExposer.Options\strike0\{linkID=5110>main\}
\par }
12360
Scribble12360
TInstantFieldDefEvent
TInstantFieldDefEvent;


typessymbol:000250
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFieldDefEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for field definition initialization events.
\par \pard\sb25\sa25\f1 TInstantFieldDefEvent = \b procedure\b0  (Sender: TObject; FieldDef: TFieldDef) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use TInstantFieldDefEvent as the event type for field definition initialization events. The Sender argument specifies the holder of the TFieldDef object specified by the FieldDef argument that should be initialized.
\par 
\par }
12370
Scribble12370
TInstantFieldErrorEvent
TInstantFieldErrorEvent;


typessymbol:000260
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFieldErrorEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for field errors.
\par \pard\sb25\sa25\f1 TInstantFieldErrorEvent = \b procedure\b0  (Sender: TObject; E: Exception; Field: TField; Value: Variant; \b Write\b0 : Boolean; \b var\b0  Handled: Boolean) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use TInstantFieldErrorEvent as the event type for field error events. The Sender argument specifies the holder of the field specified by the Field argument for which the error occurred. The E argument specifies the causing exception. The Value argument specifies the erroneous value that is either read from or written to the field. If the error is caused by writing the value to the field, the Write argument is True. Otherwise the Write argument is false.
\par 
\par }
12380
Scribble12380
TInstantFieldEvent
TInstantFieldEvent;


typessymbol:000270
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantFieldEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for field events.
\par \pard\sb25\sa25\f1 TInstantFieldEvent = \b procedure\b0  (Sender: TObject; Field: TField) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 Use TInstantFieldEvent as the event type for field events. The Sender argument specifies the holder of the field specified by the Field argument.
\par 
\par }
12390
Scribble12390
TInstantFieldOptions
TInstantFieldOption;TInstantFieldOptions;


typessymbol:000230
Added
main


FALSE
17
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss\fcharset0 Arial;}{\f1\fswiss Arial;}{\f2\fmodern Courier New;}{\f3\fmodern\fcharset0 Courier New;}{\f4\fnil\fcharset0 Arial;}{\f5\fnil Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1033\b\f0\fs24 TInstantFieldOptions\lang3081\b0\f1\fs16 
\par \pard\sb25\tx1435\cf1\ul See Also\cf2\ulnone\{linkID=12400\}\tab\cf1\strike Unit: InstantPresentation\cf2\strike0\{linkID=13100>main\}\cf0\{keepn\}
\par \pard\sb25\sa85\tx1435\cf3\lang1033\f0\fs18 Defines additional default field creation\lang1040\f1  \cf0\lang3081 options for an exposer.
\par \pard\fi-2620\li2620\sb25\sa25\f2 TInstant\lang1033\f3 Field\lang3081\f2 Option = (\lang1033\f3 f\lang3081\f2 o\lang1033\f3 Objects\lang3081\f2 , \lang1033\f3 f\lang3081\f2 o\lang1033\f3 Thorough\lang3081\f2 , \lang1033\f3 foRecurseNesting\lang3081\f2 );
\par \pard\sb25\sa25\tx1435 TInstant\lang1033\f3 Field\lang3081\f2 Options = \b set\b0  \b of\b0  TInstant\lang1033\f3 Field\lang3081\f2 Option;
\par \pard\sb55\sa25\tx1435\b\f1 Description
\par \pard\b0\f4 An exposer will create one default field for each s\cf3\lang1040\f1 imple published \cf0\lang3081\f4 property of the exposed object. \f1 TInstant\lang1033\f0 Field\lang3081\f1 Options specifies \f4 what kinds of additional default fields are created by \f1 an exposer\lang1033\f0  for published properties\lang3081\f1 .
\par \pard\sb25\sa25\f5\fs10 
\par \pard\fi-2000\li2000\sb25\sa25\tx1980\b\fs18 Value\tab\lang1033\f4 Meaning\lang3081\f5\tab\b0 
\par \lang1033\f4 f\lang3081 o\lang1033 Objects\lang3081\f5\tab\lang1033\f4 Create fields for published object properties of the exposed object\lang3081\f1 .
\par \lang1033\f4 f\lang3081 o\lang1033 Thorough\lang3081\f1\tab\lang1033\f0 Create fields for \cf3\lang1040\f1 published properties of the objects assigned to the object properties\cf0\lang3081 .
\par \lang1033\f4 foRecurseNesting\lang3081\f1\tab\lang1033\f0 Persistent fields\f4  \f0 of \f4 object container properties \f0 created at design time are available as \cf3\lang1040\f1 nested datasets\cf0\lang1033\f0 . The contained objects can also have \f4 published \f0 object container properties that were not persisted at design time. Dataset fields for these object container\cf3\lang1040\f1  properties\lang1033\f0  can be made available a\cf0 t run time by using this option, which recursively creates dataset fields for the \f4 published \f0 object container\cf3\lang1040\f1  properties of \lang1033\f0 contained\lang1040\f1  objects assigned to the\lang1033\f0 se\lang1040\f1  properties\cf0\lang1033\f0 . This option does not affect the design time behaviour of an exposer.\lang3081\f1 
\par \pard\fi-2440\li2440\sb25\sa25\tx2440 
\par \pard\sb25\sa25\lang1033\f4 At design time the f\lang3081 o\lang1033 Objects and f\lang3081 o\lang1033 Thorough options affect the kind of fields available for selection as persistent fields. If no persistent fields are declared for the exposer these two field options determine the availability of fields during run time. When persistent fields are declared for the exposer these two field options do not affect the availability of fields during run time. If access to objects within published container properties of persisted fields is required during run time then use the foRecurseNesting option .\lang3081\f1 
\par }
12400
Scribble12400





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \cf2\strike TInstantCustomExposer.FieldOptions\cf3\strike0\{linkID=4930>main\}
\par \cf2\strike TInstantCustomExposer.OnAddClassFieldDef\cf3\strike0\{linkID=5510>main\}\cf2\strike 
\par }
12410
Scribble12410
TInstantGetDataSetEvent
TInstantGetDataSetEvent;


typessymbol:000280
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantGetDataSetEvent \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12420\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 The event type for dataset request events.
\par \pard\sb25\sa25\tx1435\f1 TInstantGetDataSetEvent = \b procedure\b0  (Sender: TObject; \b const\b0  CommandText: \b string\b0 ; \b var\b0  DataSet: TDataset) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0\strike TInstantInitDataSetEvent\strike0\{linkID=12440>main\} is the event type for dataset request events. The Sender argument contains a reference to the object requesting a TDataSet. The dataset must be assigned to the DataSet argument. The TableName specifies the name of the table which the dataset object is associated.
\par 
\par }
12420
Scribble12420





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantInitDataSetEvent\strike0\{linkID=12440>main\}
\par }
12430
Scribble12430
TInstantIncludeFieldEvent
TInstantIncludeFieldEvent;


typessymbol:000290
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantIncludeFieldEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for field inclusion events.
\par \pard\sb25\sa25\f1 TInstantIncludeFieldEvent = \b procedure\b0  (Sender: TObject; \b const\b0  FieldName: \b string\b0 ; \b var\b0  Include: Boolean) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantIncludeFieldEvent is the event type for field inclusion events. The Sender argument specifies the holder of a field with the name specified by the FieldName argument for which it should be determined whether it is to be included. If the field should be included set the Include argument to True. Otherwise set the Include argument to False.
\par 
\par }
12440
Scribble12440
TInstantInitDataSetEvent
TInstantInitDataSetEvent;


typessymbol:000300
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantInitDataSetEvent \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12450\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 The event type for dataset initialization events.
\par \pard\sb25\sa25\tx1435\f1 TInstantInitDataSetEvent = \b procedure\b0  (Sender: TObject; \b const\b0  CommandText: \b string\b0 ; DataSet: TDataSet) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 TInstantInitDataSetEvent is the event type for dataset initialization events. The Sender argument contains a reference to the object requesting a TDataSet object specified by the DataSet argument to be initialized. The TableName specifies the name of the table which the dataset object is associated.
\par 
\par }
12450
Scribble12450





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantGetDataSetEvent\strike0\{linkID=12410>main\}
\par }
12460
Scribble12460
TInstantLimitObjectsEvent
TInstantLimitObjectsEvent;


typessymbol:000310
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantLimitObjectsEvent \cf1\b0\fs16 
\par \strike Unit: InstantPresentation\strike0\{linkID=13100>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for object limitation events.
\par \pard\sb25\sa25\f1 TInstantLimitObjectsEvent = \b procedure\b0  (Sender: TObject; AObject: TObject; \b var\b0  Accept: Boolean) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantLimitObjectsEvent is the event type for object limitation events. The Sender argument specifies the object for which it should be determined whether it should accept or reject the object specified by the AObject argument. If It is to be accepted, set the Accept argument to True. Otherwise set the Accept argument to False.
\par 
\par }
12470
Scribble12470
TInstantNotifyEvent
TInstantNotifyEvent;


typessymbol:000320
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantNotifyEvent \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 TInstantNotifyEvent is the event type for simple notification events.
\par \pard\sb25\sa25\f1 TInstantNotifyEvent = \b procedure\b0  (Sender: \strike TInstantObject\strike0\{linkID=7390>main\}) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantNotifyEvent is the type for events that require no specific arguments except a reference to the object to which the event occurred. This object is specified by the Sender argument.
\par 
\par }
12480
Scribble12480
TInstantObjectNotifyEvent
TInstantObjectNotifyEvent;


typessymbol:000330
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantObjectNotifyEvent \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 TInstantObjectNotifyEvent is used for notification.
\par \pard\sb25\sa25\f1 TInstantObjectNotifyEvent = \b procedure\b0  (Sender: \strike TInstantObject\strike0\{linkID=7390>main\}; Notification: TInstantObjectNotification) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 The TInstantObjectNotifyEventis the type for events that are used to notify about object events.
\par 
\par }
12490
Scribble12490
TInstantOperationType
TInstantOperationType;


typessymbol:000340
Imported
main


FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantOperationType \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 Indicates the type an operation.
\par \pard\sb25\sa25\f1 TInstantOperationType = (otNone, otCreate, otStore, otRetrieve, otRefresh, otDispose);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\fi-1980\li1980\tx1980\b0 TInstantOperationType indicates the type operation that occurred to an object. 
\par \b 
\par \pard\tx1980 Operation Type\lang1033\f2\tab\lang1040\f0 Operation\b0\f3 
\par \f0 otNone\lang1033\f2\tab\lang1040\f0 No operation\f3 
\par \f0 otCreate\lang1033\f2\tab\lang1040\f0 The object was created\f3 
\par \f0 otStore\lang1033\f2\tab\lang1040\f0 The object was stored\f3 
\par \f0 otRetrieve\lang1033\f2\tab\lang1040\f0 The object was retrieved\f3 
\par \f0 otRefresh\lang1033\f2\tab\lang1040\f0 The object was refreshed\f3 
\par \f0 otDispose\lang1033\f2\tab\lang1040\f0 The object was disposed\f3 
\par \pard\fi-1980\li1980\tx1980 
\par 
\par }
12500
Scribble12500
TInstantPersistence
TInstantPersistence;


typessymbol:000350
Imported
main


TRUE
15
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil\fcharset0 Courier New;}{\f3\fmodern Courier New;}{\f4\fnil Arial;}{\f5\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantPersistence \cf1\b0\fs16 
\par \cf2\strike Unit: Instant\lang1033\f1 Types\cf3\strike0\{linkID=13140>main\}\cf1\lang1040\f0\{keepn\} 
\par \pard\sb25\sa85\fs18 Indicates the type \lang1033\f1 of persistence for instances of a class\lang1040\f0 .
\par \pard\sb25\sa25\lang3081\f2 TInstantPersistence\lang1040  \f3 = (peEmbedded, peStored);
\par \pard\sb55\sa25\b\f0 Description
\par \pard\b0 TInstantPersistence\lang1033\f1  \lang1040\f0 indicates the type \lang1033\f1 of persistence for the instances of a class\lang1040\f0 .
\par \pard\fi-1980\li1980\tx1980\b 
\par Operation Type\lang1033\f1\tab\lang1040\f0 Operation\b0\f4 
\par \f5 peEmbedded\lang1033\tab\f1 I\lang1040\f0 nstance\lang1033\f1 s\lang1040\f0  can exist in the database only as \lang1033\f1 an attribute\lang1040\f0  of \lang1033\f1 its owner, usually in a BLOB type column in the database .\lang1040\f0  \f5 
\par peStored\lang1033\tab\lang1040\f0 Instances can be \lang1033\f1 independently \lang1040\f0 stored in and retrieved from \lang1033\f1 the database\lang1040\f0 .\f5 
\par \f4 
\par 
\par }
12510
Scribble12510
TInstantProcessObjectEvent
TInstantProcessObjectEvent;


typessymbol:000360
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantProcessObjectEvent \cf1\b0\fs16 
\par \strike Unit: InstantClasses\strike0\{linkID=12820>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for object processing events.
\par \pard\sb25\sa25\f1 TInstantProcessObjectEvent = \b procedure\b0  (Sender: TObject; AObject: TPersistent) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantProcessObjectEvent is the event type for object processing events. The Sender argument contains a reference to the processing object. The AObject argument contains a reference to the object being processed.
\par 
\par }
12520
Scribble12520
TInstantProgressEvent
TInstantProgressEvent;


typessymbol:000370
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantProgressEvent \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for progress events.
\par \pard\sb25\sa25\f1 TInstantProgressEvent = \b procedure\b0  (Sender: TObject; Count: Integer; \b var\b0  Continue: Boolean) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 TInstantProgressEvent is the event type for progress events. The Sender argument specifies the object to which the progress occurs. The Count argument specifies the progress in percent. Use the Continue argument to specify if the process triggering the event should continue.
\par 
\par }
12530
Scribble12530
TInstantSchemeEvent
TInstantSchemeEvent;


typessymbol:000380
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSchemeEvent \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The event type for database-build related events.
\par \pard\sb25\sa25\f1 TInstantSchemeEvent = \b procedure\b0  (Sender: TObject; Scheme: TInstantScheme) \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0\strike TInstantAttributeChangeEvent\strike0\{linkID=12120>main\} is the event type for database-build related events. The Sender argument contains a reference to the object which attempts to build a database and the Scheme argument specifies the database scheme that is used.
\par 
\par }
12540
Scribble12540
TInstantSortCompare
TInstantSortCompare;


typessymbol:000390
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantSortCompare \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12550\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 Prototype of function used to Compares objects
\par \pard\sb25\sa25\tx1435\f1 TInstantSortCompare = \b function\b0  (Holder, Obj1, Obj2: \strike TInstantObject\strike0\{linkID=7390>main\}): Integer \b of\b0  \b object\b0 ;
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 Implement a function compatible with TInstantSortCompare to use for comparison of objects. The function is expected to return < 0 if Obj1 is less and Obj2, 0 if they are equal and > 0 if Obj1 is greater than Obj2. The Holder argument specifies the context of the comparison in terms of another object.
\par 
\par }
12550
Scribble12550





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantContainer.Sort\strike0\{linkID=4660>main\}
\par }
12560
Scribble12560
TInstantStorageKind
TInstantStorageKind;


typessymbol:000400
Imported
main


TRUE
14
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fmodern Courier New;}{\f3\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang3081\b\f0\fs24 TInstantStorageKind  \b0\fs16 
\par \pard\sb25\tx1435\cf1\ul See Also\cf2\ulnone\{linkID=12570\}\tab\cf1\strike Unit: Instant\lang1033\f1 Types\cf2\strike0\{linkID=13140>main\}\lang3081\f0\{keepn\}\cf0 
\par \pard\sb25\sa85\tx1435\fs18 The types of \lang1033\f1 persistence table mapping options for Part, Parts and References class attributes\lang3081\f0 .
\par \pard\sb25\sa25\tx1435\f2 TInstantStorageKind = (skEmbedded, skExternal);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa85\tx1435\b0 TInstantStorageKind specifies the  type of \lang1033\f1 persistence table mapping for Part, Parts and References class attributes\lang3081\f0 . 
\par \pard\fs10 
\par \pard\tx1980\b\fs18 Value\f1\tab Meaning\b0 
\par \f3 skEmbedded\tab The atrribute value storage occurs within the table of its owning class; usually in a BLOB type column.
\par skExternal\tab The atrribute value storage is mapped externally to the table of its owning class.
\par \f1  
\par }
12570
Scribble12570





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \cf2\strike External Storage of Attributes\cf3\strike0\{linkID=220>main\}\cf1 
\par }
12580
Scribble12580
TInstantStreamFormat
TInstantStreamFormat;


typessymbol:000410
Imported
main


FALSE
13
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantStreamFormat\cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12590\}\tab\strike Unit: InstantClasses\strike0\{linkID=12820>main\}\cf0\b\fs24  \cf1\b0\fs16\{keepn\}
\par \pard\sb25\sa85\tx1435\fs18 The possible stream formats
\par \pard\sb25\sa25\tx1435\f1 TInstantStreamFormat = (sfBinary, sfXML);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \b0 TInstantStreamFormat specifies the possible stream formats.
\par 
\par \pard\sb55\sa25\tx1980\b\f2 Value\tab Meaning
\par \b0 sfBinary\tab The stream contains data in binary format
\par sfXML\tab The stream contains data in the XML format
\par }
12590
Scribble12590





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantWriteObject\strike0\{linkID=12030>main\}
\par \strike InstantReadObject\strike0\{linkID=11720>main\}
\par }
12600
Scribble12600
TInstantVerificationResult
TInstantVerificationResult;


typessymbol:000420
Imported
main


FALSE
18
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 TInstantVerificationResult \b0\fs16  
\par \pard\sb25\tx1435\cf1\ul See Also\cf2\ulnone\{linkID=12610\}\tab\cf1\strike Unit: InstantPersistence\cf2\strike0\{linkID=13050>main\}\{keepn\}\cf0 
\par \pard\sb25\sa85\tx1435\fs18 Defines result of a verification operation.
\par \pard\sb25\sa25\tx1435\f1 TInstantVerificationResult = (vrOk, vrCancel, vrAbort, vrError);
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 The TInstantVerificationResult type defines the possible values for verification of operations.
\par 
\par \pard Although the exact interpretation of the value depends on what kind of operation is performed, their general meaning is described in the following table: 
\par \fs10 
\par \pard\tx1980\b\fs18 Value\f2\tab Meaning\b0 
\par vrOk\tab The operation may be performed
\par vrCancel\tab The operation must be canceled
\par vrAbort\tab The operation must be aborted
\par vrError\tab The operation must be terminated with an exception
\par 
\par }
12610
Scribble12610





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.VerifyOperation\strike0\{linkID=9060>main\}
\par }
12620
Scribble12620
InstantAttributePrefix
InstantAttributePrefix;


constssymbol:000010
Imported
main


FALSE
10
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantAttributePrefix \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12630\}\tab\strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\tx1435\fs18 The prefix used for attribute fields.
\par \pard\sb25\sa25\tx1435\f1 InstantAttributePrefix: \b string\b0   = '_';
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantAttributePrefix is the prefix used for attribute fields. The value can be changed if another prefix is required.
\par 
\par }
12630
Scribble12630





Imported



FALSE
6
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike TInstantObject.AttributeByName\strike0\{linkID=8140>main\}
\par }
12640
Scribble12640
InstantClassPrefix
InstantClassPrefix;


constssymbol:000020
Imported
main


FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantClassPrefix \cf1\b0\fs16 
\par \strike Unit: InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb25\sa85\fs18 The prefix used for classes.
\par \pard\sb25\sa25\f1 InstantClassPrefix: \b string\b0   = 'T';
\par \pard\sb55\sa25\b\f0 Description
\par \pard\sb25\sa25\b0 InstantClassPrefix is the prefix used for classes. The value can be changed if another prefix is required.
\par 
\par }
12650
Scribble12650
InstantDateFormat
InstantDateFormat;


constssymbol:000030
Imported
main


FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDateFormat \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12660\}\tab\strike Unit: InstantConsts\strike0\{linkID=12890>main\}\{keepn\} 
\par \pard\sb25\sa25\tx1435\f1\fs18 InstantDateFormat = 'yyyymmdd';
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantDateFormat is the date format string. It complies with the date format of ISO 8601.
\par 
\par }
12660
Scribble12660





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantTimeFormat\strike0\{linkID=12690>main\}
\par \strike InstantDateTimeFormat\strike0\{linkID=12670>main\}
\par }
12670
Scribble12670
InstantDateTimeFormat
InstantDateTimeFormat;


constssymbol:000040
Imported
main


FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDateTimeFormat \cf1\b0\fs16  
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12680\}\tab\strike Unit: InstantConsts\strike0\{linkID=12890>main\}\{keepn\}
\par \pard\sb25\sa25\tx1435\f1\fs18 InstantDateTimeFormat = \strike InstantDateFormat\strike0\{linkID=12650>main\} + \strike InstantTimeFormat\strike0\{linkID=12690>main\};
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantDateTimeFormat is the date and time format string. It complies with the date and time format of ISO 8601. InstantDateTimeFormat is use to convert TDateTime values to strings.
\par 
\par }
12680
Scribble12680





Imported



FALSE
8
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantDateFormat\strike0\{linkID=12650>main\}
\par \strike InstantTimeFormat\strike0\{linkID=12690>main\}
\par \strike InstantDateTimeToStr\strike0\{linkID=11350>main\}
\par }
12690
Scribble12690
InstantTimeFormat
InstantTimeFormat;


constssymbol:000050
Imported
main


FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantTimeFormat \cf1\b0\fs16 
\par \pard\sb25\tx1435\ul See Also\ulnone\{linkID=12700\}\tab\strike Unit: InstantConsts\strike0\{linkID=12890>main\}\{keepn\} 
\par \pard\sb25\sa25\tx1435\f1\fs18 InstantTimeFormat = 'hhnnsszzz';
\par \pard\sb55\sa25\tx1435\b\f0 Description
\par \pard\sb25\sa25\tx1435\b0 InstantTimeFormat is the time format string. It complies with the time format of ISO 8601.
\par 
\par }
12700
Scribble12700





Imported



FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb55\sa25\lang1040\b\f0\fs24 See Also
\par \pard\li95\sb25\sa25\cf1\b0\fs18 
\par \strike InstantDateFormat\strike0\{linkID=12650>main\}
\par \strike InstantDateTimeFormat\strike0\{linkID=12670>main\}
\par }
12710
Scribble12710
InstantADO.pas
InstantADO.pas;


unitssymbol:000010
Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantADO.pas \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike Classes\strike0\{linkID=12720>nav\}\tab\strike Types\strike0\{linkID=12730>nav\}\{keepn\} 
\par \pard\sb25\sa25\tx1435\fs18 InstantObjects ADO support.
\par 
\par }
12720
Scribble12720





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantADO\strike0\{linkID=12710>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantADO
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantADOConnector\strike0\{linkID=1900>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
12730
Scribble12730





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantADO\strike0\{linkID=12710>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantADO
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantADOProviderType\strike0\{linkID=12110>main\}
\par \pard\li195\sb15\sa25\fs16 The ADO provider type
\par 
\par }
12740
Scribble12740
InstantADS.pas
InstantADS.pas;


unitssymbol:000020
Imported
main


FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantADS.pas \cf1\b0\fs16 
\par \strike Classes\strike0\{linkID=12750>nav\}\{keepn\} 
\par \pard\sb25\sa25\fs18 InstantObjects Advantage Database Server support.
\par 
\par }
12750
Scribble12750





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantADS\strike0\{linkID=12740>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantADS
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantADSConnector\strike0\{linkID=2040>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
12760
Scribble12760
InstantBDE.pas
InstantBDE.pas;


unitssymbol:000030
Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantBDE.pas \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike Classes\strike0\{linkID=12770>nav\}\tab\strike Types\strike0\{linkID=12780>nav\}\{keepn\} 
\par \pard\sb25\sa25\tx1435\fs18 InstantObjects BDE support.
\par 
\par }
12770
Scribble12770





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantBDE\strike0\{linkID=12760>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantBDE
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantBDEConnector\strike0\{linkID=2560>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
12780
Scribble12780





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantBDE\strike0\{linkID=12760>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantBDE
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantBDEDriverType\strike0\{linkID=12140>main\}
\par \pard\li195\sb15\sa25\fs16 The BDE driver type
\par 
\par }
12790
Scribble12790
InstantBrokers.pas
InstantBrokers.pas;


unitssymbol:000040
Imported
main


FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantBrokers.pas \cf1\b0\fs16 
\par \pard\sb25\tx1435\tx2875\tx4315\cf2\strike Classes\cf3\strike0\{linkID=12800>nav\}\cf1\tab\cf2\strike Types\cf3\strike0\{linkID=12810>nav\}\cf1\{keepn\} 
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\fs18 InstantObjects Broker and Connector Classes
\par 
\par }
12800
Scribble12800





Imported



FALSE
31
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Arial;}{\f3\fnil\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \cf2\strike Instant\lang1033\f1 Brokers\cf3\strike0\{linkID=12790>main\}\cf1\lang1040\f0\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit Instant\lang1033\f1 Brokers\lang1040\f0 
\par \pard\li80\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\lang3081\b0\f2 TInstantBrokerCatalog
\par TInstantConnectionBasedConnectionDef
\par \cf2\strike TInstantConnectionBasedConnector\cf3\strike0\{linkID=3400>main\}\cf1 
\par TInstantCustomRelationalBroker
\par TInstantCustomRelationalQuery
\par TInstantCustomResolver
\par TInstantLinkResolver
\par TInstantNavigationalBroker
\par TInstantNavigationalLinkResolver
\par TInstantNavigationalQuery
\par TInstantNavigationalResolver
\par TInstantQueryTranslator
\par TInstantRelationalConnectionDef
\par \cf2\strike TInstantRelationalConnector\cf3\strike0\{linkID=9960>main\}\cf1 
\par TInstantRelationalTranslator
\par TInstantSQLBroke\lang1033\f3 r\lang3081\f2 
\par TInstantSQLBrokerCatalog
\par TInstantSQLGenerator
\par TInstantSQLLinkResolver
\par TInstantSQLQuery
\par TInstantSQLResolve\lang1033\f3 r\lang3081\f2 
\par TInstantStatementCache
\par TInstantStatement
\par \pard\li100\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640 
\par \pard\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\lang1040\strike\f0 
\par }
12810
Scribble12810





Imported



FALSE
22
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \cf2\strike Instant\lang1033\f1 Types\cf3\strike0\{linkID=13140>main\}\cf1\lang1040\f0\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit Instant\lang1033\f1 Brokers\lang1040\f0 
\par \pard\li80\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\lang3081\b0\f2 PInstantOperationInfo
\par PObjectRow
\par TInstantBrokerOperation
\par TInstantCustomRelationalQueryClass
\par \cf2\strike TInstantGetDataSetEvent\cf3\strike0\{linkID=12410>main\}\cf1 
\par \cf2\strike TInstantInitDataSetEvent\cf3\strike0\{linkID=12440>main\}\cf1 
\par TInstantNavigationalResolverClass
\par TInstantNavigationalResolverOperation
\par TInstantOperationInfo
\par TInstantRelationalBroker
\par TInstantRelationalQuery
\par TInstantRelationalTranslatorClass
\par TInstantResolver
\par TInstantSQLGeneratorClass
\par TObjectRow
\par \pard\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\lang1040\strike\f0 
\par }
12820
Scribble12820
InstantClasses.pas
InstantClasses.pas;


unitssymbol:000050
Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantClasses.pas \cf1\b0\fs16  
\par \pard\sb25\tx1435\tx2875\strike Classes\strike0\{linkID=12830>nav\}\tab\strike Functions\strike0\{linkID=12840>nav\}\tab\strike Types\strike0\{linkID=12850>nav\}\{keepn\}
\par \pard\sb25\sa25\tx1435\tx2875\fs18 InstantObjects Classes.
\par 
\par }
12830
Scribble12830





Imported



FALSE
33
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantClasses\strike0\{linkID=12820>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantClasses
\par \pard\keep\li95\sb25\sa25\b0\strike EInstantConversionError\strike0\{linkID=1230>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for conversion errors.
\par \pard\keep\li95\sb25\sa25\strike\fs18 EInstantError\strike0\{linkID=1350>main\}
\par \pard\li195\sb15\sa25\fs16 The common ancestor of exception classes.
\par \pard\keep\li95\sb25\sa25\strike\fs18 EInstantRangeError\strike0\{linkID=1600>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for too large or too small integer values.
\par \pard\keep\li95\sb25\sa25\strike\fs18 EInstantStreamError\strike0\{linkID=1700>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for streaming errors.
\par \pard\keep\li95\sb25\sa25\strike\fs18 EInstantValidationError\strike0\{linkID=1800>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for validation errors.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantCollection\strike0\{linkID=2970>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantCollection is a container for \strike TInstantCollectionItem\strike0\{linkID=3090>main\} objects.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantCollectionItem\strike0\{linkID=3090>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantCollectionItem is the ancestor for collection item classes.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantFileStream\strike0\{linkID=6660>main\}
\par \pard\li195\sb15\sa25\fs16 Provides stream-based access to data stored in a file.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantOwnedCollection\strike0\{linkID=9170>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantOwnedCollection is a collection that has an owner.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantResourceStream\strike0\{linkID=10110>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantResourceStream provides access to a compiled resource in the application.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantStream\strike0\{linkID=10540>main\}
\par \pard\li195\sb15\sa25\fs16 TStream is the base class for classes that provide streaming capabilities for various kinds of media.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantStreamable\strike0\{linkID=10830>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantStreamable is the base class for classes that are streamable.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantStringStream\strike0\{linkID=11110>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantStringStream provides stream-based access to a string.
\par 
\par }
12840
Scribble12840





Imported



FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantClasses\strike0\{linkID=12820>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Functions in Unit InstantClasses
\par \pard\keep\li95\sb25\sa25\b0\strike InstantObjectBinaryToText\strike0\{linkID=11660>main\}
\par \pard\li195\sb15\sa25\fs16 Converts the binary representation of an object to a textual representation.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantObjectTextToBinary\strike0\{linkID=11680>main\}
\par \pard\li195\sb15\sa25\fs16 Converts the textual representation of an object to a binary representation.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantReadObject\strike0\{linkID=11720>main\}
\par \pard\li195\sb15\sa25\fs16 Reads an object from a stream
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantReadObjects\strike0\{linkID=11740>main\}
\par \pard\li195\sb15\sa25\fs16 Reads objects from a stream
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantWriteObject\strike0\{linkID=12030>main\}
\par \pard\li195\sb15\sa25\fs16 Writes an object to a stream
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantWriteObjects\strike0\{linkID=12050>main\}
\par \pard\li195\sb15\sa25\fs16 Writes objects to a stream
\par 
\par }
12850
Scribble12850





Imported



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantClasses\strike0\{linkID=12820>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantClasses
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantProcessObjectEvent\strike0\{linkID=12510>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for object processing events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantStreamFormat\strike0\{linkID=12580>main\}
\par \pard\li195\sb15\sa25\fs16 The possible stream formats
\par 
\par }
12860
Scribble12860
InstantConnectionManager.pas
InstantConnectionManager.pas;


unitssymbol:000060
Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantConnectionManager.pas \cf1\b0\fs16 
\par \pard\sb25\tx1435\strike Classes\strike0\{linkID=12870>nav\}\tab\strike Types\strike0\{linkID=12880>nav\}\{keepn\} 
\par \pard\sb25\sa25\tx1435\fs18 InstantObjects Connection Manager.
\par 
\par }
12870
Scribble12870





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantConnectionManager\strike0\{linkID=12860>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantConnectionManager
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantConnectionManager\strike0\{linkID=3520>main\}
\par \pard\li195\sb15\sa25\fs16 Allows the user to manage connections to various databases.
\par 
\par }
12880
Scribble12880





Imported



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantConnectionManager\strike0\{linkID=12860>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantConnectionManager
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantConnectionManagerActionType\strike0\{linkID=12190>main\}
\par \pard\li195\sb15\sa25\fs16 Connection manager action types.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantConnectionManagerActionTypes\strike0\{linkID=12200>main\}
\par \pard\li195\sb15\sa25\fs16 Connection manager action types.
\par 
\par }
12890
Scribble12890
InstantConsts.pas
InstantConsts.pas;


unitssymbol:000070
Imported
main


FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantConsts.pas \b0\fs16 
\par \cf1\strike Constants\cf2\strike0\{linkID=12900>nav\}\{keepn\}\cf0 
\par \pard\sb25\sa25\fs18 InstantObjects constants and resource strings.
\par 
\par }
12900
Scribble12900





Imported



FALSE
10
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantConsts\strike0\{linkID=12890>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Constants in Unit InstantConsts
\par \pard\keep\li95\sb25\sa25\b0\strike InstantDateFormat\strike0\{linkID=12650>main\}
\par \strike InstantDateTimeFormat\strike0\{linkID=12670>main\}
\par \strike InstantTimeFormat\strike0\{linkID=12690>main\}
\par 
\par }
12910
Scribble12910
InstantDBISAM.pas
InstantDBISAM.pas;


unitssymbol:000080
Imported
main


FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDBISAM.pas \cf1\b0\fs16 
\par \strike Classes\strike0\{linkID=12920>nav\}\{keepn\} 
\par \pard\sb25\sa25\fs18 InstantObjects DBISAM support.
\par 
\par }
12920
Scribble12920





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantDBISAM\strike0\{linkID=12910>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantDBISAM
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantDBISAMConnector\strike0\{linkID=5780>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
12930
Scribble12930
InstantDBX.pas
InstantDBX.pas;


unitssymbol:000090
Imported
main


FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantDBX.pas \cf1\b0\fs16 
\par \strike Classes\strike0\{linkID=12940>nav\}\{keepn\} 
\par \pard\sb25\sa25\fs18 InstantObjects dbExpress support.
\par 
\par }
12940
Scribble12940





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantDBX\strike0\{linkID=12930>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantDBX
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantDBXConnector\strike0\{linkID=5950>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
12950
Scribble12950
InstantExplorer.pas
InstantExplorer.pas;


unitssymbol:000100
Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantExplorer.pas \cf1\b0\fs16  
\par \pard\sb25\tx1435\tx2875\strike Classes\strike0\{linkID=12960>nav\}\tab\strike Functions\strike0\{linkID=12970>nav\}\tab\strike Types\strike0\{linkID=12980>nav\}\{keepn\}
\par \pard\sb25\sa25\tx1435\tx2875\fs18 InstantObjects Object Explorer.
\par 
\par }
12960
Scribble12960





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantExplorer\strike0\{linkID=12950>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantExplorer
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantExplorer\strike0\{linkID=6230>main\}
\par \pard\li195\sb15\sa25\fs16 Allows navigation of objects within a tree.
\par 
\par }
12970
Scribble12970





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantExplorer\strike0\{linkID=12950>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Functions in Unit InstantExplorer
\par \pard\keep\li95\sb25\sa25\b0\strike InstantExploreObject\strike0\{linkID=11420>main\}
\par \pard\li195\sb15\sa25\fs16 Explores an object
\par 
\par }
12980
Scribble12980





Imported



FALSE
13
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantExplorer\strike0\{linkID=12950>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantExplorer
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantExplorerLayout\strike0\{linkID=12310>main\}
\par \pard\li195\sb15\sa25\fs16 Determines the layout of the explorer.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantExplorerNodeType\strike0\{linkID=12320>main\}
\par \pard\li195\sb15\sa25\fs16 Defines node types of an explorer.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantExplorerNodeTypes\strike0\{linkID=12330>main\}
\par \pard\li195\sb15\sa25\fs16 Defines node types of an explorer.
\par 
\par }
12990
Scribble12990
InstantFlashFiler.pas
InstantFlashFiler.pas;


unitssymbol:000110
Imported
main


FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantFlashFiler.pas \cf1\b0\fs16 
\par \strike Classes\strike0\{linkID=13000>nav\}\{keepn\} 
\par \pard\sb25\sa25\fs18 InstantObjects FlashFiler support.
\par 
\par }
13000
Scribble13000





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantFlashFiler\strike0\{linkID=12990>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantFlashFiler
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantFlashFilerConnector\strike0\{linkID=6740>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
13010
Scribble13010
InstantIBX.pas
InstantIBX.pas;


unitssymbol:000120
Imported
main


FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantIBX.pas \cf1\b0\fs16 
\par \cf2\lang1033\strike\f1 Classes\cf3\strike0\{linkID=13020>nav\}\cf1\lang1040\f0\{keepn\} 
\par \pard\sb25\sa25\fs18 InstantObjects InterBase Express support.
\par 
\par }
13020
Scribble13020





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantIBX\strike0\{linkID=13010>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantIBX
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantIBXConnector\strike0\{linkID=6960>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par 
\par }
13030
Scribble13030
InstantMetadata.pas
InstantMetadata.pas;


unitssymbol:000130
Added
main


FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantMetadata.pas \cf1\b0\fs16 
\par \cf2\strike Classes\cf3\strike0\{linkID=13040>nav\}\cf1\{keepn\} 
\par \pard\sb25\sa25\fs18 InstantObjects Metadata Classes.
\par 
\par }
13040
Scribble13040





Imported



FALSE
25
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \cf2\strike Instant\lang1033\f1 Metadata\cf3\strike0\{linkID=13030>main\}\cf1\lang1040\f0\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit Instant\lang1033\f1 Metadata\lang1040\f0 
\par \pard\li80\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\lang3081\b0\f2 TInstantAttributeMap
\par TInstantAttributeMaps
\par TInstantAttributeMetadata
\par TInstantAttributeMetadatas
\par TInstantCatalog
\par TInstantClassMetadata
\par TInstantClassMetadatas
\par TInstantFieldMetadata
\par TInstantFieldMetadatas
\par TInstantIndexMetadata
\par TInstantIndexMetadatas
\par TInstantMetadata
\par TInstantMetadatas
\par TInstantModel
\par TInstantModelCatalog
\par TInstantScheme
\par TInstantTableMetadata
\par TInstantTableMetadatas
\par \pard\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\lang1040\strike\f0 
\par }
13050
Scribble13050
InstantPersistence.pas
InstantPersistence.pas;


unitssymbol:000140
Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantPersistence.pas \cf1\b0\fs16 
\par \pard\sb25\tx1435\tx2875\tx4315\strike Classes\strike0\{linkID=13060>nav\}\tab\strike Functions\strike0\{linkID=13070>nav\}\tab\strike Types\strike0\{linkID=13080>nav\}\tab\strike Constants\strike0\{linkID=13090>nav\}\{keepn\} 
\par \pard\sb25\sa25\tx1435\tx2875\tx4315\fs18 InstantObjects Core Classes
\par 
\par }
13060
Scribble13060





Modified



FALSE
51
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantPersistence
\par \pard\keep\li95\sb25\sa25\b0\strike EInstantAccessError\strike0\{linkID=1000>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for access errors.
\par \pard\keep\li95\sb25\sa25\strike\fs18 EInstantConflict\strike0\{linkID=1120>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for conflict errors.
\par \pard\keep\li95\sb25\sa25\strike\fs18 EInstantKeyViolation\strike0\{linkID=1490>main\}
\par \pard\li195\sb15\sa25\fs16 The exception class for key violations.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantAttribute\strike0\{linkID=2170>main\}
\par \pard\li195\sb15\sa25\fs16 The common ancestor of all the attribute classes.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantBlob\strike0\{linkID=2680>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantBlob represents a binary large object (BLOB).
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantBoolean\strike0\{linkID=2860>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantBoolean represents a Boolean value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantComplex\strike0\{linkID=3190>main\}
\par \pard\li195\sb15\sa25\fs16 The ancestor of all the attribute classes that represent objects.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantConnector\strike0\{linkID=3770>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantContainer\strike0\{linkID=4300>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantContainer is the ancestor of attribute classes that represent a relationship with multiple objects.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantDateTime\strike0\{linkID=5670>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantDateTime represents a TDateTime value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantElement\strike0\{linkID=6050>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantElement is the ancestor of attribute classes that represent a relationship with a single object.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantFloat\strike0\{linkID=6840>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantFloat represents a Double value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantInteger\strike0\{linkID=7070>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantInteger represents a 32-bit Integer value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantMemo\strike0\{linkID=7190>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantMemo represents a memo.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantNumeric\strike0\{linkID=7290>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantNumeric is the ancestor of attribute classes that represent a numeric value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantObject\strike0\{linkID=7390>main\}
\par \pard\li195\sb15\sa25\fs16 The ancestor for classes with persistence capabilities.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantPart\strike0\{linkID=9250>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantPart represents a part relationship to a single object.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantParts\strike0\{linkID=9390>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantParts represents a part relationship to multiple objects.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantReference\strike0\{linkID=9520>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantReference represents a reference relationship to a single object.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantReferences\strike0\{linkID=9780>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantReferences represents a reference relationship to multiple objects.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantSimple\strike0\{linkID=10430>main\}
\par \pard\li195\sb15\sa25\fs16 The ancestor of all the attribute classes that represent simple types.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantString\strike0\{linkID=11000>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantString represents a string value.
\par 
\par }
13070
Scribble13070





Imported



FALSE
39
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Functions in Unit InstantPersistence
\par \pard\keep\li95\sb25\sa25\b0\strike InstantCheckConnection\strike0\{linkID=11250>main\}
\par \pard\li195\sb15\sa25\fs16 Checks the assignment of a connection
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantCheckConnector\strike0\{linkID=11260>main\}
\par \pard\li195\sb15\sa25\fs16 Checks the assignment of a connector
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantClassNameToName\strike0\{linkID=11280>main\}
\par \pard\li195\sb15\sa25\fs16 Converts a class name to a name.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantDefaultConnector\strike0\{linkID=11370>main\}
\par \pard\li195\sb15\sa25\fs16 Returns the default connector instance.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantDisableNotifiers\strike0\{linkID=11380>main\}
\par \pard\li195\sb15\sa25\fs16 Disables all notifiers
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantEnableNotifiers\strike0\{linkID=11400>main\}
\par \pard\li195\sb15\sa25\fs16 Enables all notifiers
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantFindClass\strike0\{linkID=11500>main\}
\par \pard\li195\sb15\sa25\fs16 Finds and returns a class derived from \strike TInstantObject\strike0\{linkID=7390>main\}.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantGetClass\strike0\{linkID=11550>main\}
\par \pard\li195\sb15\sa25\fs16 Finds and returns a class derived from \strike TInstantObject\strike0\{linkID=7390>main\}.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantGetClasses\strike0\{linkID=11570>main\}
\par \pard\li195\sb15\sa25\fs16 Extracts a list of registered classes.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantIsValidObjectId\strike0\{linkID=11590>main\}
\par \pard\li195\sb15\sa25\fs16 Tests for a valid Object Id.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantNameToClassName\strike0\{linkID=11640>main\}
\par \pard\li195\sb15\sa25\fs16 Converts a name to a class name.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantRefreshObjects\strike0\{linkID=11760>main\}
\par \pard\li195\sb15\sa25\fs16 Refreshes all instances of an array of classes
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantRegisterClass\strike0\{linkID=11800>main\}
\par \pard\li195\sb15\sa25\fs16 Registers a class derived from \strike TInstantObject\strike0\{linkID=7390>main\}.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantRegisterClasses\strike0\{linkID=11820>main\}
\par \pard\li195\sb15\sa25\fs16 Registers an array of classes derived from \strike TInstantObject\strike0\{linkID=7390>main\}.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantUnregisterClass\strike0\{linkID=11990>main\}
\par \pard\li195\sb15\sa25\fs16 Unregisters a class derived from \strike TInstantObject\strike0\{linkID=7390>main\}
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantUnregisterClasses\strike0\{linkID=12010>main\}
\par \pard\li195\sb15\sa25\fs16 Unregisters an array of classes derived from \strike TInstantObject\strike0\{linkID=7390>main\}
\par 
\par }
13080
Scribble13080





Modified



FALSE
27
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantPersistence
\par \pard\keep\li95\sb25\sa25\lang1033\b0\strike\f1 T\lang1040\f0 InstantAttribute\strike0\{linkID=2170>main\}
\par \pard\li195\sb15\sa25\fs16 The common ancestor of all the attribute classes.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantAttributeChangeEvent\strike0\{linkID=12120>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for attribute change notification events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantConnectorClass\strike0\{linkID=12210>main\}
\par \pard\li195\sb15\sa25\fs16 Provides access to a database.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantContentChangeEvent\strike0\{linkID=12220>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for content change notification events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantErrorEvent\strike0\{linkID=12300>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for error events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantNotifyEvent\strike0\{linkID=12470>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantNotifyEvent is the event type for simple notification events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantObjectNotifyEvent\strike0\{linkID=12480>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantObjectNotifyEvent is used for notification.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantProgressEvent\strike0\{linkID=12520>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for progress events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantSchemeEvent\strike0\{linkID=12530>main\}
\par \pard\li195\sb15\sa25\fs16 The event type for database-build related events.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantSortCompare\strike0\{linkID=12540>main\}
\par \pard\li195\sb15\sa25\fs16 Prototype of function used to Compares objects
\par 
\par }
13090
Scribble13090





Imported



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantPersistence\strike0\{linkID=13050>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Constants in Unit InstantPersistence
\par \pard\keep\li95\sb25\sa25\b0\strike InstantAttributePrefix\strike0\{linkID=12620>main\}
\par \pard\li195\sb15\sa25\fs16 The prefix used for attribute fields.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantClassPrefix\strike0\{linkID=12640>main\}
\par \pard\li195\sb15\sa25\fs16 The prefix used for classes.
\par 
\par }
13100
Scribble13100
InstantPresentation.pas
InstantPresentation.pas;


unitssymbol:000150
Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantPresentation.pas \cf1\b0\fs16 
\par \pard\sb25\tx1435\tx2875\strike Classes\strike0\{linkID=13110>nav\}\tab\strike Functions\strike0\{linkID=13120>nav\}\tab\strike Types\strike0\{linkID=13130>nav\}\{keepn\} 
\par \pard\sb25\sa25\tx1435\tx2875\fs18 InstantObjects Presentation Classes.
\par 
\par }
13110
Scribble13110





Imported



FALSE
13
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantPresentation\strike0\{linkID=13100>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantPresentation
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantCustomExposer\strike0\{linkID=4790>main\}
\par \pard\li195\sb15\sa25\fs16 The ancestor of components that make objects accessible via data-aware controls.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantExposer\strike0\{linkID=6450>main\}
\par \pard\li195\sb15\sa25\fs16 Provides dataset-based access to objects.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantSelector\strike0\{linkID=10200>main\}
\par \pard\li195\sb15\sa25\fs16 TInstantSelector provides dataset-based access to a selection of objects.
\par 
\par }
13120
Scribble13120





Imported



FALSE
15
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantPresentation\strike0\{linkID=13100>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Functions in Unit InstantPresentation
\par \pard\keep\li95\sb25\sa25\b0\strike InstantFindAccessorClass\strike0\{linkID=11480>main\}
\par \pard\li195\sb15\sa25\fs16 Finds and returns a class derived from TInstantAccessor.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantGetAccessorClass\strike0\{linkID=11530>main\}
\par \pard\li195\sb15\sa25\fs16 Finds and returns a class derived from TInstantAccessor.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantRegisterAccessorClass\strike0\{linkID=11780>main\}
\par \pard\li195\sb15\sa25\fs16 Registers a class derived from TInstantAccessor.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantUnregisterAccessorClass\strike0\{linkID=11970>main\}
\par \pard\li195\sb15\sa25\fs16 Unregisters a class derived from TInstantAccessor
\par 
\par }
13130
Scribble13130





Modified



FALSE
27
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \cf2\strike InstantPresentation\cf3\strike0\{linkID=13100>main\}\cf1\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantPresentation
\par \pard\keep\li95\sb25\sa25\cf2\b0\strike TInstantAddClassFieldDefEvent\cf3\strike0\{linkID=12090>main\}\cf1\strike 
\par \pard\li195\sb15\sa25\strike0\fs16 The event type for \lang1033\f1 exposer field definition\lang1040\f0  \lang1033\f1 creation\lang1040\f0  events.\strike\fs18 
\par \pard\keep\li95\sb25\sa25\cf2 TInstantAccessMode\cf3\strike0\{linkID=12100>main\}\cf1 
\par \pard\li195\sb15\sa25\fs16 Determines how an object is being accessed.
\par \pard\keep\li95\sb25\sa25\cf2\strike\fs18 TInstantCompareObjectsEvent\cf3\strike0\{linkID=12150>main\}\cf1 
\par \pard\li195\sb15\sa25\fs16 The event type for object comparison events.
\par \pard\keep\li95\sb25\sa25\cf2\strike\fs18 TInstantCreateObjectEvent\cf3\strike0\{linkID=12260>main\}\cf1 
\par \pard\li195\sb15\sa25\fs16 The event type used for object creation events.
\par \pard\keep\li95\sb25\sa25\cf2\strike\fs18 TInstantExposerOptions\cf3\strike0\{linkID=12340>main\}\cf1 
\par \pard\li195\sb15\sa25\fs16 Specifies options for an exposer.
\par \pard\keep\li95\sb25\sa25\cf2\strike\fs18 TInstantFieldDefEvent\cf3\strike0\{linkID=12360>main\}\cf1 
\par \pard\li195\sb15\sa25\fs16 The event type for field definition initialization events.
\par \pard\keep\li95\sb25\sa25\cf2\strike\fs18 TInstantFieldErrorEvent\cf3\strike0\{linkID=12370>main\}\cf1 
\par \pard\li195\sb15\sa25\fs16 The event type for field errors.
\par \pard\keep\li95\sb25\sa25\cf2\strike\fs18 TInstantFieldEvent\cf3\strike0\{linkID=12380>main\}\cf1 
\par \pard\li195\sb15\sa25\fs16 The event type for field events.
\par \pard\keep\li95\sb25\sa25\cf2\strike\fs18 TInstantIncludeFieldEvent\cf3\strike0\{linkID=12430>main\}\cf1 
\par \pard\li195\sb15\sa25\fs16 The event type for field inclusion events.
\par \pard\keep\li95\sb25\sa25\cf2\strike\fs18 TInstantLimitObjectsEvent\cf3\strike0\{linkID=12460>main\}\cf1 
\par \pard\li195\sb15\sa25\fs16 The event type for object limitation events.
\par 
\par }
13140
Scribble13140
InstantTypes.pas
InstantTypes.pas;


unitssymbol:000160
Imported
main


FALSE
7
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantTypes.pas \cf1\b0\fs16 
\par \cf2\lang1033\strike\f1 Types\cf3\strike0\{linkID=13150>nav\}\cf1\lang1040\f0\{keepn\} 
\par \pard\sb25\sa25\fs18 InstantObjects \lang1033\f1 Types\lang1040\f0 .
\par 
\par }
13150
Scribble13150





Imported



FALSE
27
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Arial;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \cf2\strike Instant\lang1033\f1 Types\cf3\strike0\{linkID=13140>main\}\cf1\lang1040\f0\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit Instant\lang1033\f1 Types \lang1040\f0 
\par \pard\li80\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\lang3081\b0\f2 TInstantAttributeCategory
\par \cf2\strike TInstantAttributeType\cf3\strike0\{linkID=12130>main\}\cf1 
\par TInstantCacheNodeColor
\par TInstantCatalogFeature
\par TInstantCatalogFeatures
\par \cf2\strike TInstantConflictAction\cf3\strike0\{linkID=12180>main\}\cf1 
\par \cf2\strike TInstantContentChangeType\cf3\strike0\{linkID=12240>main\}\cf1 
\par \cf2\strike TInstantDataType\cf3\strike0\{linkID=12270>main\}\cf1 
\par \cf2\strike TInstantDataTypes\cf3\strike0\{linkID=12270>main\}\cf1 
\par TInstantDBBuildCommandType
\par \cf2\strike TInstantErrorAction\cf3\strike0\{linkID=12280>main\}\cf1 
\par \cf2\strike TInstantFieldOption\cf3\strike0\{linkID=12390>main\}\cf1 
\par \cf2\strike TInstantFieldOptions\cf3\strike0\{linkID=12390>main\}\cf1 
\par TInstantGraphicFileFormat
\par TInstantObjectNotification
\par \cf2\strike TInstantOperationType\cf3\strike0\{linkID=12490>main\}\cf1 
\par \cf2\strike TInstantPersistence\cf3\strike0\{linkID=12500>main\}\cf1 
\par \cf2\strike TInstantStorageKind\cf3\strike0\{linkID=12560>main\}\cf1 
\par \cf2\strike TInstantVerificationResult\cf3\strike0\{linkID=12600>main\}\cf1 
\par TInstantWarningEvent
\par \pard\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\lang1040\strike\f0 
\par }
13160
Scribble13160
InstantUtils.pas
InstantUtils.pas;


unitssymbol:000170
Imported
main


FALSE
7
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1040\b\f0\fs24 InstantUtils.pas \cf1\b0\fs16  
\par \pard\sb25\tx1435\tx2875\strike Classes\strike0\{linkID=13170>nav\}\tab\strike Functions\strike0\{linkID=13180>nav\}\tab\strike Types\strike0\{linkID=13190>nav\}\{keepn\}
\par \pard\sb25\sa25\tx1435\tx2875\fs18 InstantObjects Utilities
\par 
\par }
13170
Scribble13170





Imported



FALSE
9
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Classes in Unit InstantUtils
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantVersion\strike0\{linkID=12070>main\}
\par \pard\li195\sb15\sa25\fs16 Specifies the version of a file.
\par 
\par }
13180
Scribble13180





Imported



FALSE
47
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Functions in Unit InstantUtils
\par \pard\keep\li95\sb25\sa25\b0\strike InstantCharSetToStr\strike0\{linkID=11220>main\}
\par \pard\li195\sb15\sa25\fs16 Co\lang1033\f1 n\lang1040\f0 verts a set of char to a string.
\par \pard\keep\li95\sb25\sa25\strike\fs18 function InstantCompareObjects(Obj1: TObject; Obj2: TObject; PropNames: TStrings; Options: TInstantCompareOptions): Integer;\strike0\{linkID=11310>main\}
\par \pard\li195\sb15\sa25\fs16 Compares two objects by comparing multiple named published properties.
\par \pard\keep\li95\sb25\sa25\strike\fs18 function InstantCompareObjects(Obj1: TObject; Obj2: TObject; PropName: string; Options: TInstantCompareOptions): Integer;\strike0\{linkID=11300>main\}
\par \pard\li195\sb15\sa25\fs16 Compares two objects by comparing a named published property.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantCompareText\strike0\{linkID=11320>main\}
\par \pard\li195\sb15\sa25\fs16 Compares two strings by ordinal value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantCompareValues\strike0\{linkID=11330>main\}
\par \pard\li195\sb15\sa25\fs16 Compares the values of two variants.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantConstArrayToVariant\strike0\{linkID=11340>main\}
\par \pard\li195\sb15\sa25\fs16 Converts an array of constants to a variant array.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantDateTimeToStr\strike0\{linkID=11350>main\}
\par \pard\li195\sb15\sa25\fs16 Converts a TDatetime value to a string.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantFileVersion\strike0\{linkID=11440>main\}
\par \pard\li195\sb15\sa25\fs16 Returns the version of a file as a record
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantFileVersionStr\strike0\{linkID=11460>main\}
\par \pard\li195\sb15\sa25\fs16 Returns the version of a file as a string
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantGenerateId\strike0\{linkID=11520>main\}
\par \pard\li195\sb15\sa25\fs16 Generates an unique Id.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantIsIdentifier\strike0\{linkID=11580>main\}
\par \pard\li195\sb15\sa25\fs16 Determines if a string is a valid identifier
\par \pard\keep\li95\sb25\sa25\strike\fs18 function InstantMatchObject(Obj: TObject; PropNames: TStrings; const KeyValues: Variant; Options: TInstantCompareOptions): Boolean;\strike0\{linkID=11620>main\}
\par \pard\li195\sb15\sa25\fs16 Compares multiple values to the values of an objects properties
\par \pard\keep\li95\sb25\sa25\strike\fs18 function InstantMatchObject(Obj: TObject; PropName: string; const KeyValue: Variant; Options: TInstantCompareOptions): Boolean;\strike0\{linkID=11600>main\}
\par \pard\li195\sb15\sa25\fs16 Compares a value to the value of an objects property
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantPartStr\strike0\{linkID=11700>main\}
\par \pard\li195\sb15\sa25\fs16 Extracts a part of a delimited string.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantRightPos\strike0\{linkID=11840>main\}
\par \pard\li195\sb15\sa25\fs16 Returns the starting position of the last occurrence of a substring in a given string.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantStrToCharSet\strike0\{linkID=11860>main\}
\par \pard\li195\sb15\sa25\fs16 Converts a string to a set of char.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantStrToDate\strike0\{linkID=11890>main\}
\par \pard\li195\sb15\sa25\fs16 Converts a string to a TDateTime value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantStrToDateTime\strike0\{linkID=11910>main\}
\par \pard\li195\sb15\sa25\fs16 Converts a string to a TDateTime value.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantStrToList\strike0\{linkID=11930>main\}
\par \pard\li195\sb15\sa25\fs16 Adds the individual strings of a delimited string to a TStrings object.
\par \pard\keep\li95\sb25\sa25\strike\fs18 InstantStrToTime\strike0\{linkID=11950>main\}
\par \pard\li195\sb15\sa25\fs16 Converts a string to a TDateTime value.
\par 
\par }
13190
Scribble13190





Imported



FALSE
11
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\sb25\lang1040\b\f0\fs24 Unit Overview \cf1\b0\fs16 
\par \strike InstantUtils\strike0\{linkID=13160>main\}\{keepn\} 
\par \pard\sb55\sa55\b\fs18 Types in Unit InstantUtils
\par \pard\keep\li95\sb25\sa25\b0\strike TInstantCompareOption\strike0\{linkID=12160>main\}
\par \pard\li195\sb15\sa25\fs16 Specifies options for a comparison.
\par \pard\keep\li95\sb25\sa25\strike\fs18 TInstantCompareOptions\strike0\{linkID=12170>main\}
\par \pard\li195\sb15\sa25\fs16 Specifies options for a comparison.
\par 
\par }
3
main="InstantObjects Guide 2.0",(420,410,563,503),0,(255,255,255),(255,255,255),0
example="InstantObjects Guide",(420,45,563,366),0,(255,255,255),(255,255,255),0
nav="InstantObjects Guide",(200,410,220,503),0,(255,255,255),(255,255,255),0
0
0
212
1 Welcome=Scribble10
1 License Agreement=327SA3X
1 License Agreement=Scribble30
1 Installing InstantObjects=Scribble40
1 InstantObjects User Guide
2 User Guide for InstantObjects 2.0=Scribble50
2 Creating the Business Model
3 Creating the Business Model=Scribble70
3 The Model Explorer=Scribble90
3 Defining Classes
4 Defining Classes=Scribble120
4 Class Editor=Scribble130
4 Attribute Editor=Scribble170
4 External Storage of Attributes=Scribble220
3 Adding Business Rules=Scribble240
3 Building/Evolving the Business Model=Scribble270
2 Creating the User Interface
3 Creating the User Interface=Scribble280
3 Persistence by RAD=Scribble300
3 The Connector=Scribble310
3 The Exposer=Scribble320
3 The Exposer=Scribble320
3 The Selector=Scribble330
2 Programming with Persistent Objects
3 Programming with Persistent Objects=Scribble340
3 Creating New Objects=Scribble340
3 Retrieving Existing Objects=Scribble380
3 Associating Objects=Scribble420
3 Using an InstantQuery=Scribble440
2 The Primer demo
3 Learning the Primer demo=Scribble460
3 Introduction=Scribble480
3 The Business Model=Scribble490
3 The User Interface=Scribble500
3 Persisting Objects=Scribble510
3 Mapping Scheme=Scribble520
3 Streaming=Scribble530
3 Exposing Objects=Scribble540
3 Selecting Objects=Scribble550
3 Filtering=Scribble560
3 Sorting=Scribble570
3 Object Explorer=Scribble580
3 Connection Manager=Scribble590
1 InstantObjects Symbol Reference
2 Classes
3 EInstantAccessError=Scribble1000>MAIN
3 EInstantConflict=Scribble1120>MAIN
3 EInstantConversionError=Scribble1230>MAIN
3 EInstantError=Scribble1350>MAIN
3 EInstantKeyViolation=Scribble1490>MAIN
3 EInstantRangeError=Scribble1600>MAIN
3 EInstantStreamError=Scribble1700>MAIN
3 EInstantValidationError=Scribble1800>MAIN
3 TInstantADOConnector=Scribble1900>MAIN
3 TInstantADSConnector=Scribble2040>MAIN
3 TInstantAttribute=Scribble2170>MAIN
3 TInstantBDEConnector=Scribble2560>MAIN
3 TInstantBlob=Scribble2680>MAIN
3 TInstantBoolean=Scribble2860>MAIN
3 TInstantCollection=Scribble2970>MAIN
3 TInstantCollectionItem=Scribble3090>MAIN
3 TInstantComplex=Scribble3190>MAIN
3 TInstantConnectionBasedConnector=Scribble3400>MAIN
3 TInstantConnectionManager=Scribble3520>MAIN
3 TInstantConnector=Scribble3770>MAIN
3 TInstantContainer=Scribble4300>MAIN
3 TInstantCurrency=Scribble4670>MAIN
3 TInstantCustomExposer=Scribble4790>MAIN
3 TInstantDateTime=Scribble5670>MAIN
3 TInstantDBISAMConnector=Scribble5780>MAIN
3 TInstantDBXConnector=Scribble5950>MAIN
3 TInstantElement=Scribble6050>MAIN
3 TInstantExplorer=Scribble6230>MAIN
3 TInstantExposer=Scribble6450>MAIN
3 TInstantFileStream=Scribble6660>MAIN
3 TInstantFlashFilerConnector=Scribble6740>MAIN
3 TInstantFloat=Scribble6840>MAIN
3 TInstantIBXConnector=Scribble6960>MAIN
3 TInstantInteger=Scribble7070>MAIN
3 TInstantMemo=Scribble7190>MAIN
3 TInstantNumeric=Scribble7290>MAIN
3 TInstantObject=Scribble7390>MAIN
3 TInstantOwnedCollection=Scribble9170>MAIN
3 TInstantPart=Scribble9250>MAIN
3 TInstantParts=Scribble9390>MAIN
3 TInstantReference=Scribble9520>MAIN
3 TInstantReferences=Scribble9780>MAIN
3 TInstantRelationalConnector=Scribble9960>MAIN
3 TInstantResourceStream=Scribble10110>MAIN
3 TInstantSelector=Scribble10200>MAIN
3 TInstantSimple=Scribble10430>MAIN
3 TInstantStream=Scribble10540>MAIN
3 TInstantStreamable=Scribble10830>MAIN
3 TInstantString=Scribble11000>MAIN
3 TInstantStringStream=Scribble11110>MAIN
2 Records / Structs
3 TInstantVersion=Scribble12070>MAIN
2 Functions
3 InstantCharSetToStr=Scribble11220>MAIN
3 InstantCheckConnection=Scribble11250>MAIN
3 InstantCheckConnector=Scribble11260>MAIN
3 InstantClassNameToName=Scribble11280>MAIN
3 InstantCompareObjects 1=Scribble11300>MAIN
3 InstantCompareObjects 2=Scribble11310>MAIN
3 InstantCompareText=Scribble11320>MAIN
3 InstantCompareValues=Scribble11330>MAIN
3 InstantConstArrayToVariant=Scribble11340>MAIN
3 InstantDateTimeToStr=Scribble11350>MAIN
3 InstantDefaultConnector=Scribble11370>MAIN
3 InstantDisableNotifiers=Scribble11380>MAIN
3 InstantEnableNotifiers=Scribble11400>MAIN
3 InstantExploreObject=Scribble11420>MAIN
3 InstantFileVersion=Scribble11440>MAIN
3 InstantFileVersionStr=Scribble11460>MAIN
3 InstantFindAccessorClass=Scribble11480>MAIN
3 InstantFindClass=Scribble11500>MAIN
3 InstantGenerateId=Scribble11520>MAIN
3 InstantGetAccessorClass=Scribble11530>MAIN
3 InstantGetClass=Scribble11550>MAIN
3 InstantGetClasses=Scribble11570>MAIN
3 InstantIsIdentifier=Scribble11580>MAIN
3 InstantIsValidObjectId=Scribble11590>MAIN
3 InstantMatchObject 1=Scribble11600>MAIN
3 InstantMatchObject 2=Scribble11620>MAIN
3 InstantNameToClassName=Scribble11640>MAIN
3 InstantObjectBinaryToText=Scribble11660>MAIN
3 InstantObjectTextToBinary=Scribble11680>MAIN
3 InstantPartStr=Scribble11700>MAIN
3 InstantReadObject=Scribble11720>MAIN
3 InstantReadObjects=Scribble11740>MAIN
3 InstantRefreshObjects=Scribble11760>MAIN
3 InstantRegisterAccessorClass=Scribble11780>MAIN
3 InstantRegisterClass=Scribble11800>MAIN
3 InstantRegisterClasses=Scribble11820>MAIN
3 InstantRightPos=Scribble11840>MAIN
3 InstantStrToCharSet=Scribble11860>MAIN
3 InstantStrToDate=Scribble11890>MAIN
3 InstantStrToDateTime=Scribble11910>MAIN
3 InstantStrToList=Scribble11930>MAIN
3 InstantStrToTime=Scribble11950>MAIN
3 InstantUnregisterAccessorClass=Scribble11970>MAIN
3 InstantUnregisterClass=Scribble11990>MAIN
3 InstantUnregisterClasses=Scribble12010>MAIN
3 InstantWriteObject=Scribble12030>MAIN
3 InstantWriteObjects=Scribble12050>MAIN
2 Types
3 TInstantAddClassFieldDefEvent=Scribble12090>MAIN
3 TInstantAccessMode=Scribble12100>MAIN
3 TInstantADOProviderType=Scribble12110>MAIN
3 TInstantAttributeChangeEvent=Scribble12120>MAIN
3 TInstantAttributeType=Scribble12130>MAIN
3 TInstantBDEDriverType=Scribble12140>MAIN
3 TInstantCompareObjectsEvent=Scribble12150>MAIN
3 TInstantCompareOption=Scribble12160>MAIN
3 TInstantCompareOptions=Scribble12170>MAIN
3 TInstantConflictAction=Scribble12180>MAIN
3 TInstantConnectionManagerActionType=Scribble12190>MAIN
3 TInstantConnectionManagerActionTypes=Scribble12200>MAIN
3 TInstantConnectorClass=Scribble12210>MAIN
3 TInstantContentChangeEvent=Scribble12220>MAIN
3 TInstantContentChangeType=Scribble12240>MAIN
3 TInstantCreateObjectEvent=Scribble12260>MAIN
3 TInstantDataType=Scribble12270>MAIN
3 TInstantErrorAction=Scribble12280>MAIN
3 TInstantErrorEvent=Scribble12300>MAIN
3 TInstantExplorerLayout=Scribble12310>MAIN
3 TInstantExplorerNodeType=Scribble12320>MAIN
3 TInstantExplorerNodeTypes=Scribble12330>MAIN
3 TInstantExposerOptions=Scribble12340>MAIN
3 TInstantFieldDefEvent=Scribble12360>MAIN
3 TInstantFieldErrorEvent=Scribble12370>MAIN
3 TInstantFieldEvent=Scribble12380>MAIN
3 TInstantFieldOptions=Scribble12390>MAIN
3 TInstantGetDataSetEvent=Scribble12410>MAIN
3 TInstantIncludeFieldEvent=Scribble12430>MAIN
3 TInstantInitDataSetEvent=Scribble12440>MAIN
3 TInstantLimitObjectsEvent=Scribble12460>MAIN
3 TInstantNotifyEvent=Scribble12470>MAIN
3 TInstantObjectNotifyEvent=Scribble12480>MAIN
3 TInstantOperationType=Scribble12490>MAIN
3 TInstantPersistence=Scribble12500>MAIN
3 TInstantProcessObjectEvent=Scribble12510>MAIN
3 TInstantProgressEvent=Scribble12520>MAIN
3 TInstantSchemeEvent=Scribble12530>MAIN
3 TInstantSortCompare=Scribble12540>MAIN
3 TInstantStorageKind=Scribble12560>MAIN
3 TInstantStreamFormat=Scribble12580>MAIN
3 TInstantVerificationResult=Scribble12600>MAIN
2 Constants
3 InstantAttributePrefix=Scribble12620>MAIN
3 InstantClassPrefix=Scribble12640>MAIN
3 InstantDateFormat=Scribble12650>MAIN
3 InstantDateTimeFormat=Scribble12670>MAIN
3 InstantTimeFormat=Scribble12690>MAIN
2 Units
3 InstantADO.pas=Scribble12710>MAIN
3 InstantADS.pas=Scribble12740>MAIN
3 InstantBDE.pas=Scribble12760>MAIN
3 InstantBrokers.pas=Scribble12790>MAIN
3 InstantClasses.pas=Scribble12820>MAIN
3 InstantConnectionManager.pas=Scribble12860>MAIN
3 InstantConsts.pas=Scribble12890>MAIN
3 InstantDBISAM.pas=Scribble12910>MAIN
3 InstantDBX.pas=Scribble12930>MAIN
3 InstantExplorer.pas=Scribble12950>MAIN
3 InstantFlashFiler.pas=Scribble12990>MAIN
3 InstantIBX.pas=Scribble13010>MAIN
3 InstantMetadata.pas=Scribble13030>MAIN
3 InstantPersistence.pas=Scribble13050>MAIN
3 InstantPresentation.pas=Scribble13100>MAIN
3 InstantTypes.pas=Scribble13140>MAIN
3 InstantUtils.pas=Scribble13160>MAIN
22
*InternetLink
16711680
Courier New
0
10
1
....
0
0
0
0
0
0
*ParagraphTitle
-16777208
Arial
0
11
1
B...
0
0
0
0
0
0
*PopupLink
-16777208
Arial
0
8
1
....
0
0
0
0
0
0
*PopupTopicTitle
16711680
Arial
0
10
1
B...
0
0
0
0
0
0
*TopicText
0
Arial
0
9
1
....
0
0
0
0
0
0
*TopicTitle
-16777208
Arial
0
12
1
B...
0
0
0
0
0
0
__C++SourceCode
0
Courier New
0
10
0
....
0
0
0
0
0
0
__DFMCode
0
Courier New
0
10
0
....
0
0
0
0
0
0
__JScriptCode
0
Courier New
0
10
0
....
0
0
0
0
0
0
__SQLCode
0
Courier New
0
10
0
....
0
0
0
0
0
0
__VBCode
0
Courier New
0
10
0
....
0
0
0
0
0
0
__VBScriptCode
0
Courier New
0
10
0
....
0
0
0
0
0
0
__XMLCode
0
Courier New
0
10
0
....
0
0
0
0
0
0
<new macro>
0
Arial
0
9
1
....
0
0
0
0
0
0
BullettedTopicText
0
Arial
0
9
0
....
0
1
0
10
0
1
10
ImageLink
128
Arial
0
9
1
....
0
0
0
0
0
0
LineSpace5
0
Arial
0
5
1
....
0
0
0
0
0
0
LinkList
0
Arial
0
9
1
....
0
0
4
0
0
6
72
144
216
288
360
432
SeeAlsoLink
0
Arial
0
9
1
....
0
0
0
0
0
6
72
144
216
288
360
432
Table_2Col
0
Arial
0
9
1
....
0
0
0
0
0
1
99
TextTitle11
-16777208
Arial
0
11
1
B...
0
0
0
0
0
0
TextTitle9
0
Arial
0
9
0
B...
0
0
0
0
0
0
