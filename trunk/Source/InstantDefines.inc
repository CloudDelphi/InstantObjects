{$IFDEF VER130}
  {$DEFINE MSWINDOWS}
  {$DEFINE D5}
  {$DEFINE D5+}
{$ENDIF}

{$IFDEF VER140}
  {$DEFINE D5+}
  {$DEFINE D6}
  {$DEFINE D6+}
{$ENDIF}

{$IFDEF VER150}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7}
  {$DEFINE D7+}
{$ENDIF}

{$IFDEF VER170}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7+}
  {$DEFINE D9}
  {$DEFINE D9+}
{$ENDIF}

{$IFDEF VER180}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7+}
  {$DEFINE D9+}
  {$DEFINE D10}
  {$DEFINE D10+}
  {$DEFINE D10_OR_D11}
{$ENDIF}

{$IFDEF VER185}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7+}
  {$DEFINE D9+}
  {$DEFINE D10+}
  {$DEFINE D10_OR_D11}
  {$DEFINE D11}
  {$DEFINE D11+}
{$ENDIF}

{$IFDEF VER200}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7+}
  {$DEFINE D9+}
  {$DEFINE D10+}
  {$DEFINE D11+}
  {$DEFINE D12}
  {$DEFINE D12+}
{$ENDIF}

{$IFDEF VER210}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7+}
  {$DEFINE D9+}
  {$DEFINE D10+}
  {$DEFINE D11+}
  {$DEFINE D12+}
  {$DEFINE D14}
  {$DEFINE D14+}
{$ENDIF}

{$IFDEF VER220}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7+}
  {$DEFINE D9+}
  {$DEFINE D10+}
  {$DEFINE D11+}
  {$DEFINE D12+}
  {$DEFINE D14+}
  {$DEFINE D15}
  {$DEFINE D15+}
{$ENDIF}

{$IFDEF VER230}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7+}
  {$DEFINE D9+}
  {$DEFINE D10+}
  {$DEFINE D11+}
  {$DEFINE D12+}
  {$DEFINE D14+}
  {$DEFINE D15+}
  {$DEFINE D16}
  {$DEFINE D16+}
{$ENDIF}

// Delphi XE3
{$IFDEF VER240}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7+}
  {$DEFINE D9+}
  {$DEFINE D10+}
  {$DEFINE D11+}
  {$DEFINE D12+}
  {$DEFINE D14+}
  {$DEFINE D15+}
  {$DEFINE D16+}
  {$DEFINE D17}
  {$DEFINE D17+}
{$ENDIF}

// Delphi XE4
{$IFDEF VER250}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7+}
  {$DEFINE D9+}
  {$DEFINE D10+}
  {$DEFINE D11+}
  {$DEFINE D12+}
  {$DEFINE D14+}
  {$DEFINE D15+}
  {$DEFINE D16+}
  {$DEFINE D17+}
  {$DEFINE D18}
  {$DEFINE D18+}
{$ENDIF}

// Delphi XE5
{$IFDEF VER260}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7+}
  {$DEFINE D9+}
  {$DEFINE D10+}
  {$DEFINE D11+}
  {$DEFINE D12+}
  {$DEFINE D14+}
  {$DEFINE D15+}
  {$DEFINE D16+}
  {$DEFINE D17+}
  {$DEFINE D18+}
  {$DEFINE D19}
  {$DEFINE D19+}
{$ENDIF}

// Delphi XE6
{$IFDEF VER270}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7+}
  {$DEFINE D9+}
  {$DEFINE D10+}
  {$DEFINE D11+}
  {$DEFINE D12+}
  {$DEFINE D14+}
  {$DEFINE D15+}
  {$DEFINE D16+}
  {$DEFINE D17+}
  {$DEFINE D18+}
  {$DEFINE D19+}
  {$DEFINE D20}
  {$DEFINE D20+}
{$ENDIF}

// Delphi XE7
{$IFDEF VER280}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7+}
  {$DEFINE D9+}
  {$DEFINE D10+}
  {$DEFINE D11+}
  {$DEFINE D12+}
  {$DEFINE D14+}
  {$DEFINE D15+}
  {$DEFINE D16+}
  {$DEFINE D17+}
  {$DEFINE D18+}
  {$DEFINE D19+}
  {$DEFINE D20+}
  {$DEFINE D21}
  {$DEFINE D21+}
{$ENDIF}

{$IFDEF FPC}
  {$DEFINE D5+}
  {$DEFINE D6+}
  {$DEFINE D7+}
  {$DEFINE SUPPORTS_WIDESTRING}
  {$DEFINE SUPPORTS_INTERFACE}
  {$DEFINE SUPPORTS_INT64}
  {$DEFINE SUPPORTS_DYNAMICARRAYS}
  {$DEFINE SUPPORTS_DEFAULTPARAMS}
  {$DEFINE SUPPORTS_OVERLOAD}
  {$ASMMODE Intel}
  {$MODE DELPHI}
  {$UNDEF UseRegAsm}
{$ENDIF}

{$IFDEF D5}
  {$A+}
{$ELSE}
  {$A8}
{$ENDIF}

{$B-,C+,D+,E-,F-,G+,H+,I+,J-,K-,L+,M-,N+,O+,P+,Q-,R-,S-,T+,U-,V+,W-,X+,Y+,Z1}
{$MINSTACKSIZE $00004000}
{$MAXSTACKSIZE $00100000}
{$IMAGEBASE $00400000}

{$IFDEF D6+}
  {$WARN SYMBOL_DEPRECATED ON}
  {$WARN SYMBOL_LIBRARY ON}
  {$WARN SYMBOL_PLATFORM ON}
  {$WARN UNIT_LIBRARY ON}
  {$WARN UNIT_PLATFORM ON}
  {$WARN UNIT_DEPRECATED ON}
{$ENDIF}

{$IFDEF D7+}
  {$WARN HRESULT_COMPAT ON}
  {$WARN HIDING_MEMBER ON}
  {$WARN HIDDEN_VIRTUAL ON}
  {$WARN GARBAGE ON}
  {$WARN BOUNDS_ERROR ON}
  {$WARN ZERO_NIL_COMPAT ON}
  {$WARN STRING_CONST_TRUNCED ON}
  {$WARN FOR_LOOP_VAR_VARPAR ON}
  {$WARN TYPED_CONST_VARPAR ON}
  {$WARN ASG_TO_TYPED_CONST ON}
  {$WARN CASE_LABEL_RANGE ON}
  {$WARN FOR_VARIABLE ON}
  {$WARN CONSTRUCTING_ABSTRACT ON}
  {$WARN COMPARISON_FALSE ON}
  {$WARN COMPARISON_TRUE ON}
  {$WARN COMPARING_SIGNED_UNSIGNED ON}
  {$WARN COMBINING_SIGNED_UNSIGNED ON}
  {$WARN UNSUPPORTED_CONSTRUCT ON}
  {$WARN FILE_OPEN ON}
  {$WARN FILE_OPEN_UNITSRC ON}
  {$WARN BAD_GLOBAL_SYMBOL ON}
  {$WARN DUPLICATE_CTOR_DTOR ON}
  {$WARN INVALID_DIRECTIVE ON}
  {$WARN PACKAGE_NO_LINK ON}
  {$WARN PACKAGED_THREADVAR ON}
  {$WARN IMPLICIT_IMPORT ON}
  {$WARN HPPEMIT_IGNORED ON}
  {$WARN NO_RETVAL ON}
  {$WARN USE_BEFORE_DEF ON}
  {$WARN FOR_LOOP_VAR_UNDEF ON}
  {$WARN UNIT_NAME_MISMATCH ON}
  {$WARN NO_CFG_FILE_FOUND ON}
  {$WARN MESSAGE_DIRECTIVE ON}
  {$WARN IMPLICIT_VARIANTS ON}
  {$WARN UNICODE_TO_LOCALE ON}
  {$WARN LOCALE_TO_UNICODE ON}
  {$WARN IMAGEBASE_MULTIPLE ON}
  {$WARN SUSPICIOUS_TYPECAST ON}
  {$WARN PRIVATE_PROPACCESSOR ON}
  {$WARN UNSAFE_TYPE OFF}
  {$WARN UNSAFE_CODE OFF}
  {$WARN UNSAFE_CAST OFF}
{$ENDIF}

// "inline" keyword is available for D2005+
{$IFDEF D9+}
  {$DEFINE SUPPORTS_INLINE}
{$ENDIF}

{
  Define this symbol to cause InstantAllocMem and InstantFreeMem to pad
  allocated memory blocks with a guard area to detect buffer overruns.
  When this define is enabled. InstantFreeMem will check if the signature
  in the guard area has been changed and will raise an exception indicating
  memory corruption has occured. This was implemented to aid in identification
  of issues in the record buffer management in the InstantPresentation unit.
}
{.$DEFINE IO_MEM_OVERRUN_CHECK}

{
  Define this symbol to enable logging of all SQL statements to the debug
  console (via OutputDebugString - only on Windows) and to the procedure
  pointed by the InstantBrokers.InstantLogProc global variable.
}
{.$DEFINE IO_STATEMENT_LOGGING}

{
  Whenever a TInstantObject is destroyed, a check is performed to see if there
  are any objects that circularly refer to it, which should be destroyed as
  well. If you are sure that your object model doesn't allow circular
  references (as is the case with many object models, especially simple ones),
  you can define this symbol to gain a little speed in programs that create
  and destroy large quantities of objects.

  WARNING: If you disable the check, then every time your program frees an
  object with circular references, it will leak memory. You might not notice it
  unless you are using a memory leak detection tool such as FastMM.
  So please make sure your model doesn't allow any circular reference
  before enabling this define.

  Also, do it only if you actually need the speed gain, which is not significant
  in most cases.
}
{.$DEFINE IO_NO_CIRCULAR_REFERENCE_CHECK}


