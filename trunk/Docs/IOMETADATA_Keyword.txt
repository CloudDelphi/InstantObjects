Instant Objects V1.6.7 and
Object Foundry Expert V1.7 for ModelMaker versions 7 and 8.

17 Nov 2004
Provided by Steven Mitchell, Sydney Australia.
Minor Changes by Carlo Barazzetta, Milan Italy.

[Only tested with Delphi 7]
Please report all comments, suggestions etc. to the IO developments newsgroup.

This archive contains source code modifications that enables IO to read and write a Metadata identifier tag in the class metadata info as follows:

"{IOMETADATA " (without quotes but including trailing space).

IMPORTANT:
If you open an old project into Delphi IDE you receive this warning message:
"WARNING: Project XXX contains some class metadata without IOMETADATA keyword".
This check can fail if you have a comment starting with "{ stored" outside metadata definition of InstantObjects, or if you havent stored classes in one model unit.
Please correct your comment to "{stored ...." to bypass wrong check.

If you don't make those changes you cannot use InstantObjects project with ModelMaker.
If you change a class definition by the AttributeEditor your class is enforced to include IOMETADATA Keyword, so your code can have some classes with the IOMETADATA keyword and some classes without it.

WE RECCOMEND TO CHANGE YOUR CODE TO INCLUDE THIS NEW KEYWORD FOR FUTURE COMPATIBILITY OF 1.7 VERSION OF IO.

HOW TO INCLUDE IOMETADATA KEYWORD:

1. For MODELMAKER users only: make sure that the model is up to date then save and close Modelmaker. Copy the 'OFExpt.dll' file to the {$Modelmaker}\Experts folder. Make sure to backup any previous 'OFExpt.dll' file beforehand. Re-open Modelmaker. Re-generating the Delphi code from ModelMaker should update the model code units to include the new class metadata identifier tag. If this is successful then continue as usual. If all does not appear well then see clause 2.
Gerrit Beuze of Modelmaker has performed some tests with MM8 (as of 01 Nov 2004) and found that it worked OK.

2. For those that don't use MODELMAKER do the following with pre-existing IO projects. In the delphi IDE, the IO Model Explorer will now show "IOMETADATA expected" error. This is rectified by manually adding the metadata identifier tag, indicated above, to each model class interface. As this is done the IO Model Explorer will update itself automatically to indicate persistence again. When the modification to all model classes is complete usage should continue as normal.
