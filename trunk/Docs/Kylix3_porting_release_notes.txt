InstantObjects: Delphi -> Kylix 3 porting release notes (by Carlo Barazzetta)
=============================================================================
Updated: 21/05/2004.

Foreword (by Carlo Wolter)
--------------------------
I need to tell you two things.
The first is a partial "mea culpa" (forgive us!) by the Italian IO group, for having kept a number of developments quite secret in the last weeks. In fact, we have several english-impaired [;-)] programmers with a *lllot* of spare time, so we decided to let them express in Italian, so they could deliver...
We understand that the majority of you couldn't read Italian, so we promised a good English recap. Here it is.
The second is that there was a lot of discussions (more on this in English on this channel. Stay tuned!) and good results. The following will tell you what was done.
About this I need to solicit recognition to Carlo Barazzetta and Andrea Petrelli that devoted a lot of time (and their cute mind) to this task. They deserve the best applause we have...
They were helped and supported also by Nando Dessena, Uberto Barbini and Marco Cantù, among the others.
Now, on to the code!

InstantObjects on Kylix 3!
--------------------------
First of all, we tried to verify the compatibility level between Delphi7 and Kylix3, in order to evaluate the opportunity to keep a single code base.
After a little time, we decided to bet (heavily) on this, so...

A) Single dfm files & Delphi/Kylix incompatibilities

A.1) As you have surely noticed, a few properties are different between D7 & K3 forms, so the decision was made to avoid non-default values for these properties in dfm.
This allows for equally streamed dfms in D7 and K3.
The few incompatible properties are setup in the FormCreate event; the code is guarded by a duly $ifdef.

A.2) To preserve the correct background color, all the images need to be loaded at runtime in the ImageLists. They were aptly exported in resource files.

A.3) All fonts are set to ParentFont = True, and then set specifically in the FormCreate (a pretty crowded event handler!).

A.4) For all components managed by Anchors (DesignSize set in dfm), different techniques were used:
- Lower-right corner buttons are located on an 'alRight' ButtonsPanel into an 'alBottom' BottomPanel.
- For right-anchored edits, the OnResize event was written.
The result is: we have a single dfm file for Delphi7 *and* Kylix3! Cool, isn't it?

B) Single pas files

B.1) The uses clauses now have $IFDEF MSWINDOWS & $IFDEF LINUX separate sections.

WARNING!
To keep the cross-platform compatibility, every modification to IDE-integrated forms must follow these rules:
1) Always work in Delphi (Kylix introduces Delphi-incompatible properties in the dfm!)
2) Change fonts & colors *only* in code (.pas). This means: ParentFont & ParentColor = True (in .dfm)
3) Change BorderStyle only in code (.pas)
4) Use only Kylix-compatible components
5) Beware of TListViews! There are several pitfalls, due to implementation incompatibilities.

Primer on Kylix 3!
------------------
After having completed the Kylix version of IO, we started trying to port the Primer also.
Now the job is almost done! As you have surely noticed, the main feature of the Kylix port was to keep a single source code base along with the Delphi one.

So in the PrimerCross folder you'll find the cross-platform version.
The technique used is the same as before: a single dfm file and the incompatible properties dealt with at runtime. Only the HelpView form was duplicated (to HelpViewK3): a TTextBrowser was used instead of a TWebBrowser.

C) The new version uses *TFrames*

Yes, the hardest work in this porting was not related to IO!
In fact, in the Primer some TForms are put at runtime on a Panel of the Main form.
This approach is simply not applicable in Kylix, so the logic was changed to use TFrames instead. Caption and FormCreate are managed by hand.
	
D) Problem with an Image resource file

All ImageLists are filled at runtime from a resource file (as Forms in IDE).
Kylix couldn't be able to link this file in, and an error was generated (no clue about the real meaning), so the Images are loaded from external files.
Warning: to be able to compile PrimerK3.dpr, you need to install the TChart components (open edition), say, from Torry. If you aren't willing to, you can get away by excluding the PerformanceView unit from the project and delete all references to it in Main.

E) Connection Manager configuration file: now in XML!

At the same time, this other bonus was added. Now it's possible to save the Connection Manager config in a XML file, instead of the old binary (stream) file: you only need to specify sfXML as the FileFormat. At runtime you should do this before assigning FileName to the ConnectionManager (please see the commented-out example in main.pas).

F) Screenshots

As a little showdown preview, there are some screenshots of IO & Primer for Kylix3 at work on KDE. These are not cunning handicrafts!

G) Open issue(s)

- On Kylix the application version number (in the About box) is hard-coded. It would be cleaner to detect it at run time.

H) New Files List

- design/iodesK3.dpk: InstantObjects package for Kylix3
- source/images: the images used in the forms
- design/iodesimages.res: the same images
- core/connectionmanagerimages.res: the images used in the connection manager
- core/InstantImageUtils.pas: runtime loading routine for images from resources

I) Modified Files List

InstantObjects\Source\Brokers\
  iodbxK3.dpk            
  InstantDBX.pas         
  InstantDBXConnectionDefEdit.pas   
  InstantDBXConnectionDefEdit.dfm   

  InstantObjects\Source\Core\
  InstantCode.pas        
  InstantPresentation.pas   
  InstantPersistence.pas   
  InstantClasses.pas     
  InstantConnectionManager.dfm   
  InstantConnectionManager.pas   
  InstantImageUtils.pas   
  InstantExplorer.pas    
  InstantRtti.pas        
  iorunk3.dpk            
  iorun70.dpk            
  InstantUtils.pas       
  InstantTextFiler.pas   
	
InstantObjects\Source\Design\
  InstantAbout.dfm       
  InstantDesignResources.dfm   
  InstantDesignResources.pas   
  InstantAbout.pas       
  InstantCommandEditor.dfm   
  InstantClassEditor.dfm   
  InstantClassEditor.pas   
  InstantCommandEditor.pas   
  InstantAttributeEditor.dfm   
  InstantAttributeEditor.pas   
  InstantUnitSelect.dfm   
  InstantUnitSelect.pas   
  InstantModelExplorer.dfm   
  InstantModelExplorer.pas   
  iodes70.dpk            
  iodesK3.dpk            
  InstantWizard.pas      
  InstantModelExpert.pas   
  InstantDialog.dfm      
  InstantDialog.pas      
  InstantDesignTools.pas   
  InstantDesignUtils.pas   
  InstantEdit.dfm        
  InstantEdit.pas        
  InstantDualList.dfm    
  InstantDualList.pas    
